{"config": {"lang": ["en"], "separator": "[\\s\\u200b\\-]", "pipeline": ["stemmer"]}, "docs": [{"location": "", "title": "\u6b22\u8fce\ud83d\udc4f", "text": "<p>\u8fd9\u91cc\u662fxiu\u7684\u7b14\u8bb0\u672c\u54e6  \u03c3`\u2200\u00b4)\u03c3</p>"}, {"location": "courses/", "title": "\u8bfe\u7a0b", "text": ""}, {"location": "courses/accounting/", "title": "\u6210\u7ee9\u6784\u6210", "text": ""}, {"location": "courses/accounting/#_2", "title": "\u7ebf\u4e0a", "text": "<ol> <li>\u5355\u5143\u6d4b\u8bd5 + \u8bfe\u7a0b\u6d4b\u8bd5 + \u4f5c\u4e1a 30%</li> </ol>"}, {"location": "courses/accounting/#_3", "title": "\u7ebf\u4e0b", "text": "<ol> <li>\u8bfe\u5802\u8868\u73b0 10% \uff08\u8003\u52e4\u3001\u8bfe\u5802\u63d0\u95ee\u4e0e\u8ba8\u8bba\uff09</li> <li>\u671f\u672b\u8003\u8bd5 60% \uff08\u5355\u9009\u3001\u5224\u65ad\u3001\u4e1a\u52a1\u5904\u7406\u3001\u8ba1\u7b97\u5206\u6790\u9898\uff09</li> </ol>"}, {"location": "courses/accounting/1/1/", "title": "\u603b\u8bba", "text": ""}, {"location": "courses/accounting/1/1/#_2", "title": "\u4f1a\u8ba1\u5185\u6db5", "text": ""}, {"location": "courses/accounting/1/1/#_3", "title": "\u4f1a\u8ba1\u7684\u542b\u4e49", "text": "<p>\u4f1a\u8ba1\u662f\u4e00\u4e2a\u4ee5\u63d0\u4f9b\u8d22\u52a1\u4e3a\u4e3b\u7684\u7ecf\u6d4e\u4fe1\u606f\u7cfb\u7edf\uff0c\u662f\u7ecf\u6d4e\u7ba1\u7406\u7684\u91cd\u8981\u5de5\u5177\u3002</p> <ul> <li>\u505a\u4f1a\u8ba1\uff1a\u8bb0\u8d26\u3001\u63d0\u4f9b\u4f1a\u8ba1\u4fe1\u606f\uff08\u62a5\u8868\uff09</li> <li>\u7528\u4f1a\u8ba1\uff1a\u5229\u7528\u4fe1\u606f\u3001\u505a\u597d\u51b3\u7b56</li> </ul> <p>1-4\u6708\uff1a\u516c\u53f8\u516c\u5e03\u4e0a\u5e74\u5e74\u62a5\u82e5\u63a8\u8fdf\uff0c\u53ef\u80fd\u6709\u201c\u96be\u8a00\u4e4b\u9690\u201d\u3002</p> <p>\u4ea4\u6613\u6240\u5e02\u573a\uff1a\u6caa\u3001\u6df1</p> <ul> <li>\u8425\u4e1a\u6536\u5165<ul> <li>\u4e3b\u8425\u4e1a\u52a1\u6536\u5165\uff08\u4ea7\u54c1\u5229\u6da6\u6536\u5165\uff09</li> <li>\u5176\u4ed6\u4e1a\u52a1\u6536\u5165</li> </ul> </li> <li>\u8425\u4e1a\u5916\u6536\u5165<ul> <li>\u8865\u52a9\u6536\u5165</li> </ul> </li> </ul> <p>Note</p> <p>\u533a\u5206\u201c\u5e94\u6536\u5e10\u6b3e\u201d\u548c\u201c\u73b0\u91d1\u201d\uff0c\u5e94\u6536\u5e10\u6b3e\u5e76\u4e0d\u662f\u5f53\u573a\u652f\u4ed8\uff0c\u76ee\u524d\u672a\u6536\u5230\u3002\u73b0\u91d1\u7684\u8bf4\u670d\u529b &gt; \u5e94\u6536\u8d26\u6b3e\u3002</p> <p>ST:\u88ab\u7279\u522b\u5904\u7406 </p> <ul> <li>\u4e24\u5e74\u4e8f\u635f:ST </li> <li>\u4e09\u56db\u5e74\u4e8f\u635f:\u9000\u5e02</li> </ul> <p>\u65b0\u89c4\uff1a\u6700\u8fd1\u4e00\u4e2a\u4f1a\u8ba1\u5e74\u5ea6\u7ecf\u5ba1\u8ba1\u51c0\u6536\u5165\u5c0f\u4e8e\u96f6\uff0c\u4e14\u8425\u6536\u989d\u4f4e\u4e8e1\u4ebf\u5143\uff0c\u9000\u5e02\u3002</p> <p>IPO\u8981\u6c42\u8fde\u7eed3\u5e74\u63d0\u4ea4\u62a5\u8868\u4f9b\u4ea4\u6613\u6240\u5ba1\u6838\u3002</p> <p>\u4f1a\u8ba1\u62a5\u8868\uff1a</p> <ol> <li>\u8d44\u4ea7\u8d1f\u503a\u8868\uff1a\u53cd\u5e94\u8d22\u52a1\u72b6\u51b5\uff08\u6708\u62a5\uff0c\u5e74\u62a5\uff09</li> <li>\u5229\u6da6\u8868\uff1a\u53cd\u5e94\u7ecf\u8425\u6210\u679c\uff08\u6708\u62a5\uff0c\u5e74\u62a5\uff09</li> <li>\u73b0\u91d1\u6d41\u91cf\u8868\uff1a\u53cd\u5e94\u73b0\u91d1\u6d41\u91cf\u8868\uff08\u6708\u62a5\uff0c\u5e74\u62a5\uff09</li> <li>\u6240\u6709\u8005\u6743\u76ca\u53d8\u52a8\u8868\uff1a\u53cd\u5e94\u6240\u6709\u8005\u6743\u76ca\u53d8\u52a8\uff08\u5e74\u62a5\uff09</li> </ol> <p></p> <p>\u4e09\u5927\u8981\u7d20\uff1a</p> <ol> <li>\u8d44\u4ea7</li> <li>\u8d1f\u503a</li> <li>\u6240\u6709\u8005\u6743\u76ca\uff08\u51c0\u8d44\u4ea7\uff09</li> </ol> <p>\u8fd9\u4e09\u8005\u4e3a\u9759\u6001\u8981\u7d20\u3002</p> <p>Note</p> <p>\u8d44\u4ea7 = \u8d1f\u503a + \u6240\u6709\u8005\u6743\u76ca</p> <p></p> <p>Note</p> <p>\u6536\u5165 - \u8d39\u7528 = \u5229\u6da6</p> <p>\u8fd9\u4e09\u8005\u4e3a\u52a8\u6001\u8981\u7d20\u3002</p>"}, {"location": "courses/accounting/1/1/#_4", "title": "\u4f1a\u8ba1\u5bf9\u8c61", "text": "<p>\u4ee5\u8d27\u5e01\u8ba1\u91cf\u7684\u7ecf\u6d4e\u6d3b\u52a8\u5373\u8d44\u91d1\u8fd0\u52a8\u662f\u4f01\u4e1a\u4f1a\u8ba1\u7684\u5bf9\u8c61\u3002</p> <p>\u7f3a\u9677\uff1a\u53ea\u6709\u80fd\u4ee5\u8d27\u5e01\u8ba1\u91cf\u7684\u7ecf\u6d4e\u6d3b\u52a8\u624d\u53ef\u8bb0\u5f55\u3002</p> <ol> <li> <p>\u8d44\u91d1\u8fdb\u5165\u4f01\u4e1a</p> </li> <li> <p>\u8d44\u91d1\u7684\u5faa\u73af\u5468\u8f6c\uff1aG \u2014\u2014 w --- p --- w' \u2014\u2014 G' \uff0c\u8868\u73b0\u4e3a\u4f9b\u5e94\u3001\u751f\u4ea7\u3001\u9500\u552e\u8fc7\u7a0b\uff0c\u5176\u4ef7\u503c\u53d1\u751f\u4e86\u4e24\u79cd\u53d8\u5316\uff1a</p> <ul> <li>\u8d44\u91d1\u7684\u5f62\u6001\u53d8\u5316</li> <li>\u4ef7\u503c\u7684\u589e\u503c</li> </ul> </li> <li> <p>\u8d44\u91d1\u9000\u51fa\u4f01\u4e1a</p> </li> </ol> <p>Tip</p> <p>\u8fdb\u5165 \u2014\u2014 G \u2014\u2014 w --- p --- w' \u2014\u2014 G' \u2014\u2014 \u9000\u51fa</p> <p>\u8d27\u5e01\u8d44\u91d1 \u50a8\u5907\u8d44\u91d1 \u751f\u4ea7\u8d44\u91d1 \u4ea7\u54c1\u8d44\u91d1 \u8d27\u5e01\u8d44\u91d1</p> <p>\u5148\u7f16\u5229\u6da6\u8868\uff0c\u518d\u7f16\u8d44\u4ea7\u8d1f\u503a\u8868\u3002</p>"}, {"location": "courses/accounting/1/1/#_5", "title": "\u4f1a\u8ba1\u7684\u4e3b\u8981\u5185\u5bb9", "text": "<ol> <li>\u4f1a\u8ba1\u539f\u7406</li> <li>\u5404\u8981\u7d20\u7684\u786e\u8ba4\u3001\u8ba1\u91cf\u3001\u8bb0\u5f55</li> <li>\u4f01\u4e1a\u8d22\u52a1\u62a5\u544a\u7684\u7f16\u5236\u4e0e\u5206\u6790</li> </ol>"}, {"location": "courses/accounting/1/1/#_6", "title": "\u4f1a\u8ba1\u51c6\u5219", "text": ""}, {"location": "courses/accounting/1/1/#_7", "title": "\u4f1a\u8ba1\u5047\u8bbe", "text": ""}, {"location": "courses/accounting/1/1/#_8", "title": "\u542b\u4e49", "text": "<p>\u6b63\u5e38\u4f1a\u8ba1\u6d3b\u52a8\u7684\u524d\u63d0\u6761\u4ef6\u3002</p>"}, {"location": "courses/accounting/1/1/#_9", "title": "\u5185\u5bb9", "text": "<p>\u56db\u5927\u524d\u63d0\uff08\u56db\u5927\u5047\u8bbe\uff09</p> <ol> <li>\u4f1a\u8ba1\u4e3b\u4f53\u5047\u8bbe \u67093\u4e2a\u4e25\u683c\u533a\u5206<ol> <li>\u4f1a\u8ba1\u4e3b\u4f53\u4e0e\u4e3b\u4f53\u6240\u6709\u8005\uff08\u501f\u6b3e\uff09</li> <li>\u4f1a\u8ba1\u4e3b\u4f53\u4e0e\u4e3b\u9898\u53d1\u751f\u7ecf\u6d4e\u5173\u7cfb\u7684\u522b\u7684\u4e3b\u4f53\uff08\u91c7\u8d2d\u4e0e\u9500\u552e\uff09</li> <li>\u4f1a\u8ba1\u4e3b\u4f53\u4e0e\u6cd5\u5f8b\u4e3b\u4f53\uff08\u5408\u4f19\u4f01\u4e1a\u662f\u4f1a\u8ba1\u4e3b\u4f53\u4f46\u4e0d\u662f\u6cd5\u5f8b\u4e3b\u4f53\uff09</li> </ol> </li> <li> <p>\u6301\u7eed\u7ecf\u8425\u5047\u8bbe \uff08\u9664\u975e\u6709\u660e\u786e\u7684\u53cd\u8bc1\u8981\u7ec8\u6b62\u7ecf\u8425\u6d3b\u52a8...\uff09</p> <p>\u8981\u6c42\uff1a\u6301\u7eed\u7ecf\u8425\u72b6\u6001\u4e0e\u6e05\u7b97\u72b6\u6001\u5e94\u91c7\u7528\u5b8c\u5168\u4e0d\u540c\u7684\u4f1a\u8ba1\u5904\u7406\u65b9\u6cd5\u3002</p> </li> <li> <p>\u4f1a\u8ba1\u5206\u671f\u5047\u8bbe</p> </li> <li>\u8d27\u5e01\u8ba1\u91cf\u548c\u5e01\u503c\u4e0d\u53d8\u5047\u8bbe</li> </ol> <ul> <li>\u4f1a\u8ba1\u5206\u671f\u662f\u6301\u7eed\u7ecf\u8425\u7684\u5fc5\u7136\u7ed3\u679c</li> <li>\u4f1a\u8ba1\u5206\u671f\u662f\u5bf9\u4f1a\u8ba1\u6838\u7b97\u65f6\u95f4\u8303\u56f4\u7684\u5177\u4f53\u5212\u5206</li> <li>\u4f1a\u8ba1\u4e3b\u4f53\uff1a\u80fd\u8fdb\u884c\u6838\u7b97</li> </ul> <p>\u6cd5\u5f8b\u4e3b\u4f53\uff1a\u80a1\u4efd\u6709\u9650\u516c\u53f8</p>"}, {"location": "courses/accounting/1/1/#_10", "title": "\u7f3a\u9677", "text": "<p>\u56db\u5927\u5047\u8bbe\u8bf4\u660e\u4f1a\u8ba1\u4fe1\u606f\u6709\u54ea\u4e9b\u7f3a\u9677\uff1f</p> <ul> <li>\u53ea\u53cd\u6620\u67d0\u4e2a\u4e3b\u4f53</li> <li>\u53ea\u53cd\u6620\u5386\u53f2\u4ef7\u503c</li> <li>\u53ea\u53cd\u6620\u67d0\u4e2a\u671f\u95f4</li> <li>\u53ea\u53cd\u6620\u8d27\u5e01\u4fe1\u606f</li> </ul>"}, {"location": "courses/accounting/1/1/#_11", "title": "\u4f1a\u8ba1\u4fe1\u606f\u8d28\u91cf\u8981\u6c42", "text": "<ol> <li>\u53ef\u9760\u6027\uff1a\u5ba2\u89c2\u771f\u5b9e</li> <li>\u76f8\u5173\u6027</li> <li>\u53ef\u7406\u89e3\u6027\uff1a\u6e05\u6670\u660e\u4e86</li> <li>\u53ef\u6bd4\u6027\uff1a\u4f1a\u8ba1\u5904\u7406\u7684\u65b9\u6cd5\u5e94\u5f53\u524d\u540e\u671f\u4e00\u81f4\uff1b\u4e0d\u540c\u4f1a\u8ba1\u4e3b\u4f53\u7684\u4fe1\u606f\u5e94\u4e92\u76f8\u53ef\u6bd4</li> <li>\u5b9e\u8d28\u91cd\u4e8e\u5f62\u5f0f\uff1a\u6309\u7167\u5b9e\u8d28\u8fdb\u884c\u6838\u7b97</li> <li>\u91cd\u8981\u6027\uff1a\u63d0\u4f9b\u4e00\u5207\u6709\u7528\u7684\u91cd\u8981\u4fe1\u606f</li> <li>\u8c28\u614e\u6027\uff1a\u5bf9\u4e8e\u6536\u5165\u3001\u8d39\u7528\u5904\u7406\u6301\u7a33\u5065\u6001\u5ea6</li> <li>\u53ca\u65f6\u6027\uff1a\u6309\u89c4\u5b9a\u671f\u9650</li> </ol> <p>Note</p> <p>\u76f8\u5173\u6027\u6709\u65f6\u4f1a\u5f71\u54cd\u53ef\u9760\u6027\uff0c\u8981\u517c\u987e\u3002   \u7b2c\u4e00\u5e74\u5de8\u4e8f\uff0c\u7b2c\u4e8c\u5e74\u76c8\u5229\uff1a\u4f7f\u7528\u635f\u5931\u8ba1\u63d0   \u6298\u65e7\u5e74\u9650\u4e0b\u964d\uff0c\u53cc\u500d\u4f59\u989d\u9012\u51cf\u6cd5\uff08\u52a0\u901f\u6298\u65e7\uff09\uff1a\u538b\u4f4e\u5229\u6da6\uff08\u4e1a\u7ee9\u597d\u7684\u65f6\u5019\u4f4e\u8c03\u4e00\u70b9\uff09 \u552e\u540e\u56de\u8d2d\u4e0d\u80fd\u7b97\u9500\u552e \u6750\u6599\u9886\u7528\uff1a\u5148\u8fdb\u5148\u51fa\u6cd5\uff1b\u52a0\u6743\u5e73\u5747\u6cd5</p>"}, {"location": "courses/accounting/1/1/#_12", "title": "\u4f1a\u8ba1\u786e\u8ba4\u7684\u57fa\u7840", "text": ""}, {"location": "courses/accounting/1/1/#_13", "title": "\u6536\u4ed8\u5b9e\u73b0\u5236", "text": "<p>\u4ee5\u5b9e\u9645\u6536\u5230\u6216\u652f\u4ed8\u73b0\u91d1\u4f5c\u4e3a\u786e\u8ba4\u6536\u5165\u548c\u8d39\u7528\u5f52\u5c5e\u671f\u95f4\u7684\u6807\u51c6\u3002</p> <p>Warning</p> <p>\u57fa\u672c\u6dd8\u6c70</p>"}, {"location": "courses/accounting/1/1/#_14", "title": "\u6743\u8d23\u53d1\u751f\u5236\u539f\u5219", "text": "<p>\u4ee5\u6743\u5229\u3001\u8d23\u4efb\u7684\u53d1\u751f\u4f5c\u4e3a\u786e\u8ba4\u6536\u5165\u548c\u8d39\u7528\u5f52\u5c5e\u671f\u95f4\u7684\u6807\u51c6\u3002</p> <p>\u8981\u6c42\uff1a\u8de8\u671f\u7684\u6536\u5165\u8d39\u7528\uff0c\u5e94\u91c7\u7528\u7279\u6b8a\u7a0b\u5e8f\u548c\u65b9\u6cd5\u8bb0\u5f55\u548c\u5206\u914d\u3002</p> <p>Note</p> <p>\u6536\u5165\u5f52\u5c5e\u671f\u662f\u4f01\u4e1a\u63d0\u4f9b\u670d\u52a1\u7684\u4f1a\u8ba1\u671f\u95f4 \u8d39\u7528\u5f52\u5c5e\u671f\u662f\u4f01\u4e1a\u83b7\u5f97\u5229\u76ca\u7684\u4f1a\u8ba1\u671f\u95f4</p> \u4e1a\u52a1 \u6743\u8d23\u53d1\u751f\u5236 \u6536\u4ed8\u5b9e\u73b0\u5236 \u9500\u552eA20\u4ef6\uff0c\u5355\u4ef7500\uff0c\u6536\u5b58\u94f6\u884c 10000 10000 \u9500\u552eA20\u4ef6\uff0c\u5355\u4ef7500\uff0c\u8d37\u6b3e\u672a\u6536 10000 X \u9884\u6536\u8d2d\u4e70\u5355\u4f4d\u8d37\u6b3e5000\uff0c\u5b58\u5165\u94f6\u884c X 5000 1\u6708\u4ee5\u5b58\u6b3e\u652f\u4ed8\u672c\u5b63\u5ea6\u79df\u91d1900\u5143 300 900"}, {"location": "courses/accounting/1/1/#_15", "title": "\u4f1a\u8ba1\u8ba1\u91cf\u5c5e\u6027", "text": ""}, {"location": "courses/accounting/1/1/#_16", "title": "\u7c7b\u522b", "text": "<ol> <li>\u5386\u53f2\u6210\u672c\uff08\u5b9e\u9645\u6210\u672c\uff09</li> <li>\u91cd\u7f6e\u6210\u672c\uff08\u73b0\u884c\u6210\u672c\uff09</li> <li>\u53ef\u53d8\u73b0\u51c0\u503c</li> <li>\u516c\u5141\u4ef7\u503c</li> </ol>"}, {"location": "courses/accounting/1/1/#_17", "title": "\u5e94\u7528\u539f\u5219", "text": "<p>\u4e00\u822c\u91c7\u7528\u5386\u53f2\u6210\u672c\u3002\u91c7\u7528...\u7684\uff0c\u5e94\u5f53\u4fdd\u8bc1\u6240\u786e\u5b9a\u7684\u4f1a\u8ba1\u8981\u7d20\u91d1\u989d\u80fd\u591f\u53d6\u5f97\u5e76\u53ef\u9760\u8ba1\u91cf\u3002</p>"}, {"location": "courses/accounting/2/2/", "title": "\u7b2c\u4e00\u7ae0", "text": ""}, {"location": "courses/accounting/2/2/#_1", "title": "\u4f1a\u8ba1\u8981\u7d20", "text": "<p>Tip</p> <p>\u8be6\u7ec6\u5185\u5bb9\u89c1dzq\u7684\u7b14\u8bb0</p>"}, {"location": "courses/accounting/2/2/#_2", "title": "\u8d44\u4ea7\uff08\u6743\u5229\uff09", "text": "<ul> <li>\u8d44\u4ea7<ul> <li>\u6d41\u52a8\u8d44\u4ea7<ul> <li>\u8d27\u5e01\u8d44\u91d1</li> <li>\u4ea4\u6613\u884c\u91d1\u878d\u8d44\u4ea7</li> <li>\u5e94\u6536\u53ca\u9884\u4ed8\u6b3e\u9879</li> <li>\u5b58\u8d27</li> </ul> </li> <li>\u975e\u6d41\u52a8\u8d44\u4ea7<ul> <li>\u56fa\u5b9a\u8d44\u4ea7</li> <li>\u5728\u5efa\u5de5\u7a0b</li> <li>\u503a\u5238\u6295\u8d44</li> <li>\u957f\u671f\u80a1\u6743\u6295\u8d44</li> <li>\u65e0\u5f62\u8d44\u4ea7</li> </ul> </li> </ul> </li> </ul> <p>\u6d41\u52a8\u6027</p> <ul> <li>\u53d8\u73b0\u80fd\u529b</li> <li>\u88ab\u8017\u7528\u65f6\u95f4</li> </ul> <p>\u6536\u5165\u65b9\u5f0f\uff1a 1. \u94f6\u884c\u5b58\u6b3e+   2. \u5e94\u6536\u7968\u636e+   3. \u5e94\u6536\u5e10\u6b3e+    </p> <p>\u5224\u65ad</p> <ol> <li>\u7532\u4f01\u4e1a\u4ece\u4e59\u4f01\u4e1a\u5904\u83b7\u5f97\u5c06\u6765\u5141\u8bb8\u5176\u751f\u4ea7\u4e59\u4f01\u4e1a\u8bbe\u8ba1\u7684\u4ea7\u54c1\u7684\u6743\u76ca\uff0c\u6709\u6548\u671f\u4e09\u5e74\u3002\u9884\u671f\u7532\u4f01\u4e1a\u751f\u4ea7\u7684\u8fd9\u79cd\u65b0\u4ea7\u54c1\u80fd\u589e\u52a0\u4f01\u4e1a\u7684\u7684\u5229\u6da6\u3002\u2705 \uff08\u8d2d\u4e70\u4e13\u5229\uff09</li> <li>\u7532\u4f01\u4e1a\u62db\u4e86\u4e00\u4e2a\u7ecf\u7406\u521b\u9020\u4ef7\u503c \u274c\uff08\u65e0\u6cd5\u8ba1\u91cf\uff09</li> <li>\u8d2d\u4e70\u4e86\u4e00\u4e2a\u8bbe\u5907\uff0c\u6bcf\u5e74\u63d0\u4f9b10000\u5143\u4ea7\u54c1\u4f9b\u5e94\u5e02\u573a\u3002\u6b64\u8bbe\u5907\u662f\u5411\u94f6\u884c\u501f\u6b3e\u652f\u4ed8\u7684\u3002\u2705</li> <li>\u5ba2\u6237\u6b20\u7532\u4f01\u4e1a1000\u5143\u8d37\u6b3e\uff0c\u4f46\u5ba2\u6237\u7834\u4ea7\uff0c\u4f01\u4e1a\u53d7\u4e0d\u5230\u4e86 \u274c\uff08\u65e0\u6cd5\u5e26\u6765\u7ecf\u6d4e\u5229\u76ca\uff09</li> </ol>"}, {"location": "courses/accounting/2/2/#_3", "title": "\u8d1f\u503a\uff08\u4e49\u52a1\uff09", "text": "<ul> <li>\u8d1f\u503a<ul> <li>\u6d41\u52a8\u8d1f\u503a<ul> <li>\u77ed\u671f\u501f\u6b3e\uff08\u4e00\u5e74\u4ee5\u5185\uff09</li> <li>\u5e94\u4ed8\u53ca\u9884\u6536\u6b3e\u9879\uff1a\u5e94\u4ed8\u7968\u636e\u3001\u5e94\u4ed8\u8d26\u6b3e\u3001\u9884\u6536\u8d26\u6b3e\u3001\u5176\u4ed6\u5e94\u4ed8\u6b3e\uff08\u9664\u9500\u552e\u91c7\u8d2d\u4ee5\u5916\u5360\u7528\u88ab\u4eba\u7684\u94b1\uff09\u3001\u5e94\u4ed8\u80a1\u5229\u3001\u5e94\u4ed8\u5229\u606f</li> <li>\u5e94\u4ed8\u5458\u5de5\u85aa\u916c\uff1a</li> <li>\u5e94\u4ea4\u7a0e\u8d39</li> </ul> </li> <li>\u957f\u671f\u8d1f\u503a<ul> <li>\u957f\u671f\u501f\u6b3e</li> <li>\u5e94\u4ed8\u503a\u5238</li> <li>\u957f\u671f\u5e94\u4ed8\u6b3e</li> </ul> </li> </ul> </li> </ul> <p>\u6d41\u52a8\u8d1f\u503a\u591a\uff0c\u8fd8\u503a\u538b\u529b\u5927\uff0c\u4f01\u4e1a\u98ce\u9669\u9ad8\u3002</p> <p>Tip</p> <p>\u5411\u94f6\u884c\u501f\u6b3e\u4e00\u5343\u4e07\uff1a 1. \u77ed\u671f\u501f\u6b3e\u589e\u52a01000\u4e07 2. \u94f6\u884c\u5b58\u6b3e\u589e\u52a01000\u4e07\uff08\u4e0d\u7b97\u8d27\u5e01\u8d44\u91d1\uff09</p> <p>\u91c7\u8d2d\u539f\u6750\u6599\uff0c\u8d27\u6b3e500\u4e07\u672a\u4ed8\uff1a \u7b2c\u4e00\u79cd\u53ef\u80fd\uff1a   1. \u539f\u6750\u6599\u589e\u52a0500\u4e07 2. \u5e94\u4ed8\u8d26\u6b3e\u589e\u52a0500\u4e07</p> <p>\u7b2c\u4e8c\u79cd\u53ef\u80fd\uff1a   1. \u539f\u6750\u6599\u589e\u52a0500\u4e07 2. \u5e94\u6536\u7968\u636e\u589e\u52a0500\u4e07</p> <p>\u7b2c\u4e09\u79cd\u53ef\u80fd\uff1a   1. \u539f\u6750\u6599\u589e\u52a0500\u4e07 2. \u94f6\u884c\u5b58\u6b3e\u51cf\u5c11500\u4e07</p> <p>\u7b2c\u56db\u79cd\u53ef\u80fd\uff1a   1. \u539f\u6750\u6599\u589e\u52a0500\u4e07 2. \u9884\u4ed8\u8d26\u6b3e\u51cf\u5c11500\u4e07</p> <p>\u63a7\u5236\u80fd\u529b\uff1a\u4e00&gt;\u4e8c&gt;\u4e09&gt;\u56db \uff08\u7ade\u4e89\u80fd\u529b\u5f3a\uff09</p> <p>\u8d1f\u503a\u8d8a\u5c11\u8d8a\u597d\uff1f\u274c \u8d1f\u503a\u662f\u6760\u6746\u5de5\u5177\uff0c\u653e\u5927\u80a1\u4e1c\u94b1\u7684\u4f5c\u7528</p> <p>Note</p> <p>\u5176\u4ed6\u5e94\u4ed8\u6b3e\uff1a\u9664\u9500\u552e\u91c7\u8d2d\u4ee5\u5916\u5360\u7528\u4e86\u522b\u4eba\u7684\u94b1 \u5176\u4ed6\u5e94\u6536\u6b3e\uff1a\u9664\u9500\u552e\u91c7\u8d2d\u4ee5\u5916\u88ab\u522b\u4eba\u5360\u7528\u7684\u94b1</p>"}, {"location": "courses/accounting/2/2/#_4", "title": "\u6240\u6709\u8005\u6743\u76ca", "text": "<ul> <li>\u6240\u6709\u8005\u6743\u76ca<ul> <li>\u5b9e\u6536\u8d44\u672c\uff08\u6295\u8d44\u8005\u6295\u5165\u7684\u8d44\u672c\uff09//\u8d44\u672c</li> <li>\u8d44\u672c\u516c\u79ef //\u8d44\u672c</li> <li>\u76c8\u4f59\u516c\u79ef\uff08\u4ece\u51c0\u5229\u6da6\u4e2d\u63d0\u53d6\uff09 //\u5229\u6da6</li> <li>\u672a\u5206\u914d\u5229\u6da6  //\u5229\u6da6</li> </ul> </li> </ul> <p>\u8d44\u672c\u516c\u79ef\u5f62\u6210\u7684\u4e3b\u8981\u9014\u5f84\u4e3e\u4f8b\uff1a\u8d44\u672c\u6ea2\u4ef7</p> <p>Example</p> <p>\u539f\u80a1\u4e1c2\u4eba\uff0c3\u5e74\u524d\u5404\u6295\u5165100\u4e07\u3002\u65b0\u80a1\u4e1c\u60f3\u53601/3\u80a1\u4efd\uff0c\u6295\u5165130\u4e07\u3002  \u6b64\u65f6\uff1a 1. \u5b9e\u6536\u8d44\u672c+100\u4e07  2. \u8d44\u672c\u516c\u79ef+30\u4e07   3. \u94f6\u884c\u5b58\u6b3e+130\u4e07   </p>"}, {"location": "courses/accounting/2/2/#_5", "title": "\u6536\u5165\uff08\u53ca\u5229\u5f97\uff09", "text": "<ul> <li>\u6536\u5165<ul> <li>\u4e3b\u8425\u4e1a\u52a1\u6536\u5165</li> <li>\u5176\u4ed6\u4e1a\u52a1\u6536\u5165\uff08\u5305\u88c5\u7269\u51fa\u79df\u3001\u56fa\u5b9a\u8d44\u4ea7\u51fa\u79df\u7684\u79df\u91d1\u6536\u5165\uff09</li> <li>\u6295\u8d44\u6536\u5165</li> <li>\u8425\u4e1a\u5916\u6536\u5165\uff08\u5982\u7f5a\u6b3e\u6536\u5165\u3001\u653f\u5e9c\u8865\u8d34\u6536\u5165\uff09</li> </ul> </li> </ul>"}, {"location": "courses/accounting/2/2/#_6", "title": "\u8d39\u7528\uff08\u53ca\u635f\u5931\uff09", "text": "<ul> <li>\u8d39\u7528<ul> <li>\u751f\u4ea7\u8fc7\u7a0b\u4e2d\u7684\u8d39\u7528<ul> <li>\u751f\u4ea7\u6210\u672c\uff08\u76f4\u63a5\u8d39\u7528\uff09\u539f\u6750\u6599</li> <li>\u5236\u9020\u8d39\u7528\uff08\u95f4\u63a5\u8d39\u7528\uff09\u8f66\u95f4\u4e3b\u4efb\u5de5\u8d44\u3001\u7167\u660e\u8d39\u7528\u3001\u6298\u65e7\u8d39\u7528</li> </ul> </li> <li>\u7ba1\u7406\u8fc7\u7a0b\u4e2d\u7684\u8d39\u7528\uff1a\u7ba1\u7406\u8d39\u7528</li> <li>\u9500\u552e\u8fc7\u7a0b\u4e2d\u7684\u8d39\u7528\uff1a\u9500\u552e\u8d39\u7528</li> <li>\u7b79\u8d44\u8fc7\u7a0b\u4e2d\u7684\u8d39\u7528\uff1a\u8d22\u52a1\u8d39\u7528</li> <li>\u5176\u4ed6\u4e1a\u52a1\u6210\u672c</li> <li>\u8d44\u4ea7\u51cf\u503c\u635f\u5931</li> <li>\u516c\u5141\u4ef7\u503c\u53d8\u52a8\u635f\u76ca\uff08\u65e2\u53ef\u4f5c\u4e3a\u5229\u5f97\uff0c\u4e5f\u53ef\u4f5c\u4e3a\u635f\u76ca\uff09</li> <li>\u7a0e\u91d1\u8d39\u7528\uff1a\u6240\u5f97\u7a0e\u8d39\u7528\u3001\u7a0e\u91d1\u53ca\u9644\u52a0</li> <li>\u8425\u4e1a\u5916\u652f\u51fa</li> </ul> </li> </ul> <p>\u751f\u4ea7\u8fc7\u7a0b\u4e2d\u7684\u8d39\u7528\u53ea\u6709\u5728\u4ea7\u54c1\u9500\u552e\u540e\u624d\u4f1a\u6210\u4e3a\u4e0e\u5229\u6da6\u76f8\u5173\u7684\u8d39\u7528\u3002</p> <p> </p>"}, {"location": "courses/accounting/2/2/#_7", "title": "\u5229\u6da6", "text": "<ol> <li>\u51c0\u5229\u6da6 = \u5229\u6da6\u603b\u989d - \u6240\u5f97\u7a0e\u8d39\u7528</li> <li>\u5229\u6da6\u603b\u989d = \u8425\u4e1a\u5229\u6da6 + \u8425\u4e1a\u5916\u6536\u5165 - \u8425\u4e1a\u5916\u652f\u51fa</li> <li>\u8425\u4e1a\u5229\u6da6 = \u8425\u4e1a\u6536\u5165 - \u8425\u4e1a\u6210\u672c - \u7a0e\u91d1\u53ca\u9644\u52a0 - \u7ba1\u7406\u8d39\u7528 - \u9500\u552e\u8d39\u7528 - \u8d22\u52a1\u8d39\u7528 + \u6295\u8d44\u6536\u76ca + \u516c\u5141\u4ef7\u503c\u53d8\u52a8\u6536\u76ca + \u8d44\u4ea7\u51cf\u503c\u635f\u5931\uff08\u635f\u5931\u7528\u8d1f\u6570\u8868\u793a\uff09</li> </ol>"}, {"location": "courses/accounting/2/2/#_8", "title": "\u4f1a\u8ba1\u7b49\u5f0f", "text": "<p> \u8d44\u4ea7 = \u8d1f\u503a + \u6240\u6709\u8005\u6743\u76ca + \uff08\u6536\u5165 - \u8d39\u7528\uff09\u3010\u6700\u7ec8\u53d8\u6210\u6240\u6709\u8005\u6743\u76ca\u91cc\u7684\u672a\u5206\u914d\u5229\u6da6\u548c\u76c8\u4f59\u79ef\u91d1\u3011 </p>"}, {"location": "courses/accounting/3/3/", "title": "\u4f1a\u8ba1\u8981\u7d20\u4e0e\u590d\u5f0f\u8bb0\u8d26", "text": ""}, {"location": "courses/accounting/3/3/#_2", "title": "\u4f1a\u8ba1\u79d1\u76ee\u4e0e\u8d26\u6237", "text": ""}, {"location": "courses/accounting/3/3/#_3", "title": "\u4f1a\u8ba1\u79d1\u76ee", "text": "<p>\u603b\u5206\u7c7b\u79d1\u76ee\u548c\u660e\u7ec6\u5206\u7c7b\u79d1\u76ee</p>"}, {"location": "courses/accounting/3/3/#_4", "title": "\u8d26\u6237", "text": ""}, {"location": "courses/accounting/3/3/#_5", "title": "\u501f\u8d37\u590d\u5f0f\u8bb0\u8d26\u6cd5", "text": ""}, {"location": "courses/accounting/3/3/#_6", "title": "\u590d\u5f0f\u8bb0\u8d26\u6cd5", "text": ""}, {"location": "courses/accounting/3/3/#_7", "title": "\u501f\u8d37\u590d\u5f0f\u8bb0\u8d26\u6cd5", "text": "\u501f\u65b9 \u8d37\u65b9 <p> \u8d44\u4ea7\u7c7b\u8d26\u6237\u671f\u672b\u4f59\u989d = \u671f\u521d\u4f59\u989d + \u672c\u671f\u501f\u65b9\u53d1\u751f\u989d - \u672c\u671f\u8d37\u65b9\u53d1\u751f\u989d   \u8d1f\u503a\u548c\u6240\u6709\u8005\u6743\u76ca\u7c7b\u8d26\u6237\u671f\u672b\u4f59\u989d = \u671f\u521d\u4f59\u989d + \u672c\u671f\u8d37\u65b9\u53d1\u751f\u989d - \u672c\u671f\u501f\u65b9\u53d1\u751f\u989d </p> \u8d44\u4ea7\u7c7b \u8d1f\u503a\u548c\u6240\u6709\u8005\u6743\u76ca\u7c7b \u671f\u521d\u4f59\u989d \u671f\u521d\u4f59\u989d \u672c\u671f\u589e\u52a0\u6570 \u672c\u671f\u51cf\u5c11\u6570 \u672c\u671f\u51cf\u5c11\u6570 \u672c\u671f\u589e\u52a0\u6570 \u672c\u671f\u501f\u65b9\u53d1\u751f\u989d \u672c\u671f\u8d37\u65b9\u53d1\u751f\u989d \u672c\u671f\u501f\u65b9\u53d1\u751f\u989d \u672c\u671f\u8d37\u65b9\u53d1\u751f\u989d \u671f\u672b\u4f59\u989d \u671f\u672b\u4f59\u989d <ul> <li>\u8d44\u4ea7\u7c7b\u3001\u8d39\u7528\uff1a\u589e\u52a0\u662f\u501f\u65b9\uff0c\u51cf\u5c11\u662f\u8d37\u65b9</li> <li>\u8d1f\u503a\u53ca\u6743\u76ca\u7c7b\u3001\u6536\u5165\u3001\u5229\u6da6\uff1a\u589e\u52a0\u662f\u8d37\u65b9\uff0c\u51cf\u5c11\u662f\u501f\u65b9</li> </ul> <p>\u6536\u5165\u548c\u8d39\u7528\u6ca1\u6709\u671f\u521d\u3001\u671f\u672b\u4f59\u989d\uff0c\u53cd\u5e94\u4e86\u65f6\u671f\uff0c\u662f\u52a8\u6001\u7684\u3002\u6536\u5165\u57fa\u672c\u90fd\u5728\u8d37\u65b9\uff0c\u9664\u975e\u9000\u8d27\u4e4b\u7c7b\u5bfc\u81f4\u6536\u5165\u51cf\u5c11\u3002\u672c\u6708\u6536\u5165\u4e0e\u4e0b\u6708\u65e0\u5173\u3002\u6536\u5165\u548c\u8d39\u7528\u5171\u8ba1\u5230\u672c\u5e74\u5229\u6da6\u4e2d\u3002</p> <p>\u5229\u6da6</p> \u5229\u6da6\u51cf\u5c11\u989d\uff08\u8d39\u7528\u8f6c\u5165\u989d\uff09 \u5229\u6da6\u589e\u52a0\u989d\uff08\u6536\u5165\u8f6c\u5165\u989d\uff09 \u672c\u671f\u501f\u65b9\u53d1\u751f\u989d \u672c\u671f\u8d37\u65b9\u53d1\u751f\u989d \u671f\u672b\u4f59\u989d \u671f\u672b\u4f59\u989d <p></p> <p>Tips</p> <p>\u94f6\u884c\u627f\u5151\u6c47\u7968\uff1a\u5e94\u4ed8\u7968\u636e \u6295\u8d44\u8005\u6295\u5165\uff0c\u516c\u5141\u4ef7\u503c200\u4e07\uff1a\u5b9e\u6536\u8d44\u672c    \u7f5a\u6b3e\uff1a\u8425\u4e1a\u5916\u652f\u51fa</p> <p>\u6709\u501f\u5fc5\u6709\u8d37\uff0c\u501f\u8d37\u5fc5\u76f8\u7b49\u3002    \u6240\u6709\u8d26\u6237\u7684\u501f\u65b9\u53d1\u751f\u989d\u5408\u8ba1\u6570 = \u6240\u6709\u8d26\u6237\u7684\u8d37\u65b9\u53d1\u751f\u989d\u5408\u8ba1\u6570   \u6240\u6709\u8d26\u6237\u7684\u501f\u65b9\u671f\u672b\u4f59\u989d\u5408\u8ba1\u6570 = \u6240\u6709\u8d26\u6237\u7684\u8d37\u65b9\u671f\u672b\u4f59\u989d\u5408\u8ba1\u6570   \u6240\u6709\u8d26\u6237\u7684\u501f\u65b9\u671f\u521d\u4f59\u989d\u5408\u8ba1\u6570 = \u6240\u6709\u8d26\u6237\u7684\u8d37\u65b9\u671f\u521d\u4f59\u989d\u5408\u8ba1\u6570 </p> <p></p>"}, {"location": "courses/accounting/4/4/", "title": "\u4f1a\u8ba1\u5faa\u73af", "text": ""}, {"location": "courses/accounting/4/4/#_2", "title": "\u5206\u5f55\u4e0e\u8bb0\u8d26", "text": ""}, {"location": "courses/accounting/4/4/#_3", "title": "\u4f1a\u8ba1\u5206\u5f55", "text": ""}, {"location": "courses/accounting/4/4/#_4", "title": "\u4ec0\u4e48\u662f\u4f1a\u8ba1\u5206\u5f55", "text": "<p>\u6307\u660e\u7ecf\u6d4e\u4e1a\u52a1\u5e94\u8bb0\u8d26\u6237\u540d\u79f0\u3001\u8bb0\u8d26\u65b9\u5411\u3001\u8bb0\u5165\u91d1\u989d\u7684\u8bb0\u5f55\u3002\u5728\u4f1a\u8ba1\u5b9e\u52a1\u4e2d\uff0c\u4f1a\u8ba1\u5206\u5f55\u5373\u4e3a\u8bb0\u8d26\u51ed\u8bc1\u3002</p>"}, {"location": "courses/accounting/4/4/#_5", "title": "\u4f1a\u8ba1\u5206\u5f55\u7684\u683c\u5f0f\uff1a", "text": "<p>\u501f\uff1a\u00d7\u00d7\u00d7(\u8d26\u6237\u540d)     \u00d7\u00d7\u00d7(\u91d1\u989d)  \u00a0\u00a0\u8d37: \u00d7\u00d7\u00d7\u00d7(\u8d26\u6237\u540d)    \u00d7\u00d7\u00d7(\u91d1\u989d)</p>"}, {"location": "courses/accounting/4/4/#_6", "title": "\u5982\u4f55\u7f16\u5236\u4f1a\u8ba1\u5206\u5f55", "text": "<p>\u5206\u6790\u7684\u7a0b\u5e8f\u548c\u6b65\u9aa4\u662f: 1. \u5f15\u8d77\u54ea\u4e9b\u8981\u7d20\u9879\u76ee\u7684\u53d8\u5316(\u53d8\u5316\u7684\u8d26\u6237\u540d\u79f0\uff09 2. \u5224\u65ad\u53d8\u5316\u9879\u76ee\u7684\u53d8\u5316\u65b9\u5411\uff08\u91d1\u989d\u7684\u589e\u6216\u51cf) 3. \u6839\u636e\u8d26\u6237\u6a21\u5f0f\u5224\u65ad\u5e94\u8bb0\u8d26\u6237\u7684\u501f\u65b9\u8fd8\u662f\u8d37\u65b9</p> <p></p> <p>Example</p> <p>1\u670830\u65e5\u4ee5\u94f6\u884c\u5b58\u6b3e3000\u5f52\u8fd8\u94f6\u884c\u77ed\u671f\u501f\u6b3e\uff0c\u540c\u65f6\u652f\u4ed8\u5f53\u6708\u501f\u6b3e\u5229\u606f300\uff0c\u5171\u8ba13300\u3002</p> Answer <p>\u501f\uff1a\u77ed\u671f\u501f\u6b3e 3000   \u00a0\u00a0\u00a0\u8d22\u52a1\u8d39\u7528 300 \u00a0\u00a0\u00a0\u00a0\u8d37\uff1a\u94f6\u884c\u5b58\u6b3e 3300       \u89e3\u9898\u5173\u952e\uff1a\u201c\u5f53\u6708\u201d</p> \u62d3\u5c55 <p>\u8981\u662f\u4e0d\u662f\u5f53\u6708\u4ed8\u6b3e\uff1a \u501f\uff1a\u8d22\u52a1\u8d39\u7528 300   \u00a0\u00a0\u00a0\u00a0\u8d37\uff1a\u5e94\u4ed8\u5229\u606f 300 </p> <p>\u501f\uff1a\u77ed\u671f\u501f\u6b3e 3000   \u00a0\u00a0\u00a0\u5e94\u4ed8\u5229\u606f 300 \u00a0\u00a0\u00a0\u00a0\u8d37\uff1a\u94f6\u884c\u5b58\u6b3e 3300 </p>"}, {"location": "courses/accounting/4/4/#_7", "title": "\u5206\u5f55\u79cd\u7c7b", "text": "<ul> <li>\u7b80\u5355\u5206\u5f55\u2014\u2014\u4e00\u501f\u4e00\u8d37\u7684\u5bf9\u5e94\u5173\u7cfb   </li> <li>\u590d\u5408\u5206\u5f55\u2014\u2014\u4e00\u501f\u591a\u8d37\u3001\u4e00\u8d37\u591a\u501f</li> </ul>"}, {"location": "courses/accounting/4/4/#_8", "title": "\u4f1a\u8ba1\u51ed\u8bc1", "text": ""}, {"location": "courses/accounting/4/4/#_9", "title": "\u542b\u4e49", "text": "<p>\u4f1a\u8ba1\u51ed\u8bc1\u662f\u8bb0\u5f55\u7ecf\u6d4e\u4e1a\u52a1\u3001\u660e\u786e\u7ecf\u6d4e\u8d23\u4efb\uff0c\u5e76\u4f5c\u4e3a\u8bb0\u8d26\u4f9d\u636e\u7684\u4e66\u9762\u8bc1\u660e\u6587\u4ef6\u3002</p>"}, {"location": "courses/accounting/4/4/#_10", "title": "\u539f\u59cb\u51ed\u8bc1", "text": ""}, {"location": "courses/accounting/4/4/#_11", "title": "\u8bb0\u8d26\u51ed\u8bc1", "text": "<p>Note</p> <ul> <li>\u6536\u6b3e\u51ed\u8bc1\uff1a\u501f\u65b9\u4e2d\u6709\u5e93\u5b58\u73b0\u91d1\u6216\u94f6\u884c\u5b58\u6b3e</li> <li>\u4ed8\u6b3e\u51ed\u8bc1\uff1a\u8d37\u65b9\u4e2d\u6709\u5e93\u5b58\u73b0\u91d1\u6216\u94f6\u884c\u5b58\u6b3e</li> <li>\u8f6c\u8d26\u51ed\u8bc1\uff1a\u90fd\u6ca1\u6709</li> </ul> <p>\u6d89\u53ca\u73b0\u91d1\u4e0e\u94f6\u884c\u5b58\u6b3e\u4e4b\u95f4\u7684\u4e1a\u52a1\uff0c\u4e00\u822c\u53ea\u586b\u5236\u4ed8\u6b3e\u51ed\u8bc1\u3002</p> <p> </p>"}, {"location": "courses/accounting/4/4/#_12", "title": "\u4f1a\u8ba1\u8d26\u7c3f", "text": ""}, {"location": "courses/accounting/4/4/#_13", "title": "\u542b\u4e49", "text": "<p>\u7531\u5177\u6709\u4e13\u95e8\u683c\u5f0f\u5e76\u4e92\u76f8\u8054\u7cfb\u7684\u8d26\u9875\u7ec4\u6210\u7684\u3001\u7528\u4ee5\u5e8f\u65f6\u6216\u5206\u7c7b\u8bb0\u5f55\u7ecf\u6d4e\u4e1a\u52a1\u7684\u7c3f\u7c4d\u3002 \u8d26\u6237\u8bb0\u5f55\u662f\u8d26\u7c3f\u7684\u5b9e\u8d28\u5185\u5bb9</p>"}, {"location": "courses/accounting/4/4/#_14", "title": "\u5206\u7c7b", "text": ""}, {"location": "courses/accounting/4/4/#_15", "title": "\u8bd5\u7b97\u4e0e\u8c03\u6574", "text": "<p>\u73b0\u5b9e\u4e2d\u672c\u6708\u53d1\u751f\u4e86100\u7b14\u4e1a\u52a1\uff0c\u4f46\u662f\u6709\u53ef\u80fd\u4f1a\u6709120\u7b14\u3002\u56e0\u4e3a\u4f1a\u6709\u5176\u4ed6\u6708\u4efd\u7684\u4e1a\u52a1\uff08\u6743\u8d23\u53d1\u751f\u5236\uff09\u3002</p> <p>\u8d26\u9879\u8c03\u6574\u7684\u4f9d\u636e\uff1a\u6743\u8d23\u53d1\u751f\u5236 \u8d26\u9879\u8c03\u6574\u7684\u76ee\u7684\uff1a\u5408\u7406\u53cd\u6620\u4e2a\u6708\u7684\u6536\u5165\u548c\u8d39\u7528\uff0c\u4ee5\u5408\u7406\u786e\u5b9a\u5404\u6708\u76c8\u4e8f    </p> <p>\u8c03\u8d26\u7684\u4e16\u754c\u4e00\u822c\u5728\u671f\u672b\u6216\u6708\u672b\u3002</p> <p> </p> <ul> <li>\u5e94\u8ba1\u9879\u76ee\uff1a\u94b1\u672a\u53d1\u751f\u6536\u4ed8<ul> <li>\u5e94\u8ba1\u6536\u5165\uff1a\u6536\u5165\u5f52\u5c5e\u4e8e\u672c\u671f\uff0c\u4f46\u94b1\u672a\u6536\u5230</li> <li>\u5e94\u8ba1\u8d39\u7528\uff1a\u8d39\u7528\u5f52\u5c5e\u4e8e\u672c\u671f\uff0c\u4f46\u94b1\u672a\u4ed8\u51fa</li> </ul> </li> <li>\u9012\u5ef6\u9879\u76ee\uff1a\u94b1\u6613\u53d1\u751f\u6536\u4ed8<ul> <li>\u9884\u4ed8\u8d39\u7528\uff1a\u8d39\u7528\u5f52\u5c5e\u4e8e\u672c\u671f\uff0c\u4e14\u94b1\u65e9\u5df2\u4ed8\u51fa</li> <li>\u9884\u6536\u6536\u5165\uff1a\u6536\u5165\u5f52\u5c5e\u4e8e\u672c\u671f\uff0c\u4e14\u94b1\u65e9\u5df2\u6536\u5230</li> </ul> </li> </ul> <p>\u5e94\u8ba1\u8d39\u7528</p> <p>\u5e74\u521d\u79df\u5165\u56fa\u5b9a\u8d44\u4ea7\u4e00\u5e74\uff0c\u6bcf\u6708\u5e94\u4ed8\u79df\u91d1100\u5143\uff0c\u5408\u540c\u7ea6\u5b9a\u5e74\u672b\u4e00\u6b21\u6027\u4ed8\u6e051200    \uff081\uff09\u8c03\u6574\u5206\u5f55 \u6bcf\u6708\u6708\u672b\uff1a   \u501f\uff1a\u7ba1\u7406\u8d39\u7528        100    \u00a0\u00a0\u00a0\u00a0\u8d37\uff1a\u5176\u4ed6\u5e94\u4ed8\u6b3e          100      \uff082\uff09\u4e1a\u52a1\u5206\u5f55 \u5e74\u672b\uff1a   \u501f\uff1a\u5176\u4ed6\u5e94\u4ed8\u6b3e           1200      \u00a0\u00a0\u00a0\u00a0\u8d37\uff1a\u5e93\u5b58\u8d44\u91d1             1200   </p> <p>\u5982\u679c\u5fd8\u4e86\u8c03\u6574\u5206\u5f55\uff0c\u4f1a\u5bfc\u81f4\u5229\u6da6\u865a\u9ad8\u3002</p> <p>\u9884\u4ed8\u8d39\u7528</p> <p>\u4e0a\u5e74\u672b\uff0c\u9884\u4ed8\u672c\u5e74\u79df\u5165\u56fa\u5b9a\u8d44\u4ea7\u5168\u5e74\u79df\u91d11200       \uff081\uff09\u4e1a\u52a1\u5206\u5f55 \u4e0a\u5e74\u5e74\u672b\uff1a   \u501f\uff1a\u9884\u4ed8\u8d26\u6b3e           1200    \u00a0\u00a0\u00a0\u00a0\u8d37\uff1a\u94f6\u884c\u5b58\u6b3e            1200   \uff082\uff09\u8c03\u6574\u5206\u5f55 \u672c\u5e74\u6bcf\u6708\u6708\u672b\uff1a   \u501f\uff1a\u7ba1\u7406\u8d39\u7528        100    \u00a0\u00a0\u00a0\u00a0\u8d37\uff1a\u9884\u4ed8\u8d26\u6b3e          100       </p> <p>\u5982\u679c\u5fd8\u4e86\u8c03\u6574\u5206\u5f55\uff0c\u4f1a\u5bfc\u81f4\u5229\u6da6\u865a\u589e\uff0c\u8d44\u4ea7\u865a\u589e\u3002\u6545\u610f\u9057\u5fd8\uff0c\u4f1a\u5bfc\u81f4\u5229\u6da6\u66f4\u6f02\u4eae\u3002</p>"}, {"location": "courses/accounting/4/4/#_16", "title": "\u7ed3\u8d26\u4e0e\u7f16\u8868", "text": "<p>\u865a\u8d26\u6237\uff1a\u6ca1\u6709\u4f59\u989d   \u5b9e\u8d26\u6237\uff1a\u6709\u4f59\u989d</p> <p> </p>"}, {"location": "courses/accounting/4/4/#_17", "title": "\u56de\u987e\u601d\u8003", "text": "<p>Example</p> <p>\u4ee5\u4e0b\u54ea\u4e9b\u5355\u636e\u662f\u539f\u59cb\u51ed\u8bc1\uff1f   A.\u751f\u4ea7\u8ba1\u5212 B.\u91c7\u8d2d\u5408\u540c C.\u5165\u5e93\u5355 D.\u8f6c\u8d26\u51ed\u8bc1  </p> <p>C  AB\u4e0d\u786e\u5b9a\u662f\u5426\u4f1a\u53d1\u751f\uff0cD\u662f\u4f1a\u8ba1\u51ed\u8bc1</p> <p>Example</p> <p>\u4ee5\u4e0b\u5e94\u8be5\u591a\u680f\u5f0f\u7684\u662f A.\u539f\u6750\u6599 B.\u751f\u4ea7\u6210\u672c C.\u7ba1\u7406\u8d39\u7528 D.\u5e94\u6536\u8d26\u6b3e   </p> <p>BC \u8fd9\u4e24\u4e2a\u90fd\u662f\u7531\u5f88\u591a\u9879\u76ee\u6784\u6210\u7684 A \u6570\u91cf-\u91d1\u989d\u5f0f D \u4e09\u680f\u5f0f\uff0c\u53ea\u8981\u540d\u79f0\u8be6\u7ec6\u5c31\u597d</p> <p>Example</p> <p>\u5982\u4f55\u67e5\u6e05\u8d26\u4e0a\u53d1\u751f\u7684\u91d1\u989d\u662f\u5426\u6b63\u786e\uff1f</p> <p>\u53bb\u67e5\u5bf9\u5e94\u7684\u4f1a\u8ba1\u51ed\u8bc1\u4ee5\u53ca\u9644\u7740\u7684\u539f\u59cb\u51ed\u8bc1\u3002</p> <p>Example</p> <p>\u671f\u672b\u65f6\uff0c\u8f6c\u670d\u201c\u672c\u5e74\u5229\u6da6\u201d\u8d26\u6237\u501f\u65b9\u7684\u662f     A.\u5176\u4ed6\u4e1a\u52a1\u6536\u5165 B.\u5e93\u5b58\u5546\u54c1 C.\u4e3b\u8425\u4e1a\u52a1\u6536\u5165 D.\u4e3b\u8425\u4e1a\u52a1\u6210\u672c</p> <p>D.\u4e3b\u8425\u4e1a\u52a1\u6210\u672c \u5229\u6da6\u8d26\u6237\u7684\u501f\u65b9\u662f\u5bfc\u81f4\u5229\u6da6\u7684\u51cf\u5c11\u3002AC\u8f6c\u5230\u8d37\u65b9\u3002B\u4e0d\u7528\u8f6c\u5230\u672c\u5e74\u5229\u6da6\uff0c\u8fd9\u662f\u8d44\u4ea7\u8d1f\u503a\u8868\u4e2d\u7684\u5185\u5bb9\u3002</p> <p>Example</p> <p>\u4ee5\u94f6\u884c\u5b58\u6b3e\u652f\u4ed8\u5f53\u6708\u9500\u552e\u4eba\u5458\u5de5\u8d44\uff0c\u4f1a\u8ba1\u5206\u5f55\u5e94\u4e3a    </p> <p>\u501f\uff1a\u9500\u552e\u8d39\u7528   \u00a0\u00a0\u00a0\u00a0\u8d37\uff1a\u94f6\u884c\u5b58\u6b3e    </p> <p>Warning</p> <p>\u89e3\u9898\u5173\u952e\u662f\u201c\u5f53\u6708\u201d\uff0c\u4e0d\u9700\u8981\u901a\u8fc7\u5e94\u4ed8\u804c\u5de5\u85aa\u916c\u3002</p> <p>Example</p> <p>\u51fa\u552e\u7ed9\u4e19\u516c\u53f8X\u4ea7\u54c13000\u4ef6\uff0c\u6bcf\u4ef6\u552e\u4ef760\u5143\uff0c\u8d27\u6b3e\u5c1a\u672a\u6536\u5230\u3002X\u4ea7\u54c1\u5355\u4ef6\u6210\u672c40\u5143\u3002</p> <p>\u501f\uff1a\u5e94\u6536\u8d26\u6b3e   180000   \u00a0\u00a0\u00a0\u00a0\u8d37\uff1a\u4e3b\u8425\u4e1a\u52a1\u6536\u5165 180000   \u501f\uff1a\u4e3b\u8425\u4e1a\u52a1\u6210\u672c    120000 \u00a0\u00a0\u00a0\u00a0\u8d37\uff1a\u5e93\u5b58\u5546\u54c1\u2014\u2014\u2014\u2014X    120000     </p> <p>Warning</p> <p>\u9500\u552e\uff0c\u5e93\u5b58\u5546\u54c1\u548c\u5e94\u6536\u8d26\u6b3e\u4e0d\u76f8\u7b49\u5440\u3002</p> <ul> <li>\u6574\u4e2a\u4f01\u4e1a\u7684\u5206\u5f55\u5206\u4e3a\u4e1a\u52a1\u5206\u5f55\u548c\u8c03\u6574\u5206\u5f55\u3002\u6700\u7ec8\u505a\u4e00\u4e2a\u7ed3\u8d26\u5206\u5f55\u3002</li> <li>\u8c03\u6574\u5206\u5f55\u4e2d\u4e0d\u53ef\u80fd\u51fa\u73b0\u94f6\u884c\u5b58\u6b3e\u3002</li> <li>\u8c03\u6574\u5206\u5f55\u671f\u672b\u7ed3\u8d26\u524d\u7f16\u5236\u3002</li> <li>\u8c03\u6574\u5206\u5f55\u4e00\u65b9\u9762\u8bbe\u8ba1\u5229\u6da6\u8868\u8d26\u6237\uff0c\u53e6\u4e00\u65b9\u8bbe\u8ba1\u8d44\u4ea7\u8d1f\u503a\u8868\u8d26\u6237\u3002</li> <li>\u8c03\u6574\u5206\u5f55\u4f9d\u636e\u7684\u662f\u6743\u8d23\u53d1\u751f\u5236\u3002</li> <li>\u6708\u672b\u7684\u7ed3\u8d26\u5206\u5f55\uff1a\u635f\u76ca\u7c7b\u8d26\u6237\u8f6c\u5230\u672c\u5e74\u5229\u6da6\u3002 \u5e74\u672b\u7684\u7ed3\u8d26\u5206\u5f55\u662f\u5229\u6da6\u8f6c\u5230\u672a\u5206\u914d\u5229\u6da6\u3002</li> <li>\u201c\u8ba1\u63d0\u201d\u662f\u8c03\u6574\u5206\u5f55\u3002</li> <li>\u751f\u4ea7\u8f66\u95f4\u5de5\u4eba\u5de5\u8d44\uff1a\u751f\u4ea7\u6210\u672c \u8f66\u95f4\u4e3b\u4efb\uff1a\u5236\u9020\u8d39\u7528</li> <li>\u4ece\u4ed3\u5e93\u62ff\u539f\u6750\u6599\uff1a\u539f\u6750\u6599\u53d8\u6210\u751f\u4ea7\u6210\u672c\u3002</li> <li>\u548c\u5229\u6da6\u6709\u5173\u8054\u7684\u4e1a\u52a1\u8981\u7f16\u5236\u7ed3\u8d26\u5206\u5f55\u3002\u8981\u6d89\u53ca\u635f\u76ca\u7c7b\u8d26\u6237\u3002</li> <li>\u751f\u4ea7\u6210\u672c-&gt;\u5e93\u5b58\u5546\u54c1-&gt;\u4e3b\u8425\u4e1a\u52a1\u6210\u672c\uff0c\u5230\u7b2c\u4e09\u6b65\u4e3b\u8425\u4e1a\u52a1\u6210\u672c\u624d\u4e0e\u5229\u6da6\u6709\u5173\u7cfb\u3002\u5236\u9020\u8d39\u7528\u5c31\u66f4\u8fdc\u4e86\u3002</li> <li>\u5e94\u5de5\u51fa\u5dee\uff1a\u5176\u4ed6\u5e94\u6536\u6b3e\u3002 \u9500\u552e\u90e8\u95e8\u4eba\u5458\u51fa\u5dee\uff1a\u9500\u552e\u8d39\u7528\u3002</li> <li>\u8d2d\u4e70\u539f\u6750\u6599\u53d1\u751f\u7684\u8fd0\u8d39\u8ba1\u5165\u539f\u6750\u6599\u7684\u6210\u672c\u3002</li> <li>\u8d2d\u5165\u80a1\u7968\uff1a\u4ea4\u6613\u6027\u91d1\u878d\u8d44\u4ea7</li> </ul>"}, {"location": "courses/accounting/5/5/", "title": "\u8d27\u5e01\u8d44\u91d1\u4e0e\u4ea4\u6613\u6027\u91d1\u878d\u8d44\u4ea7", "text": ""}, {"location": "courses/accounting/5/5/#_2", "title": "\u8d27\u5e01\u8d44\u91d1", "text": "<p>\u5305\u62ec\u5e93\u5b58\u73b0\u91d1\u3001\u94f6\u884c\u5b58\u6b3e\u3001\u5176\u4ed6\u8d27\u5e01\u8d44\u91d1</p>"}, {"location": "courses/accounting/5/5/#_3", "title": "\u5e93\u5b58\u73b0\u91d1", "text": ""}, {"location": "courses/accounting/5/5/#_4", "title": "\uff08\u4e00\uff09\u5148\u8fdb\u7684\u5907\u7528\u91d1\u5236\u5ea6", "text": "<p>\u4f01\u4e1a\u5b9e\u73b0\u4ed8\u7ed9\u5185\u90e8\u90e8\u95e8\u6216\u4e1a\u52a1\u4eba\u5458\u4e00\u7b14\u4e00\u5b9a\u91d1\u989d\u7684\u73b0\u91d1\uff0c\u4f9b\u5176\u96f6\u661f\u5f00\u652f\u4f7f\u7528\uff0c\u79f0\u4e3a\u5907\u7528\u91d1\u3002</p> <p>Note</p> <p>\u62a5\u9500\u91d1\u989d\u5c0f\u4e8e\u5907\u7528\u91d1\uff1a</p> <p>\u501f\uff1a\u7ba1\u7406\u8d39\u7528\uff08\u62a5\u9500\u91d1\u989d\uff09   \u00a0\u00a0\u00a0\u00a0\u5e93\u5b58\u73b0\u91d1\uff08\u5dee\u989d\uff09   \u00a0\u00a0\u00a0\u00a0\u8d37\uff1a\u5176\u4ed6\u5e94\u6536\u6b3e\uff08\u5907\u7528\u91d1\uff09    </p> <p>Note</p> <p>\u62a5\u9500\u91d1\u989d\u5927\u4e8e\u5907\u7528\u91d1\uff1a</p> <p>\u501f\uff1a\u7ba1\u7406\u8d39\u7528\uff08\u62a5\u9500\u91d1\u989d\uff09   \u00a0\u00a0\u00a0\u00a0\u8d37\uff1a\u5176\u4ed6\u5e94\u6536\u6b3e\uff08\u5907\u7528\u91d1\uff09   \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u5e93\u5b58\u73b0\u91d1\uff08\u5dee\u989d\uff09    </p> <p>Note</p> <p>\u5b9a\u989d\u5907\u7528\u91d1\uff1a</p> <p>\u501f\uff1a\u7ba1\u7406\u8d39\u7528\uff08\u62a5\u9500\u91d1\u989d\uff09   \u00a0\u00a0\u00a0\u00a0\u8d37\uff1a\u5e93\u5b58\u73b0\u91d1\uff08\u62a5\u9500\u91d1\u989d\uff09</p>"}, {"location": "courses/accounting/5/5/#_5", "title": "\uff08\u4e8c\uff09\u73b0\u91d1\u7684\u6e05\u67e5", "text": "<ol> <li>\u6e05\u67e5\u7684\u76ee\u7684\uff1a\u8d26\u5b9e\u76f8\u7b26</li> <li>\u6e05\u67e5\u65b9\u6cd5\uff1a\u76d8\u70b9</li> <li>\u6e05\u67e5\u7ed3\u679c\u7684\u4f1a\u8ba1\u5904\u7406<ol> <li>\u76d8\u76c8\uff1a\u2460\u501f\uff1a\u5e93\u5b58\u73b0\u91d1 \u8d37\uff1a\u5f85\u5904\u7406\u8d26\u6237 \u2461\u501f\uff1a\u5f85\u5904\u7406 \u8d37\uff1a\u8425\u4e1a\u5916\u6536\u5165</li> <li>\u76d8\u4e8f\uff1a\u2460\u501f\uff1a\u5f85\u5904\u7406\u8d26\u6237 \u501f\uff1a\u5e93\u5b58\u73b0\u91d1 \u2461\u501f\uff1a\u5176\u4ed6\u5e94\u6536\u6b3e/\u7ba1\u7406\u8d39\u7528\uff08\u65e0\u6cd5\u67e5\u660e\u539f\u56e0\uff09 \u8d37\uff1a\u5f85\u5904\u7406</li> </ol> </li> </ol>"}, {"location": "courses/accounting/5/5/#_6", "title": "\u94f6\u884c\u5b58\u6b3e", "text": "<p>\u94f6\u884c\u5b58\u6b3e\u7684\u671f\u672b\u68c0\u67e5</p> <ol> <li>\u65b9\u6cd5\uff1a\u6bcf\u6708\u6708\u672b\uff0c\u5c06\u4f01\u4e1a\u201c\u94f6\u884c\u5b58\u6b3e\u65e5\u8bb0\u8d26\u201d\u7684\u4f59\u989d\uff0c\u4e0e\u94f6\u884c\u9001\u6765\u7684\u8d26\u5355\u6838\u5bf9\u3002</li> <li>\u4f59\u989d\u4e0d\u4e00\u81f4\u539f\u56e0<ol> <li>\u4f01\u4e1a\u4e0e\u94f6\u884c\u4efb\u4f55\u4e00\u65b9\u7684\u8bb0\u8d26\u9519\u8bef</li> <li>\u672a\u8fbe\u8d26\u9879\uff1a\u7531\u4e8e\u51ed\u8bc1\u63a5\u53d7\u65f6\u95f4\u4e0d\u4e00\u81f4\u800c\u5bfc\u81f4\u6709\u4e9b\u8d26\u8fd8\u6ca1\u8bb0\u3002</li> </ol> </li> <li>\u5177\u4f53\u64cd\u4f5c\uff1a\u7f16\u5236\u94f6\u884c\u5b58\u6b3e\u4f59\u989d\u8c03\u8282\u8868</li> <li>\u672a\u8fbe\u8d26\u9879\u4e0d\u80fd\u4ee5\u94f6\u884c\u5b58\u6b3e\u6765\u8bb0\u5165</li> <li>\u66f4\u6b63\u9519\u8bef\uff1a\u9996\u5148\u4e0d\u80fd\u76f4\u63a5\u5728\u539f\u6765\u8d26\u4e0a\u5212\u6389\uff08</li> </ol>"}, {"location": "courses/accounting/5/5/#_7", "title": "\u5176\u4ed6\u8d27\u5e01\u8d44\u91d1", "text": "<ol> <li>\u9664\u73b0\u91d1\u5b58\u6b3e\u610f\u5916\u7684\u5404\u79cd\u8d27\u5e01\u8d44\u91d1</li> <li>\u79cd\u7c7b<ol> <li>\u5916\u5b58\u6b3e</li> <li>\u94f6\u884c\u6c47\u7968\u5b58\u6b3e</li> <li>\u94f6\u884c\u672c\u7968\u5b58\u6b3e</li> <li>\u4fe1\u7528\u5361\u5b58\u6b3e</li> <li>\u4fe1\u7528\u8bc1\u4fdd\u8bc1\u91d1\u5b58\u6b3e</li> </ol> </li> <li>\u4f1a\u8ba1\u5904\u7406</li> </ol>"}, {"location": "courses/accounting/5/5/#_8", "title": "\u4ea4\u6613\u6027\u91d1\u878d\u8d44\u4ea7", "text": ""}, {"location": "courses/accounting/5/5/#_9", "title": "\u4ea4\u6613\u6027\u80a1\u7968\u6295\u8d44", "text": "\\[ \u80a1\u7968\u6295\u8d44\u6210\u672c = \u4e70\u4ef7 - \u5df2\u5ba3\u544a\u5c1a\u672a\u652f\u53d6\u7684\u73b0\u91d1\u80a1\u5229 \\] \\[ \u624b\u7eed\u8d39 + \u7a0e\u91d1\u8ba1\u5165\u5f53\u671f\u635f\u76ca\uff0c\u8bb0\u5165\u201c\u6295\u8d44\u6536\u76ca\u201d\u8d26\u6237 \\] \\[ \u624b\u7eed\u8d39 + \u7a0e\u91d1\u8ba1\u5165\u5f53\u671f\u635f\u76ca\uff0c\u8bb0\u5165\u201c\u6295\u8d44\u6536\u76ca\u201d\u8d26\u6237 \\]"}, {"location": "courses/accounting/5/5/#_10", "title": "\u4ea4\u6613\u6027\u91d1\u878d\u8d44\u4ea7\u7684\u671f\u672b\u8ba1\u4ef7\u2014\u2014\u2014\u2014\u5e02\u4ef7\u6cd5", "text": ""}, {"location": "courses/accounting/5/5/#_11", "title": "\u542b\u4e49", "text": "<p>\u6bcf\u671f\u671f\u672b\uff0c\u5c06\u91d1\u878d\u8d44\u4ea7\u8c03\u6574\u4e3a\u6309\u5e02\u573a\u8ba1\u4ef7\u3002</p>"}, {"location": "courses/accounting/5/5/#_12", "title": "\u65b9\u6cd5", "text": "<p>\u8bbe\u7f6e\u201c\u516c\u5141\u4ef7\u503c\u53d8\u52a8\u635f\u76ca\u201d\u8d26\u6237</p> <p>\u671f\u672b\u5e94\u8c03\u6574\u7684\u91d1\u989d = \u5e02\u4ef7 - \u6210\u672c</p>"}, {"location": "courses/accounting/5/5/#_13", "title": "\u4f1a\u8ba1\u5904\u7406", "text": "<p>\u82e5\u5e02\u4ef7-\u6210\u672c&gt;0\uff0c\u5219  \u501f\uff1a\u4ea4\u6613\u6027\u91d1\u878d\u8d44\u4ea7\u2014\u2014\u2014\u2014\u516c\u5141\u4ef7\u503c\u53d8\u52a8 \u8d37\uff1a\u516c\u5141\u4ef7\u503c\u53d8\u52a8\u635f\u76ca</p> <p>\u82e5\u5e02\u4ef7-\u6210\u672c&lt;0\uff0c\u5219  \u501f\uff1a\u516c\u5141\u4ef7\u503c\u53d8\u52a8\u635f\u76ca \u8d37\uff1a\u4ea4\u6613\u6027\u91d1\u878d\u8d44\u4ea7\u2014\u2014\u2014\u2014\u516c\u5141\u4ef7\u503c\u53d8\u52a8</p>"}, {"location": "courses/accounting/5/5/#_14", "title": "\u4ea4\u6613\u6027\u91d1\u878d\u8d44\u4ea7\u7684\u51fa\u552e", "text": "<p>\u501f\uff1a\u94f6\u884c\u5b58\u6b3e\uff08\u5b9e\u9645\u6536\u5230\u7684\u6b3e\u9879\uff09 \u6295\u8d44\u6536\u76ca \u8d37\uff1a\u4ea4\u6613\u6027\u91d1\u878d\u8d44\u4ea7 \u5e94\u6536\u80a1\u5229   \u6295\u8d44\u6536\u76ca</p> <p>5\u670813\u65e5        \u501f\uff1a\u4ea4\u6613\u6027\u91d1\u878d\u8d44\u4ea7\u2014\u2014\u6210\u672c 1000000      \u5e94\u6536\u80a1\u5229 60000     \u6295\u8d44\u6536\u76ca 1000   \u8d37\uff1a\u94f6\u884c\u5b58\u6b3e 1061000    </p> <p>5\u670823\u65e5    \u501f\uff1a\u94f6\u884c\u5b58\u6b3e 60000 \u8d37\uff1a\u5e94\u6536\u80a1\u5229 60000  </p> <p>6\u670830\u65e5  \u501f\uff1a\u4ea4\u6613\u6027\u91d1\u878d\u8d44\u4ea7 2000000 \u8d37\uff1a\u516c\u5141\u4ef7\u503c\u53d8\u52a8\u635f\u76ca 2000000    </p> <p>8\u670815\u65e5  \u501f\uff1a\u94f6\u884c\u5b58\u6b3e 1500000      \u6295\u8d44\u6536\u76ca 1500000  \u8d37\uff1a\u4ea4\u6613\u6027\u91d1\u878d\u8d44\u4ea7\u2014\u2014\u6210\u672c 1000000      \u2014\u2014\u516c\u5141\u4ef7\u503c\u53d8\u52a8 2000000   </p> <p>Note</p> <p>\u5728\u7f16\u5236\u94f6\u884c\u4f59\u989d\u8c03\u8282\u8868\u65f6\uff0c\u5bf9\u4e8e\u4f01\u4e1a\u94f6\u884c\u5b58\u6b3e\u65e5\u8bb0\u4f59\u989d\uff0c\u5e94\u8be5\u52a0\u4e0a\u94f6\u884c\u5df2\u6536\u4f01\u4e1a\u672a\u6536\u7684\u6b3e\u9879\uff0c\u51cf\u53bb\u94f6\u884c\u5df2\u4ed8\u4f01\u4e1a\u672a\u4ed8\u7684\u6b3e\u9879\u3002</p> <p>\u8ba1\u7b97\u6295\u8d44\u6536\u76ca</p> <p>\u6210\u672c = \u652f\u4ed8\u7684\u94b1 - \u4ea4\u6613\u8d39\u7528 - \u5e94\u6536\u80a1\u5229 \uff08\u6295\u8d44\u6536\u76ca = - \u4ea4\u6613\u8d39\u7528\uff09    \u51fa\u552e\u662f\uff1a\u6295\u8d44\u6536\u76ca = \u5356\u51fa\u7684\u94b1 - \u6210\u672c      </p> <p>\u5b9e\u9645\u6536\u5165 = \u6295\u8d44\u6536\u76ca\u4e4b\u548c</p> <p>\u501f\uff1a\u4ea4\u6613\u6027\u91d1\u878d\u8d44\u4ea7</p>"}, {"location": "courses/accounting/6/6/", "title": "\u5e94\u6536\u6b3e\u9879", "text": ""}, {"location": "courses/accounting/6/6/#_2", "title": "\u5e94\u6536\u8d26\u6b3e", "text": ""}, {"location": "courses/accounting/6/6/#_3", "title": "\u5e94\u6536\u8d26\u6b3e\u7684\u521d\u59cb\u8ba1\u4ef7", "text": "<p>\u6309\u7167\u5b9e\u9645\u53d1\u751f\u7684\u4ea4\u6613\u4ef7\u683c\u5165\u8d26\uff0c\u4e3b\u8981\u5305\u62ec\u53d1\u7968\u91d1\u989d\u548c\u4ee3\u57ab\u8fd0\u6742\u8d39\u3002</p> <p>\u501f\uff1a\u5e94\u6536\u8d26\u6b3e\uff08\u8981\u52a0\u4e0a\u7a0e\u548c\u4ee3\u8fd0\u8d39\uff09   \u8d37\uff1a\u4e3b\u8425\u4e1a\u52a1\u6536\u5165 \uff08\u5e94\u6536\u8d26\u6b3e/1.13\uff09     \u5e94\u4ea4\u7a0e\u8d39           \u4ee3\u8fd0\u8d39    </p> <p>\u56de\u987e\u601d\u8003</p> <p>\u67d0\u4f01\u4e1a\u9500\u552e\u4ea7\u54c1\u4e00\u6279\uff0c\u53d1\u7968\u603b\u91d1\u989d100\u4e07\u5143\uff0c\u8be5\u7b14\u4e1a\u52a1\u7684\u53d1\u751f\u5c06\u5f15\u8d77\u5229\u6da6\u589e\u52a0100\u4e07\u5143\uff1f   \u9519\u8bef\u7684\u3002</p>"}, {"location": "courses/accounting/6/6/#_4", "title": "\u5e94\u6536\u8d26\u6b3e\u7684\u6536\u56de\u4e0e\u574f\u8d26", "text": ""}, {"location": "courses/accounting/6/6/#_5", "title": "\u574f\u8d26\u7684\u4f1a\u8ba1\u5904\u7406\uff1a\u76f4\u63a5\u6cd5\u4e0e\u5907\u62b5\u6cd5", "text": "<p>\u76f4\u63a5\u6cd5\u662f\u6307\u53d1\u751f\u574f\u8d26\u65f6\uff0c\u5c06\u574f\u8d26\u7684\u5b9e\u9645\u91d1\u989d\uff1a\u501f\uff1a\u4fe1\u7528\u51cf\u503c\u635f\u5931 \u8d37\uff1a\u5e94\u6536\u5e10\u6b3e</p> <p>\u7f3a\u9677\uff1a\u4e0d\u7b26\u5408\u6536\u5165\u4e0e\u8d39\u7528\u914d\u6bd4\u539f\u5219\uff0c\u4e5f\u4e0d\u7b26\u5408\u8c28\u614e\u6027\u7684\u4f1a\u8ba1\u4fe1\u606f\u8d28\u91cf\u8981\u6c42\u3002</p> <p>\u5907\u62b5\u6cd5</p> <ul> <li>\u7279\u70b9\uff1a\u9884\u5148\u4f30\u8ba1\u574f\u8d26\u635f\u5931\uff0c\u8bb0\u5165\u4fe1\u7528\u51cf\u503c\u635f\u5931 \u501f\uff1a\u4fe1\u7528\u51cf\u503c\u635f\u5931 \u8d37\uff1a\u574f\u8d26\u51c6\u5907</li> <li>\u5b9e\u9645\u53d1\u751f\u574f\u8d26\u65f6 \u501f\uff1a\u574f\u8d26\u51c6\u5907 \u8d37\uff1a\u5e94\u6536\u5e10\u6b3e</li> </ul> <p>\u7f3a\u9677\uff1a\u4f30\u8ba1\u4f1a\u5e26\u6709\u4e00\u5b9a\u7684\u4e3b\u89c2\u6027</p> <p>\u4f30\u8ba1\u574f\u8d26\u635f\u5931\u7684\u65b9\u6cd5\u4e00\u822c\u6709\u4e09\u79cd\uff1a \u9500\u8d27\u767e\u5206\u6bd4\u6cd5  \u4f30\u8ba1\u574f\u8d26\u635f\u5931 = \u672c\u671f\u8d4a\u9500\u91d1\u989d x \u4f30\u8ba1\u574f\u8d26\u767e\u5206\u6bd4   \u7f3a\u70b9\uff1a\u574f\u8d26\u53d1\u751f\u989d\u4e0e\u8d4a\u9500\u91d1\u989d\u4e8b\u5b9e\u4e0a\u6ca1\u6709\u76f4\u63a5\u5173\u8054\u3002</p> <p>\u5e94\u6536\u8d26\u6b3e\u4f59\u989d\u767e\u5206\u6bd4\u6cd5  \u8981\u6c42\uff1a\u5e94\u6536\u8d26\u6b3e\u4f59\u989d\u4e0e\u574f\u8d26\u51c6\u5907\u4f59\u989d\u4fdd\u6301\u76f8\u5e94\u7684\u6bd4\u4f8b \u5e74\u672b\u574f\u8d26\u5e94\u4fdd\u7559\u7684\u4f59\u989d = \u5e94\u6536\u8d26\u6b3e\u4f59\u989d x \u6bd4\u4f8b     \u672c\u5e74\u5e94\u8ba1\u63d0\u7684\u91d1\u989d = \u5e94\u4fdd\u7559\u4f59\u989d - \u8ba1\u63d0\u524d\u4f59\u989d</p> <p>\u8d26\u9f84\u5206\u6790\u6cd5 \u6839\u636e\u5e94\u6536\u8d26\u6b3e\u62d6\u6b20\u65f6\u95f4\u7684\u957f\u77ed\uff0c\u4f30\u8ba1\u574f\u8d26\u635f\u5931\uff0c\u5177\u4f53\u5904\u7406\u65b9\u6cd5\u548c\u5e94\u6536\u8d26\u6b3e\u4f59\u989d\u767e\u5206\u6bd4\u6cd5\u76f8\u540c\u3002</p> <p>\u56de\u987e\u601d\u8003</p> <p>\u67d0\u4f01\u4e1a\u5e94\u6536\u8d26\u6b3e\u4f59\u989d\u4e3a500\u4e07\u5143\uff0c\u516c\u53f8\u51b3\u5b9a\u6309\u716710%\u8ba1\u63d0\u574f\u8d26\u51c6\u5907\u91d1\uff0c\u56e0\u6b64\u672c\u671f\u5e94\u8ba1\u63d0\u7684\u574f\u8d26\u51c6\u5907\u91d1\u91d1\u989d\u4e3a50\u4e07\u5143\uff0c\u4f1a\u8ba1\u5206\u5f55\u4e3a\uff1a   \u501f\uff1a\u4fe1\u7528\u51cf\u503c\u635f\u5931 50    \u8d37\uff1a\u574f\u8d26\u51c6\u5907 50</p> <p>\u8fd9\u662f\u9519\u8bef\u7684\u3002\u8981\u533a\u5206\u5e94\u8ba1\u63d0\u7684\u91d1\u989d\u548c\u5e94\u4fdd\u7559\u4f59\u989d\u3002\u8981\u770b\u4f59\u989d\u3002</p> <p>Warning</p> <p>\u6709\u4e9b\u516c\u53f8\u4f1a\u901a\u8fc7\u964d\u4f4e\u574f\u8d26\u51c6\u5907\u91d1\u6765\u589e\u52a0\u5229\u6da6\u3002\u8fd9\u6837\u964d\u4f4e\u4e86\u53ef\u9760\u6027\u3002</p>"}, {"location": "courses/accounting/6/6/#_6", "title": "\u574f\u8d26\u6536\u56de\u7684\u4f1a\u8ba1\u5904\u7406", "text": "<p>\u53d1\u751f\u574f\u8d26\u65f6\uff1a   \u501f\uff1a\u574f\u8d26\u51c6\u5907   \u8d37\uff1a\u5e94\u6536\u8d26\u6b3e</p> <p>\u6536\u56de\u574f\u8d26\u65f6\uff0c\u9996\u5148\u5e94\u6062\u590d\u5df2\u51b2\u9500\u7684\u5e94\u6536\u8d26\u6b3e\u548c\u574f\u8d26\u51c6\u5907\uff1a \u501f\uff1a\u5e94\u6536\u8d26\u6b3e   \u8d37\uff1a\u574f\u8d26\u51c6\u5907   \u540c\u65f6\uff0c\u53cd\u6620\u5e94\u6536\u8d26\u6b3e\u7684\u6536\u56de\uff1a \u501f\uff1a\u94f6\u884c\u5b58\u6b3e   \u8d37\uff1a\u5e94\u6536\u8d26\u6b3e    </p> <p>Warning</p> <p>\u6536\u56de\u574f\u8d26\u65f6\uff0c\u5bf9\u5229\u6da6\u5f71\u54cd\u5f88\u5927\uff01\uff08\u589e\u52a0\uff09   \u82e5\u6ca1\u6709\u6536\u56de\u574f\u8d26\uff0c\u5e94\u6536\u8d26\u6b3e\u7684\u503c\u662f\u4e0d\u53d8\u7684\uff0c\u574f\u8d26\u51c6\u5907\u7684\u4f59\u989d\u5e94\u8be5\u4e0d\u53d8\u3002</p> <p>Example</p> <p>20*0:  \u501f\uff1a\u4fe1\u7528\u51cf\u503c\u635f\u5931 10000     \u8d37\uff1a\u574f\u8d26\u51c6\u5907 10000  </p> <p>20*1:  \u501f\uff1a\u574f\u8d26\u51c6\u5907\uff1a12000    \u8d37\uff1a\u5e94\u6536\u8d26\u6b3e 12000 \u501f\uff1a\u4fe1\u7528\u51cf\u503c\u635f\u5931 22000 \u8d37\uff1a\u574f\u8d26\u51c6\u5907 22000  </p> <p>20*2:  \u501f\uff1a\u5e94\u6536\u8d26\u6b3e 6000  \u8d37\uff1a\u574f\u8d26\u51c6\u5907 6000  \u501f\uff1a\u94f6\u884c\u5b58\u6b3e 6000  \u8d37\uff1a\u5e94\u6536\u8d26\u6b3e 6000  \u501f\uff1a\u574f\u8d26\u51c6\u5907 21000 \u8d37\uff1a\u4fe1\u7528\u51cf\u503c\u635f\u5931 21000  </p>"}, {"location": "courses/accounting/6/6/#_7", "title": "\u5e94\u6536\u7968\u636e", "text": ""}, {"location": "courses/accounting/6/6/#_8", "title": "\u542b\u4e49\u548c\u5206\u7c7b", "text": "<ul> <li>\u5e94\u6536\u7968\u636e\u4e2d\u7968\u636e\u662f\u6307\u5546\u4e1a\u7968\u636e</li> <li>\u6309\u662f\u5426\u8ba1\u606f\u5206\u4e3a\u5e26\u606f\u7968\u636e\u548c\u4e0d\u5e26\u606f\u7968\u636e</li> <li>\u6309\u627f\u5151\u4eba\u5206\u4e3a\u94f6\u884c\u627f\u5151\u6c47\u7968\u4e0e\u5546\u4e1a\u627f\u5151\u6c47\u7968\uff08\u62ff\u4e0d\u5230\u94b1\u7684\u6982\u7387\u76f8\u5bf9\u8f83\u9ad8\uff09</li> </ul>"}, {"location": "courses/accounting/6/6/#_9", "title": "\u5e94\u6536\u7968\u636e\u7684\u4f1a\u8ba1\u5904\u7406", "text": "<ul> <li>\u9500\u552e\u65f6\u6309\u9762\u503c\u5165\u8d26  \u6536\u5230\u7968\u636e\u65f6\uff1a   \u501f\uff1a\u5e94\u6536\u7968\u636e\uff08\u94b1\uff09   \u8d37\uff1a\u4e3b\u8425\u4e1a\u52a1\u6536\u5165   \u5e94\u4ea4\u7a0e\u8d39\u2014\u2014\u2014\u2014\u5e94\u4ea4\u589e\u503c\u7a0e\uff08\u9500\u9879\u7a0e\u989d\uff09    </li> </ul> <p>\u4e3b\u8425\u4e1a\u52a1\u6536\u5165\u6309\u4e0d\u542b\u589e\u503c\u7a0e\u7684\u9500\u552e\u989d\u5165\u8d26\u3002</p> <ul> <li> <p>\u5e26\u606f\u7968\u636e\u8ba1\u63d0\u5229\u606f     \u501f\uff1a\u5e94\u6536\u7968\u636e\u2014\u2014\u2014\u2014\u5229\u606f   \u8d37\uff1a\u8d22\u52a1\u8d39\u7528    </p> </li> <li> <p>\u7968\u636e\u5230\u671f      </p> <ul> <li>\u82e5\u5bf9\u65b9\u652f\u4ed8\uff1a   \u501f\uff1a\u94f6\u884c\u5b58\u6b3e   \u8d37\uff1a\u5e94\u6536\u7968\u636e   \u2014\u2014\u2014\u2014\u9762\u503c   \u2014\u2014\u2014\u2014\u5229\u606f    </li> <li>\u82e5\u5bf9\u65b9\u65e0\u529b\u652f\u4ed8\uff1a   \u501f\uff1a\u5e94\u6536\u8d26\u6b3e   \u8d37\uff1a\u5e94\u6536\u7968\u636e   \u2014\u2014\u2014\u2014\u9762\u503c   \u2014\u2014\u2014\u2014\u5229\u606f    </li> </ul> </li> </ul> <p>\u82e5\u5404\u6708\u672b\u6ca1\u6709\u8ba1\u63d0\u5e94\u6536\u5229\u606f\uff0c\u5219\u5230\u671f\u65f6\u8d37\u8bb0\u8d22\u52a1\u8d39\u7528\uff08\u672a\u8de8\u5e74\uff09\u3002\u4e5f\u5c31\u662f\u8bf4\u5e74\u672b\u4e00\u5b9a\u8981\u8ba1\u63d0\u3002</p> <p>Example</p> <p>2023.12.1\u9500\u552e\u5546\u54c1100 000\u5143\uff0c\u589e\u503c\u7a0e\u6b3e13 000\u5143\uff0c\u6536\u5230\u9762\u503c\u4e3a113 000\u5143\uff0c\u671f\u96502\u4e2a\u6708\uff0c\u5e74\u5229\u73876%\uff0c\u5546\u4e1a\u5b58\u5151\u6c47\u7968\u3002</p> <p>2023.12.1  \u501f:\u5e94\u6536\u7968\u636e 113 000    \u8d37\uff1a\u4e3b\u8425\u4e1a\u52a1\u6536\u5165 100 000   \u5e94\u4ea4\u7a0e\u8d39\u2014\u2014\u2014\u2014\u5e94\u4ea4\u589e\u503c\u7a0e 13 000</p> <p>2023.12.31\u4e0e2024.1.31  \u501f\uff1a\u5e94\u6536\u7968\u636e 565   \u8d37\uff1a\u8d22\u52a1\u8d39\u7528 565   131 000 * 6% / 12 = 565\u5143</p> <p>2024.2.1   \u501f\uff1a\u94f6\u884c\u5b58\u6b3e 114 130   \u8d37\uff1a\u5e94\u6536\u7968\u636e 114 130</p> <ul> <li>\u8d34\u73b0\u5904\u7406    \u8ba1\u7b97\uff1a     \u8d34\u73b0\u6240\u5f97 = \u7968\u636e\u5230\u671f\u503c - \u8d34\u73b0\u606f   \u7968\u636e\u5230\u671f\u503c = \u672c\u91d1 + \u5229\u606f   \u8d34\u73b0\u606f = \u7968\u636e\u5230\u671f\u503c * \u5e74\u8d34\u73b0\u7387 * \u8d34\u73b0\u671f</li> </ul> <p>\u5904\u7406\u8981\u70b9</p> <ul> <li>\u4e0d\u5e26\u606f\u7968\u636e\uff0c\u8d34\u73b0\u606f\u76f4\u63a5\u4f5c\u4e3a\u8d22\u52a1\u8d39\u7528\u7684\u589e\u52a0\u3002<ul> <li>\u501f\uff1a\u94f6\u884c\u5b58\u6b3e\uff08\u8d34\u73b0\u6240\u5f97\uff09 \u8d22\u52a1\u8d39\u7528</li> <li>\u8d37\uff1a\u5e94\u6536\u7968\u636e</li> </ul> </li> <li>\u5e26\u606f\u7968\u636e\uff0c\u8d34\u73b0\u6240\u5f97\u4e0e\u9762\u503c\u4e4b\u95f4\u7684\u5dee\u989d\u51cf\u8d34\u73b0\u606f\uff0c\u8d22\u52a1\u8d39\u7528\u53ef\u80fd\u5728\u501f\u65b9\u4e5f\u53ef\u80fd\u5728\u8d37\u65b9\u3002</li> </ul> <p>\u8ffd\u7d22\u6743</p> <p>\u5e26\u6709\u8ffd\u7d22\u6743\u7684\u7968\u636e\u8d34\u73b0\u3002\u7531\u4e8e\u4e0d\u7b26\u5408\u8d44\u4ea7\u7684\u7ec8\u6b62\u786e\u8ba4\u6761\u4ef6\uff0c\u4f1a\u8ba1\u4e0a\u4e0d\u5e94\u51b2\u9500\u5e94\u6536\u7968\u636e\u8d26\u6237\uff0c\u4e00\u822c\u6839\u636e\u5b9e\u9645\u6536\u5230\u7684\u8d34\u73b0\u6b3e\u501f\u8bb0\u201c\u94f6\u884c\u5b58\u6b3e\u201d\uff0c\u8d37\u8bb0\u201c\u77ed\u671f\u501f\u6b3e\u201d\uff08\u53ea\u662f\u5728\u5907\u67e5\u7c3f\u4e2d\u8bb0\u5f55\u8fd9\u4e2a\u7968\u636e\u5df2\u7ecf\u8d34\u73b0\u4e86\uff09\u3002</p> <ul> <li> <p>\u82e5\u80fd\u591f\u8ffd\u56de\uff1a   \u501f\uff1a\u77ed\u671f\u501f\u6b3e   \u8d37\uff1a\u5e94\u6536\u7968\u636e    </p> </li> <li> <p>\u82e5\u4e0d\u80fd\u6536\u56de\uff1a   \u501f\uff1a\u77ed\u671f\u501f\u6b3e   \u8d37\uff1a\u94f6\u884c\u5b58\u6b3e   \u501f\uff1a\u5e94\u6536\u8d26\u6b3e   \u8d37\uff1a\u5e94\u6536\u7968\u636e    </p> </li> </ul>"}, {"location": "courses/accounting/6/6/#_10", "title": "\u9884\u4ed8\u8d26\u6b3e", "text": "<p>\u7acb\u9879   \u501f\uff1a\u9884\u4ed8\u8d26\u6b3e   \u8d37\uff1a\u94f6\u884c\u5b58\u6b3e    </p> <p>\u6536\u5230\u8d27\u7269\u65f6\uff1a   \u501f\uff1a\u539f\u6750\u6599 \u5e94\u6536\u7a0e\u8d39\u2014\u2014\u2014\u2014\u5e94\u4ea4\u589e\u503c\u7a0e\uff08\u8fdb\u9879\u7a0e\u989d\uff09     \u8d37\uff1a\u9884\u4ed8\u8d26\u6b3e</p>"}, {"location": "courses/accounting/6/6/#_11", "title": "\u5176\u4ed6\u5e94\u6536\u6b3e", "text": "<ul> <li>\u62bc\u91d1</li> </ul> <p>\u652f\u4ed8\u62bc\u91d1\u65f6\uff1a   \u501f\uff1a\u5176\u4ed6\u5e94\u6536\u6b3e \u8d37\uff1a\u94f6\u884c\u5b58\u6b3e    </p> <p>\u6536\u5230\u9000\u56de\u7684\u62bc\u91d1\u65f6\uff1a \u501f\uff1a\u94f6\u884c\u5b58\u6b3e   \u8d37\uff1a\u5176\u4ed6\u5e94\u6536\u6b3e</p> <p>Warning</p> <p>\u5176\u4ed6\u5e94\u6536\u6b3e\u4e5f\u5e94\u8be5\u5728\u671f\u672b\u8ba1\u63d0\u505a\u51c6\u5907\u3002</p>"}, {"location": "courses/accounting/7/7/", "title": "\u5b58\u8d27", "text": "<p>\u5b58\u8d27\uff1a</p> <ul> <li>\u5728\u9014\u7269\u8d44</li> <li>\u539f\u6750\u6599</li> <li>\u751f\u4ea7\u6210\u672c\uff08\u5728\u4ea7\u54c1\uff09</li> <li>\u5e93\u5b58\u5546\u54c1</li> </ul>"}, {"location": "courses/accounting/7/7/#_2", "title": "\u5b58\u8d27\u8ba1\u4ef7\u539f\u5219\uff1a\u5b9e\u9645\u6210\u672c", "text": "<p>\u5b58\u8d27\u5e94\u5f53\u6309\u7167\u5b9e\u9645\u6210\u672c\u8fdb\u884c\u521d\u59cb\u8ba1\u91cf\uff0c\u4ee5\u540e\u5982\u679c\u53d1\u751f\u51cf\u503c\uff0c\u5e94\u5f53\u6309\u7167\u89c4\u5b9a\u8ba1\u63d0\u76f8\u5e94\u7684\u51cf\u503c\u51c6\u5907\u3002</p>"}, {"location": "courses/accounting/7/7/#_3", "title": "\u53d6\u5f97\u5b58\u8d27\u7684\u8ba1\u91cf\u53ca\u4f1a\u8ba1\u5904\u7406", "text": ""}, {"location": "courses/accounting/7/7/#_4", "title": "\u5916\u8d2d\u5b58\u8d27\u7684\u5b9e\u9645\u6210\u672c", "text": "<p>\u91c7\u8d2d\uff1a \u501f\uff1a\u539f\u6750\u6599 \u8d37\uff1a\u94f6\u884c\u5b58\u6b3e</p> <p>\u5b9e\u9645\u6210\u672c = \u4e70\u4ef7 + \u8fd0\u6742\u8d39 + \u8fd0\u8f93\u9014\u4e2d\u7684\u5408\u7406\u635f\u8017 + \u5165\u5e93\u524d\u6574\u7406\u6311\u9009\u8d39 + \u91c7\u8d2d\u6750\u6599\u5e94\u8d1f\u62c5\u7684\u7a0e\u91d1    \uff08\u4e5f\u5c31\u662f\u5165\u5e93\u4e4b\u524d\u7684\u5168\u90e8\u8d39\u7528\uff09</p> \u4e00\u822c\u7eb3\u7a0e\u4eba \u5c0f\u89c4\u6a21\u7eb3\u7a0e\u4eba \u7a0e\u7387 13% 3% \u53d1\u7968 \u5f00\u4e13\u7528\u53d1\u7968 \u666e\u901a\u53d1\u7968 \u7a0e\u6b3e\u62b5\u6263\u89c4\u5219 \u53d6\u5f97\u589e\u503c\u7a0e\u4e13\u7528\u53d1\u7968\u53ef\u62b5\u6263\u7a0e\u6b3e \u4e0d\u53ef\u62b5\u6263 \u5e94\u7eb3\u7a0e\u989d\u8ba1\u7b97 \u9500\u9879\u7a0e\u989d - \u8fdb\u9879\u7a0e\u989d \u5f53\u671f\u9500\u552e\u989d * \u5f81\u6536\u7387"}, {"location": "courses/accounting/7/7/#_5", "title": "\u53d1\u51fa\u5b58\u8d27\u7684\u8ba1\u91cf\u53ca\u4f1a\u8ba1\u5904\u7406", "text": ""}, {"location": "courses/accounting/7/7/#_6", "title": "\u5b58\u8d27\u7684\u671f\u672b\u8ba1\u91cf\u53ca\u4f1a\u8ba1\u5904\u7406", "text": ""}, {"location": "courses/ads/1/1/", "title": "AVL Trees, Splay Trees & Amortized", "text": ""}, {"location": "courses/ads/1/1/#avl-trees", "title": "AVL trees", "text": "<p>AVL \u6811\uff0c\u662f\u4e00\u79cd\u5e73\u8861\u7684\u4e8c\u53c9\u641c\u7d22\u6811\u3002</p>"}, {"location": "courses/ads/1/1/#_1", "title": "\u4e3a\u4ec0\u4e48\u9009\u62e9\u5e73\u8861\u4e8c\u53c9\u6811\uff1f", "text": "<p>Average search time\u662f\u641c\u7d22\u6bcf\u4e2a\u8282\u70b9\u82b1\u8d39\u65f6\u95f4\u7684\u5e73\u5747\u3002</p> <p>Average search time =  3.5</p> <p></p> <p>Average search time =  3.1</p> <p></p>"}, {"location": "courses/ads/1/1/#_2", "title": "\u6027\u8d28", "text": "<ol> <li>\u7a7a\u4e8c\u53c9\u6811\u662f\u4e00\u4e2a AVL \u6811 </li> <li>\u5982\u679c T \u662f\u4e00\u68f5 AVL \u6811\uff0c\u90a3\u4e48\u5176\u5de6\u53f3\u5b50\u6811\u4e5f\u662f AVL \u6811\uff0c\u5e76\u4e14 \\(|h(ls) - h(rs)| &lt; 1\\)\uff0ch \u662f\u5176\u5de6\u53f3\u5b50\u6811\u7684\u9ad8\u5ea6</li> <li>\u6811\u9ad8\u4e3a \\(O(log n)\\)</li> </ol> <p>Definition</p> <p>The balance factor BF(node) = h(L) - h(R) .  In an AVL tree, BF(node) = -1, 0, 1.</p> <p>Note</p> <p>\u9519\u8bef\u793a\u8303\uff1a  \u6b63\u786e\u793a\u8303\uff1a </p>"}, {"location": "courses/ads/1/1/#rotation", "title": "\u65cb\u8f6c rotation", "text": "<p> \u65cb\u8f6c\u7684\u7b80\u8981\u64cd\u4f5c\uff1a</p> <ol> <li>\u5de6\u65cb\u5c31\u5411\u5de6\u65cb\uff0c\u53f3\u65cb\u5c31\u5411\u53f3\u65cb</li> <li>\u5de6\u65cb\uff1a\u539f\u975e\u6839\u8282\u70b9\u7684\u5de6\u5b50\u6811\u6389\u5230\u539f\u6839\u8282\u70b9\u7684\u53f3\u5b50\u6811\uff1b\u53f3\u65cb\uff1a\u539f\u975e\u6839\u8282\u70b9\u7684\u53f3\u5b50\u6811\u6389\u5230\u539f\u6839\u8282\u70b9\u7684\u5de6\u5b50\u6811</li> </ol>"}, {"location": "courses/ads/1/1/#_3", "title": "\u4ee3\u7801\u5b9e\u73b0", "text": "C<pre><code>// \u5de6\u65cb\nstruct Node* Lrotation(struct Node* x) { //\u4f20\u5165\u64cd\u4f5c\u8282\u70b9\n    struct Node* y = x-&gt;right; //\u50a8\u5b58\u64cd\u4f5c\u8282\u70b9\u7684\u53f3\u8282\u70b9\n    struct Node* Subtree = y-&gt;left; //\u50a8\u5b58\u64cd\u4f5c\u8282\u70b9\u5de6\u8282\u70b9\u7684\u5de6\u5b50\u6811\n    y-&gt;left = x; // y\u6210\u4e3a\u65b0\u7684\u76f8\u5bf9\u6839\uff0c\u5176\u5de6\u8282\u70b9\u4e3ax\n    x-&gt;right = Subtree; //y\u539f\u6765\u7684\u5de6\u5b50\u6811\u63a5\u5230x\u7684\u53f3\u5b50\u6811\u4e0a\u53bb\n    return y; //\u8fd4\u56de\u65b0\u7684\u6839\n}\n\n// \u53f3\u65cb\nstruct Node* Rrotation(struct Node* y) { //\u4f20\u5165\u64cd\u4f5c\u8282\u70b9\n    struct Node* x = y-&gt;left; //\u50a8\u5b58\u64cd\u4f5c\u8282\u70b9\u7684\u5de6\u8282\u70b9\n    struct Node* Subtree = x-&gt;right; //\u50a8\u5b58\u64cd\u4f5c\u8282\u70b9\u5de6\u8282\u70b9\u7684\u53f3\u5b50\u6811\n    x-&gt;right = y; // x\u6210\u4e3a\u65b0\u7684\u76f8\u5bf9\u6839\uff0c\u5176\u53f3\u8282\u70b9\u4e3ay\n    y-&gt;left = Subtree; //x\u539f\u6765\u7684\u53f3\u5b50\u6811\u63a5\u5230y\u7684\u5de6\u5b50\u6811\u4e0a\u53bb\n    return x; //\u8fd4\u56de\u65b0\u7684\u6839\n}\n</code></pre>"}, {"location": "courses/ads/1/1/#avl-trees_1", "title": "\u6784\u9020 AVL Trees", "text": ""}, {"location": "courses/ads/1/1/#rr-rotation", "title": "RR-rotation", "text": "<p> \u5bf9\u4e8e\u53d1\u73b0\u9519\u8bef\u7684\u8282\u70b9(finder)\u6765\u8bf4\uff0c\u5b83\u53d1\u73b0\u9519\u8bef\u662f\u5728\u5b83\u7684\u53f3\u8282\u70b9\u7684\u53f3\u5b50\u6811\u4e0a\u9762\u7684\u8282\u70b9\u5f15\u53d1\u7684\uff0c\u6240\u4ee5\u51c6\u5907\u8fdb\u884cRR-rotation\u3002</p> <p>\u8fd9\u65f6\u5019\u53ea\u9700\u8981\u4ee5finder\u8fdb\u884c\u4e00\u6b21\u5de6\u65cb\u5373\u53ef\u3002</p> <p></p>"}, {"location": "courses/ads/1/1/#ll-rotation", "title": "LL-rotation", "text": "<p>\u540c\u4e0aRR-rotation\uff0c\u6539\u6210\u53f3\u3002</p>"}, {"location": "courses/ads/1/1/#lr-rotation", "title": "LR-rotation", "text": "<p>finder\u53d1\u73b0\u5f15\u53d1\u9519\u8bef\u7684\u6765\u6e90\u662f\u5de6\u8282\u70b9\u7684\u53f3\u5b50\u6811\u4e0a\u7684\u8282\u70b9\u5f15\u53d1\u7684\u3002\u6b64\u65f6\u7684\u505a\u6cd5\u662f\uff1a</p> <ol> <li>finder\u7684\u5de6\u8282\u70b9\u5de6\u65cb</li> <li>finder\u53f3\u65cb</li> </ol> <p></p>"}, {"location": "courses/ads/1/1/#rl-rotation", "title": "RL-rotation", "text": "<p>\u540c\u4e0aLR-rotation\uff0c\u6539\u4e0b\u5de6\u53f3\u3002  </p> <p>Note</p> <p>\u589e\u52a0\u4e00\u4e2a\u8282\u70b9\u4f1a\u5bfc\u81f4\u63d2\u5165\u8282\u70b9\u4e00\u8def\u5411\u4e0a\u5230\u6839\u8282\u70b9\u7684BF\u503c\u6539\u53d8\u3002</p> <p>\u589e\u52a0\u4e00\u4e2a\u8282\u70b9\u4e0d\u4e00\u5b9a\u4f1a\u51fa\u73b0\u95ee\u9898\u3002</p> <p>\u51fa\u73b0\u95ee\u9898\u53ea\u9700\u89e3\u51b3\u6700\u4f4e\u7684finder\uff0c\u5b83\u4e0a\u9762\u7684finder\u4f1a\u968f\u7740\u6539\u53d8\u81ea\u52a8\u53d8\u5408\u6cd5\u3002</p>"}, {"location": "courses/ads/1/1/#_4", "title": "\u4ee3\u7801\u5b9e\u73b0", "text": "<p>C<pre><code>struct Node* insert(struct Node* root, int data) { // AVL\u6811\u7684\u521b\u5efa\n    // \u521b\u5efaBST\n    if (root == NULL) {\n        return createNode(data);\n    }\n    if (data &lt; root-&gt;data) {\n        root-&gt;left = insert(root-&gt;left, data);\n    }\n    else if (data &gt; root-&gt;data) {\n        root-&gt;right = insert(root-&gt;right, data);\n    }\n    // \u6821\u51c6BST\uff0c\u4f7f\u5176\u6210\u4e3aAVL\u6811\n    int bf = BF(root);\n    if(bf &gt; 1 &amp;&amp; data &lt; root-&gt;left-&gt;data) { // LL-Rotation\n        return Rrotation(root);\n    }\n    if(bf &lt; -1 &amp;&amp; data &gt; root-&gt;right-&gt;data) { // RR-Rotaion\n        return Lrotation(root);\n    }\n    if(bf &gt; 1 &amp;&amp; data &gt; root-&gt;left-&gt;data) { // LR-Rotation\n        root-&gt;left = Lrotation(root-&gt;left);\n        return Rrotation(root);\n    }\n    if(bf &lt; -1 &amp;&amp; data &lt; root-&gt;right-&gt;data) { // RL-Rotation\n        root-&gt;right = Rrotation(root-&gt;right);\n        return Lrotation(root);\n    }\n    return root; //\u82e5\u6ca1\u6709\u91c7\u53d6\u4efb\u4f55\u7684\u64cd\u4f5c\uff0c\u5219\u76f4\u63a5\u8fd4\u56de\u6839\n}\n</code></pre> </p>"}, {"location": "courses/ads/1/1/#_5", "title": "\u5206\u6790", "text": "<p> \u5bf9\u4e8e\u8ba1\u7b97\u6709\u5f88\u5927\u7528\u3002</p>"}, {"location": "courses/ads/1/1/#splay-trees", "title": "Splay Trees", "text": "<p>Splay \u6811, \u6216 \u4f38\u5c55\u6811\uff0c\u662f\u4e00\u79cd\u5e73\u8861\u4e8c\u53c9\u67e5\u627e\u6811\uff0c\u5b83\u901a\u8fc7 Splay/\u4f38\u5c55\u64cd\u4f5c \u4e0d\u65ad\u5c06\u67d0\u4e2a\u8282\u70b9\u65cb\u8f6c\u5230\u6839\u8282\u70b9\uff0c\u4f7f\u5f97\u6574\u68f5\u6811\u4ecd\u7136\u6ee1\u8db3\u4e8c\u53c9\u67e5\u627e\u6811\u7684\u6027\u8d28\uff0c\u80fd\u591f\u5728\u5747\u644a \\(O(log N)\\) \u65f6\u95f4\u5185\u5b8c\u6210\u63d2\u5165\uff0c\u67e5\u627e\u548c\u5220\u9664\u64cd\u4f5c\uff0c\u5e76\u4e14\u4fdd\u6301\u5e73\u8861\u800c\u4e0d\u81f3\u4e8e\u9000\u5316\u4e3a\u94fe\u3002</p>"}, {"location": "courses/ads/1/1/#_6", "title": "\u7f6e\u9876\u64cd\u4f5c", "text": ""}, {"location": "courses/ads/1/1/#zig", "title": "zig", "text": "<p>\u76f4\u63a5\u8f6cX\u548cP\uff0c\u5c06X\u53d8\u4e3a\u6839</p>"}, {"location": "courses/ads/1/1/#zig-zig", "title": "zig-zig", "text": "<p>\u5148\u8f6c\u4e0a\uff0c\u518d\u8f6c\u4e0b\uff0c\u5c06X\u53d8\u4e3a\u6839</p>"}, {"location": "courses/ads/1/1/#zig-zag", "title": "zig-zag", "text": "<p>\u5148\u8f6c\u4e0b\uff0c\u518d\u8f6c\u4e0a\uff0c\u5c06X\u53d8\u4e3a\u6839\u3002</p>"}, {"location": "courses/ads/1/1/#_7", "title": "\u5220\u9664\u64cd\u4f5c", "text": "<p> \u627e\u5230\u8981\u5220\u9664\u7684\u8282\u70b9\u65f6\uff0csplay\u6811\u5df2\u7ecf\u5c06\u5176\u53d8\u6210\u6839\u4e86\u3002\u5220\u9664\u6839\uff0c\u7559\u4e0b\u5de6\u53f3\u4e24\u4e2a\u5b50\u6811\u3002\u63a5\u4e0b\u6765\u627e\u5de6\u5b50\u6811\u7684\u6700\u5927\u503c\uff0c\u6b64\u65f6\u5de6\u5b50\u6811\u7684\u6700\u5927\u503c\u53d8\u6210\u4e86\u6839\u3002\u6839\u636ebinary search tree\uff0c\u5de6\u5b50\u6811\u7684\u6700\u5927\u503c\u6ca1\u6709\u53f3\u8282\u70b9\u3002\u6700\u540e\u53ea\u9700\u5c06\u53f3\u5b50\u6811\u63a5\u8fc7\u53bb\u5c31\u597d\u4e86\u3002</p>"}, {"location": "courses/ads/1/1/#_8", "title": "\u63d2\u5165\u64cd\u4f5c", "text": "<p>\u5148\u50cfBST\u4e00\u6837\u63d2\u5165\uff0c\u7136\u540e\u518d\u628a\u8fd9\u4e2a\u8282\u70b9\u65cb\u8f6c\u5230\u6839\u8282\u70b9\u3002</p>"}, {"location": "courses/ads/1/1/#amortized-analysis", "title": "Amortized Analysis", "text": ""}, {"location": "courses/ads/1/1/#_9", "title": "\u5f15\u5165", "text": "<p>\u5747\u644a\u5206\u6790\uff08Amortized Analysis\uff09\u662f\u4e00\u79cd\u7528\u4e8e\u5206\u6790\u7b97\u6cd5\u548c\u52a8\u6001\u6570\u636e\u7ed3\u6784\u6027\u80fd\u7684\u6280\u672f\u3002\u5b83\u4e0d\u4ec5\u4ec5\u5173\u6ce8\u5355\u6b21\u64cd\u4f5c\u7684\u6210\u672c\uff0c\u8fd8\u901a\u8fc7\u8bc4\u4f30\u4e00\u7cfb\u5217\u64cd\u4f5c\u7684\u5e73\u5747\u6210\u672c\uff0c\u4e3a\u6574\u4f53\u6027\u80fd\u63d0\u4f9b\u66f4\u52a0\u51c6\u786e\u7684\u8bc4\u4f30\u3002\u5747\u644a\u5206\u6790\u4e0d\u6d89\u53ca\u6982\u7387\uff0c\u4e14\u53ea\u80fd\u786e\u4fdd\u6700\u574f\u60c5\u51b5\u6027\u80fd\u7684\u6bcf\u6b21\u64cd\u4f5c\u8017\u8d39\u7684\u5e73\u5747\u65f6\u95f4\uff0c\u5e76\u4e0d\u80fd\u786e\u8ba4\u7cfb\u7edf\u7684\u5e73\u5747\u6027\u80fd\u3002\u5728\u6700\u574f\u60c5\u51b5\u4e0b\uff0c\u5747\u644a\u5206\u6790\u901a\u8fc7\u5c06\u9ad8\u6210\u672c\u64cd\u4f5c\u7684\u5f00\u9500\u5206\u644a\u5230\u4f4e\u6210\u672c\u64cd\u4f5c\u4e0a\uff0c\u786e\u4fdd\u6574\u4f53\u64cd\u4f5c\u7684\u5e73\u5747\u6210\u672c\u4fdd\u6301\u5728\u5408\u7406\u8303\u56f4\u5185\u3002</p> <p></p> <p>\u5747\u644a\u5206\u6790\u901a\u5e38\u91c7\u7528\u4e09\u79cd\u4e3b\u8981\u5206\u6790\u65b9\u6cd5\uff1a\u805a\u5408\u5206\u6790\u3001\u8bb0\u8d26\u5206\u6790\u548c\u52bf\u80fd\u5206\u6790\u3002\u8fd9\u4e9b\u65b9\u6cd5\u5404\u6709\u4fa7\u91cd\uff0c\u5206\u522b\u9002\u7528\u4e8e\u4e0d\u540c\u7684\u573a\u666f\uff0c\u4f46\u5b83\u4eec\u7684\u5171\u540c\u76ee\u6807\u662f\u901a\u8fc7\u5747\u8861\u64cd\u4f5c\u6210\u672c\uff0c\u4f18\u5316\u6570\u636e\u7ed3\u6784\u5728\u6700\u574f\u60c5\u51b5\u4e0b\u7684\u6574\u4f53\u6027\u80fd\u8868\u73b0\u3002</p> <p>\u4ee5\u4e0b\u4e09\u79cd\u5206\u6790\u5747\u7528\u6808\u6765\u5206\u6790(Pop, Push, Multipop)\uff1a</p>"}, {"location": "courses/ads/1/1/#aggregate-analysis", "title": "\u805a\u5408\u5206\u6790 Aggregate analysis", "text": "<p>\u8bc1\u660e\u5bf9\u6240\u6709\u7684n\uff0c\u7531n\u4e2a\u64cd\u4f5c\u6240\u6784\u6210\u7684\u5e8f\u5217\u7684\u603b\u65f6\u95f4\u5728\u6700\u574f\u60c5\u51b5\u4e0b\u4e3aT(n)\uff0c\u6bcf\u4e00\u4e2a\u64cd\u4f5c\u7684\u5e73\u5747\u6210\u672c\u4e3aT(n)/n\uff1b</p>"}, {"location": "courses/ads/1/1/#accounting-method", "title": "\u8bb0\u8d26\u5206\u6790 Accounting method", "text": "<p>\u5728\u5e73\u644a\u5206\u6790\u7684\u8bb0\u5e10\u65b9\u6cd5\u4e2d\uff0c\u51b3\u5b9a\u6bcf\u4e00\u4e2a\u64cd\u4f5c\u7684\u5747\u644a\u6210\u672c\uff0c\u5bf9\u4e0d\u540c\u7684\u64cd\u4f5c\u8d4b\u4e88\u4e0d\u540c\u7684\u8d39\u7528\uff0c\u67d0\u4e9b\u64cd\u4f5c\u7684\u8d39\u7528\u6bd4\u5b83\u4eec\u7684\u5b9e\u9645\u4ee3\u4ef7\u6216\u591a\u6216\u5c11\u3002\u6211\u4eec\u5bf9\u4e00\u4e2a\u64cd\u4f5c\u7684\u6536\u8d39\u7684\u6570\u91cf\u79f0\u4e3a\u5e73\u644a\u4ee3\u4ef7\u3002\u5f53\u4e00\u4e2a\u64cd\u4f5c\u7684\u5e73\u644a\u4ee3\u4ef7\u8d85\u8fc7\u4e86\u5b83\u7684\u5b9e\u9645\u4ee3\u4ef7\u65f6\uff0c\u4e24\u8005\u7684\u5dee\u503c\u5c31\u88ab\u5f53\u4f5c\u5b58\u6b3e(credit)\uff0c\u5e76\u8d4b\u4e88\u6570\u636e\u7ed3\u6784\u4e2d\u7684\u4e00\u4e9b\u7279\u5b9a\u5bf9\u8c61\uff0c\u53ef\u4ee5\u7528\u6765\u8865\u507f\u90a3\u4e9b\u5e73\u644a\u4ee3\u4ef7\u4f4e\u4e8e\u5176\u5b9e\u9645\u4ee3\u4ef7\u7684\u64cd\u4f5c\u3002\u8fd9\u79cd\u65b9\u6cd5\u4e0e\u805a\u96c6\u5206\u6790\u4e0d\u540c\u7684\u662f\uff0c\u5bf9\u540e\u8005\uff0c\u6240\u6709\u64cd\u4f5c\u90fd\u5177\u6709\u76f8\u540c\u7684\u5e73\u644a\u4ee3\u4ef7\u3002\u6570\u636e\u7ed3\u6784\u4e2d\u5b58\u50a8\u7684\u603b\u5b58\u6b3e\u7b49\u4e8e\u603b\u7684\u5e73\u644a\u4ee3\u4ef7\u548c\u603b\u7684\u5b9e\u9645\u4ee3\u4ef7\u4e4b\u5dee\u3002</p>"}, {"location": "courses/ads/1/1/#potential-method", "title": "\u52bf\u80fd\u5206\u6790 Potential method", "text": "<p>\u5728\u5e73\u644a\u5206\u6790\u4e2d\uff0c\u52bf\u80fd\u65b9\u6cd5\uff08potential  method\uff09\u4e0d\u662f\u5c06\u5df2\u9884\u4ed8\u7684\u5de5\u4f5c\u4f5c\u4e3a\u5b58\u5728\u6570\u636e\u7ed3\u6784\u7279\u5b9a\u5bf9\u8c61\u4e2d\u5b58\u6b3e\u6765\u8868\u793a\uff0c\u800c\u662f\u5c06\u5b58\u6b3e\u603b\u4f53\u4e0a\u8868\u793a\u6210\u4e00\u79cd\u201c\u52bf\u80fd\u201d\u6216\u201c\u52bf\u201d\uff0c\u5b83\u5728\u9700\u8981\u65f6\u53ef\u4ee5\u91ca\u653e\u51fa\u6765\uff0c\u4ee5\u652f\u4ed8\u540e\u9762\u7684\u64cd\u4f5c\u3002\u52bf\u662f\u4e0e\u6574\u4e2a\u6570\u636e\u7ed3\u6784\u800c\u4e0d\u662f\u5176\u4e2d\u7684\u4e2a\u522b\u5bf9\u8c61\u53d1\u751f\u8054\u7cfb\u7684\u3002  \u5982\u679c\u80fd\u627e\u5230\\(O(\\log n)\\)\u6765\u7ea6\u675f\u5747\u644a\u6210\u672c\uff0c\u5219\u5b9e\u9645\u6210\u672c\u5c31\u4f1a\u88ab\\(O(\\log n)\\)\u7ea6\u675f\u4f4f\u3002</p> <p></p> <p> </p>"}, {"location": "courses/ads/2/2/", "title": "\u7ea2\u9ed1\u6811, B+\u6811", "text": ""}, {"location": "courses/ads/2/2/#_1", "title": "\u7ea2\u9ed1\u6811", "text": "<p>https://www.cs.usfca.edu/~galles/visualization/RedBlack.html</p> <p>\u7ea2\u9ed1\u6811\u662f\u4e00\u79cd\u81ea\u5e73\u8861\u7684\u4e8c\u53c9\u641c\u7d22\u6811\u3002\u6bcf\u4e2a\u8282\u70b9\u989d\u5916\u5b58\u50a8\u4e86\u4e00\u4e2a color \u5b57\u6bb5 (\"RED\" or \"BLACK\")\uff0c\u7528\u4e8e\u786e\u4fdd\u6811\u5728\u63d2\u5165\u548c\u5220\u9664\u65f6\u4fdd\u6301\u5e73\u8861\u3002</p>"}, {"location": "courses/ads/2/2/#_2", "title": "\u6027\u8d28", "text": "<p>\u4e00\u68f5\u5408\u6cd5\u7684\u7ea2\u9ed1\u6811\u5fc5\u987b\u9075\u5faa\u4ee5\u4e0b\u4e94\u6761\u6027\u8d28\uff1a</p> <ol> <li>\u8282\u70b9\u4e3a\u7ea2\u8272\u6216\u9ed1\u8272</li> <li>NIL \u8282\u70b9\uff08\u7a7a\u53f6\u5b50\u8282\u70b9\uff09\u4e3a\u9ed1\u8272</li> <li>\u7ea2\u8272\u8282\u70b9\u7684\u5b50\u8282\u70b9\u4e3a\u9ed1\u8272</li> <li>\u4ece\u6839\u8282\u70b9\u5230 NIL \u8282\u70b9\u7684\u6bcf\u6761\u8def\u5f84\u4e0a\u7684\u9ed1\u8272\u8282\u70b9\u6570\u91cf\u76f8\u540c</li> <li>\u6839\u8282\u70b9\u5fc5\u987b\u4e3a\u9ed1\u8272\uff08\uff1f</li> </ol> <p>\u4e0b\u56fe\u4e3a\u4e00\u68f5\u5408\u6cd5\u7684\u7ea2\u9ed1\u6811\uff1a</p> <p></p> <p>\u63d2\u5165\u7684\u8282\u70b9\u9ed8\u8ba4\u662f\u7ea2\u8272\u7684\u3002</p> <p>Note</p> <p>\u8fd9\u4e0d\u662f\u4e00\u4e2a\u5408\u6cd5\u7684\u7ea2\u9ed1\u6811\u3002   </p>"}, {"location": "courses/ads/2/2/#_3", "title": "\u63d2\u5165", "text": "<p>\u63d2\u5165\u8282\u70b9\u9ed8\u8ba4\u662f\u7ea2\u8272\uff0c\u8fd9\u6837\u53ea\u53ef\u80fd\u8fdd\u53cd\u6839\u53f6\u9ed1\u6216\u4e0d\u7ea2\u7ea2\u6027\u8d28\u3002</p>"}, {"location": "courses/ads/2/2/#root", "title": "\u63d2\u5165\u8282\u70b9\u662froot", "text": "<p>\u76f4\u63a5\u53d8\u9ed1\u3002</p>"}, {"location": "courses/ads/2/2/#u", "title": "U\u662f\u7ea2\u8272", "text": "<p>G\u53d8\u7ea2\uff0cU\u548cP\u53d8\u9ed1\uff0c\u7136\u540e\u5c06G\u53d8\u4e3aX\u7ee7\u7eed\u68c0\u67e5\u3002</p>"}, {"location": "courses/ads/2/2/#u_1", "title": "U\u662f\u9ed1\u8272", "text": "<p>LL,RR,LR,RL-rotation, then change the color.\uff08\u5411\u4e0a\u9012\u5f52\uff09</p> <p></p>"}, {"location": "courses/ads/2/2/#_4", "title": "\u5220\u9664", "text": "<p>\u7ea2\u9ed1\u6811\u7684\u5220\u9664\u662f\u4e00\u4e2a\u5341\u5206\u7e41\u7410\u7684\u8fc7\u7a0b\u3002</p> <p>Warning</p> <p>\u63a5\u4e0b\u6765\u8bf4\u7684\u5b69\u5b50\u4e0d\u5305\u62ec\u7a7a\u8282\u70b9!</p>"}, {"location": "courses/ads/2/2/#case-1", "title": "Case 1", "text": "<p>\u6ca1\u6709\u5b69\u5b50\u3002 - \u7ea2\u8272\u5b69\u5b50\uff1a\u76f4\u63a5\u5220\u9664 - \u9ed1\u8272\u5b69\u5b50\uff1a\u6700\u590d\u6742\uff0c\u653e\u5230\u6700\u540e\u8bb2</p>"}, {"location": "courses/ads/2/2/#case-2", "title": "Case 2", "text": "<p>\u53ea\u6709\u5de6\u5b50\u6811/\u53ea\u6709\u53f3\u5b50\u6811\u3002  \u6839\u636e\u7ea2\u9ed1\u6811\u7684\u6027\u8d28\uff0c\u8fd9\u79cd\u60c5\u51b5\u4e00\u5b9a\u662f\u4e00\u9ed1\u4e00\u7ea2\u3002 \u64cd\u4f5c\uff1a</p> <ol> <li>\u76f4\u63a5\u7528\u4e0b\u9762\u7684\u8282\u70b9\u66ff\u6362\u6389\u4e0a\u9762\u7684\u8282\u70b9</li> <li>\u5c06\u66ff\u6362\u540e\u7684\u8282\u70b9\u53d8\u6210\u9ed1\u8272</li> </ol>"}, {"location": "courses/ads/2/2/#case-x", "title": "Case X", "text": ""}, {"location": "courses/ads/2/2/#b_1", "title": "B+\u6811", "text": ""}, {"location": "courses/ads/2/2/#_5", "title": "\u5b9a\u4e49\u4e0e\u6027\u8d28", "text": "<p> \u4e00\u4e2a Order M \u7684 B+ \u6811\u5b9a\u4e49\u5982\u4e0b\uff1a</p> <ul> <li>\u6839\u8282\u70b9\u8981\u4e48\u662f\u53f6\u8282\u70b9\uff0c\u8981\u4e48\u6709 2 \u5230 \\(M\\) \u4e2a\u5b50\u8282\u70b9</li> <li>\u6240\u6709\u9664\u4e86\u6839\u8282\u70b9\u7684\u975e\u53f6\u8282\u70b9\u90fd\u6709 \\(\\lceil \\frac{M}{2} \\rceil\\) \u5230 \\(M\\) \u4e2a\u5b50\u8282\u70b9</li> <li>\u6240\u6709\u53f6\u8282\u70b9\u6df1\u5ea6\u76f8\u540c</li> </ul> <p>Tip</p> <p>\u5b9e\u9645\u4e0a\uff0c\u6240\u6709\u6570\u636e\u90fd\u5b58\u50a8\u5728\u53f6\u8282\u70b9\u91cc</p> <p>Example</p> <ul> <li>A 2-3 tree with 3 nonleaf nodes must have 18 keys at most. (T)</li> </ul> \u89e3\u91ca <p>\u4e00\u4e2a\u975e\u53f6\u8282\u70b9\u4e3a\u6839\u8282\u70b9\uff0c\u5176\u4f59\u4e24\u4e2a\u8282\u70b9\u6700\u591a\u6709 2*3=6 \u4e2a\u53f6\u8282\u70b9\u5b69\u5b50\uff1b\u4e00\u4e2a\u53f6\u5b50\u5b58\u653e 3 \u4e2a key\uff0c\u4e00\u5171 18 \u4e2a</p>"}, {"location": "courses/ads/2/2/#_6", "title": "\u63d2\u5165\u64cd\u4f5c", "text": "<p>Tip</p> <p>\u5bf9\u4e8e\u53f6\u5b50\u8282\u70b9\uff0c\u6700\u591a\u53ef\u4ee5\u5b58 M \u4e2a Key\uff1b\u5bf9\u4e8e\u5185\u8282\u70b9\uff0c\u6700\u591a\u53ef\u4ee5\u5b58 M-1 \u4e2a Key</p> <p>\u4ee52-3\u6811\u4e3a\u4f8b\u5b50\uff0c\u63d2\u5165\u64cd\u4f5c\u5982\u4e0b\uff1a</p> <ol> <li>\u4e0e\u5185\u90e8\u8282\u70b9\u6240\u5b58\u952e\u503c\u6bd4\u8f83\uff0c\u627e\u5230\u5408\u9002\u53f6\u8282\u70b9\u63d2\u5165\u3002</li> <li>\u5982\u679c\u63d2\u5165\u540e\u8be5\u8282\u70b9\u952e\u6570\u4e0d\u8d85\u8fc73\uff0c\u5219\u63d2\u5165\u7ed3\u675f\u3002</li> <li>\u82e5\u8d85\u8fc73\u4e2a\u8282\u70b9\uff08\u4e5f\u5c31\u662f4\u4e2a\u8282\u70b9\uff09\uff0c\u6309\u7167\u5927\u5c0f\u5206\u6210\u4e24\u4e2a\u8282\u70b9\uff0c\u7236\u8282\u70b9\u589e\u52a0\u4e00\u4e2a\u503c\u3002\u82e5\u7236\u8282\u70b9\u589e\u52a0\u540e\u4e0d\u8d85\u8fc72\uff0c\u5219\u63d2\u5165\u7ed3\u675f\u3002</li> <li>\u82e5\u7236\u8282\u70b9\u8d85\u8fc7\u4e862\u4e2a\u503c\uff083\u4e2a\u503c\uff09\uff0c\u5c06\u8be5\u8282\u70b9\u5206\u4e3a\u4e24\u4e2a\u8282\u70b9\uff0c\u5de6\u8282\u70b9\u7ee7\u627fkey[0], \u53f3\u8282\u70b9\u7ee7\u627fkey[2], key[1]\u4f5c\u4e3a\u65b0\u7684\u952e\u503c\u4f20\u7ed9\u7236\u8282\u70b9\uff0c\u9012\u5f52\u3002</li> </ol>"}, {"location": "courses/ads/2/2/#_7", "title": "\u5220\u9664\u64cd\u4f5c", "text": "<ol> <li>\u5220\u9664\u540e\u82e5\u65e0\u5f02\u5e38\uff0c\u7ed3\u675f\u3002</li> <li>\u82e5\u4f4e\u4e8em/2\uff0c\u5219\u8003\u8651<ol> <li>\u501f\u65c1\u8fb9\u8282\u70b9\u7684</li> <li>\u82e5\u4e0d\u80fd\u501f\uff08\u501f\u4e86\u4f4e\u4e8em/2\uff09\uff0c\u5219\u5408\u5e76</li> </ol> </li> <li>\u9012\u5f52\u5411\u4e0a</li> </ol>"}, {"location": "courses/ads/3/3/", "title": "Invert File Index", "text": ""}, {"location": "courses/ads/3/3/#definition", "title": "Definition", "text": "<ul> <li>Index is a mechanism for locating a given term in a text.</li> <li>Inverted file contains a list of pointers (e.g. the number of a page) to all occurrences of that term in the text.</li> <li> \u7b2c\u5341\u4e2aTerm:silver<code>&lt;2;(1;2),(3;3,7)&gt;</code>\u662f\u6307\u8fd9\u4e2a\u8bcd\u5728\u4e24\u7bc7\u6587\u7ae0\u4e2d\u51fa\u73b0\u8fc7\uff0c\u5728\u7b2c\u4e00\u7bc7\u7684\u7b2c\u4e8c\u4e2a\u8bcd\uff0c\u5728\u7b2c\u4e8c\u7bc7\u7684\u7b2c3\u4e2a\u548c\u7b2c7\u4e2a\u8bcd\u3002</li> </ul> <p>\u67e5\u627e\u65f6\uff0c\u5148\u627eTerm\uff0c\u518d\u7531Term\u5f15\u5230Postlist\u7684\u94fe\u8868\u3002</p> <p>\u6570\u636e\u7ed3\u6784</p> <p>Term\u7684\u5b9e\u73b0\u4e0d\u53ef\u80fd\u7528\u5217\u8868\uff0c\u56e0\u4e3a\u4e00\u4e2a\u4e2a\u679a\u4e3e\u592a\u6162\u4e86\u3002Postlist\u4e00\u822c\u662f\u4f7f\u7528\u94fe\u8868\u3002</p> <p>Term\u7684\u6570\u636e\u7ed3\u6784</p> <p></p> <ul> <li> <p>Hashing</p> <ul> <li>\u7406\u60f3\u60c5\u51b5\u4e0b\uff0chashing\u7684\u5355\u4e2a\u67e5\u8be2\u66f4\u5feb</li> <li>Hashing\u7684\u95ee\u9898\u5728\u4e8e\u51b2\u7a81\u4ee5\u53ca\u4e0d\u652f\u6301\u5feb\u901f\u7684\u8303\u56f4\u67e5\u8be2\u3002\u6bd4\u5982\u8981\u67e5\u627e\u4e00\u5806re\u5f00\u5934\u7684\u5355\u8bcd\uff0c\u4f1a\u9700\u8981\u4e00\u4e2a\u4e2a\u7b97\u54c8\u5e0c\u503c\u3002</li> </ul> </li> <li> <p>\u5b57\u5178\u6811Tries</p> <ul> <li>\u6bcf\u4e2a\u53f6\u8282\u70b9\u90fd\u4ee3\u8868\u4e00\u4e2aTerm</li> <li>\u82e5\u5355\u8bcd\u6709\u76f8\u540c\u524d\u7f00\uff0c\u5219\u4f1a\u7ecf\u8fc7\u76f8\u540c\u7236\u8282\u70b9</li> <li>\u590d\u6742\u5ea6\u5c31\u662f\u5355\u8bcd\u7684\u957f\u5ea6 </li> </ul> </li> </ul> <p>\u751f\u6210Term\u7684\u4f2a\u4ee3\u7801\uff1a </p>"}, {"location": "courses/ads/3/3/#term", "title": "\u63d0\u53d6\u6587\u7ae0\u4e2dTerm", "text": "<p>\u5f53\u8bfb\u53d6\u6587\u7ae0\u4e2d\u7684 Term \u7528\u4f5c\u7d22\u5f15\u65f6\uff0c\u8fd8\u9700\u8981\uff1a</p> <ul> <li>Word Stemming<ul> <li>\u63d0\u53d6\u8be5 Term \u7684\u8bcd\u6839\uff0c\u5982 says,said,saying \u90fd\u770b\u4f5c\u8bcd\u6839 say</li> <li>https://tartarus.org/martin/PorterStemmer/</li> <li>https://github.com/wooorm/stmr.c</li> </ul> </li> <li>Stop Words<ul> <li>\u4e00\u4e9b Term \u592a\u8fc7\u5e38\u89c1\uff0c\u6ca1\u6709\u4ef7\u503c\uff0c\u6240\u4ee5\u9700\u8981\u8fc7\u6ee4\u5b83\u4eec</li> <li>\u641c\u7d22 Word Stop List \u5373\u53ef\u627e\u5230\u8fc7\u6ee4\u5217\u8868</li> </ul> </li> </ul>"}, {"location": "courses/ads/3/3/#term_1", "title": "\u5b58\u50a8Term", "text": ""}, {"location": "courses/ads/3/3/#lru-least-recently-used", "title": "LRU (Least Recently Used)", "text": "<p> <p></p>"}, {"location": "courses/ads/3/3/#distributed-index", "title": "Distributed Index", "text": "<p>\u6309\u7167\u4e00\u5b9a\u89c4\u5219\u8fdb\u884c\u5206\u5e03\u5f0f\u5b58\u50a8\uff1a </p> <ul> <li>\u7b2c\u4e00\u79cd\u5b58\u50a8\u5f88\u590d\u6742\uff0c\u4f46\u662f\u68c0\u7d22\u65b9\u4fbf</li> <li>\u7b2c\u4e8c\u79cd\u5b58\u50a8\u65b9\u4fbf\uff0c\u4f46\u662f\u68c0\u7d22\u5f88\u590d\u6742</li> </ul>"}, {"location": "courses/ads/3/3/#dynamic-indexing", "title": "Dynamic indexing", "text": ""}, {"location": "courses/ads/3/3/#compression", "title": "Compression", "text": ""}, {"location": "courses/ads/3/3/#thresholding", "title": "Thresholding", "text": ""}, {"location": "courses/ads/3/3/#measure", "title": "Measure", "text": "<ul> <li>\u7cbe\u786e\u7387 \u662f\u68c0\u7d22\u5230\u7684\u76f8\u5173\u8bb0\u5f55\u4e0e\u68c0\u7d22\u5230\u7684\u8bb0\u5f55\u603b\u6570\u7684\u6bd4\u7387\u3002</li> <li>\u53ec\u56de\u7387 \u662f\u68c0\u7d22\u5230\u7684\u76f8\u5173\u8bb0\u5f55\u4e0e\u76f8\u5173\u8bb0\u5f55\u603b\u6570\u7684\u6bd4\u503c\u3002</li> </ul>"}, {"location": "courses/ads/3/3/#_1", "title": "\u4f8b\u9898", "text": "<p>Example</p> <p>In distributed indexing, document-partitioned strategy is to store on each node all the documents that contain the terms in a certain range.</p> answer <p>F \u5728\u78c1\u76d8\u5206\u533a\u7d22\u5f15\u6280\u672f\u4e2d\uff0c\u6bcf\u4e2a\u8282\u70b9\u5747\u4f1a\u5b58\u653e\u90e8\u5206\u7d22\u5f15\uff0c\u800c\u4e0d\u662f\u6240\u6709\u7684\u7d22\u5f15\u3002\u56e0\u4e3a\u5206\u5e03\u5f0f\u7d22\u5f15\u7684\u65b9\u5f0f\u662f\u6309\u6587\u6863\u5e8f\u53f7\u6392\u5e8f\u7684\uff0c\u5982\u679c\u6309\u5305\u542b\u7684terms\u5206\u7c7b\uff0c\u5728\u50a8\u5b58\u6545\u969c\u65f6\uff0c\u5173\u4e8e\u8fd9\u4e2aterms\u7684\u6587\u6863\u5168\u6ca1\u4e86\uff0c\u4e0d\u6297\u98ce\u9669\u3002</p> <p>Example</p> <p>When evaluating the performance of data retrieval, it is important to measure the relevancy of the answer set.</p> answer <p>F \u8fd9\u4e2a\u8bf4\u7684\u662fdata retrieval\uff0c\u9519\u3002Information retrieval\u624d\u9700\u8981measure the relevancy of the answer set\u3002</p> <p>Example</p> <p>Precision is more important than recall when evaluating the explosive detection in airport security. </p> answer <p>F \u5728\u673a\u573a\u5b89\u5168\u7684\u5371\u9669\u54c1\u63a2\u6d4b\u4e2d\u5e94\u8be5\u662fRecall\u7387\u66f4\u91cd\u8981\u3002</p> <p>Example</p> <p>While accessing a term by hashing in an inverted file index, range searches are expensive.  </p> answer <p>T \u54c8\u5e0c\u4e0d\u9002\u5408\u8303\u56f4\u641c\u7d22</p> <p>Example</p> <p>When measuring the relevancy of the answer set, if the precision is high but the recall is low, it means that:</p> <p>A. most of the relevant documents are retrieved, but too many irrelevant documents are returned as well</p> <p>B. most of the retrieved documents are relevant, but still a lot of relevant documents are missed</p> <p>C. most of the relevant documents are retrieved, but the benchmark set is not large enough</p> <p>D. most of the retrieved documents are relevant, but the benchmark set is not large enough</p> answer <p>B</p> <p>Example</p> <p>Which of the following is NOT concerned for measuring a search engine?</p> <p>A. How fast does it index</p> <p>B. How fast does it search</p> <p>C. How friendly is the interface</p> <p>D. How relevant is the answer set</p> answer <p>C</p> <p>Example</p> <p>There are 28000 documents in the database. The statistic data for one query are shown in the following table. The recall is: __</p> Relevant Irrelevant Retrieved 4000 12000 Not Retrieved 8000 4000 answer <p>33% \u53ec\u56de\u7387\u662f\u68c0\u7d22\u5230\u7684\u76f8\u5173\u8bb0\u5f55\u4e0e\u76f8\u5173\u8bb0\u5f55\u603b\u6570\u7684\u6bd4\u503c\u30024000/4000+8000</p>"}, {"location": "courses/ads/4/4/", "title": "Leftist Heap &amp; Skew Heap", "text": ""}, {"location": "courses/ads/4/4/#leftist-heap", "title": "Leftist Heap", "text": "<p>Discussion</p> <p>How fast can we merge two heaps if we simply use the original heap structure? </p> <p>\u7b54\u6848\u662fO(n).\u5149\u662f\u4e24\u4e2a\u6570\u7ec4\u4e4b\u95f4\u7684\u590d\u5236\u5c31\u8981O(n)\u7684\u590d\u6742\u5ea6\u3002</p>"}, {"location": "courses/ads/4/4/#definition", "title": "Definition", "text": "<p>\u5de6\u504f\u5806\uff0c\u4ea6\u79f0\u5de6\u504f\u6811\uff08Leftist Tree\uff09\uff0c\u662f\u4e00\u79cd\u7528\u4e8e\u5b9e\u73b0\u4f18\u5148\u7ea7\u961f\u5217\u7684 Binary Heap \u6570\u636e\u7ed3\u6784\uff0c\u5b83\u5177\u6709\u548c\u5806\u4e00\u6837\u7684\u5927\u5c0f\u987a\u5e8f\uff0c\u4f46\u8868\u73b0\u5f62\u5f0f\u4e3a\u975e\u5e73\u8861\u4e8c\u53c9\u6811\uff0c\u56e0\u6b64\u4e0d\u80fd\u4f7f\u7528\u6570\u7ec4\u8868\u793a\u548c\u7ef4\u62a4\u3002</p> <p>\u5de6\u504f\u5806\u7684\u5173\u952e\u7279\u5f81\u4e4b\u4e00\u662f\u8ba1\u7b97\u548c\u7ef4\u62a4\u6bcf\u4e2a\u8282\u70b9\u7684 Null Path Length \uff0c\u8be5\u957f\u5ea6\u5b9a\u4e49\u4e3a\u4ece\u8282\u70b9 X \u5230\u6700\u8fd1\u7684 Null \u8282\u70b9\u7684\u8ddd\u79bb\uff0c\u5728\u7a0b\u5e8f\u7ed3\u6784\u4e2d\u901a\u5e38\u4f7f\u7528 <code>dist(X)</code> \u6216 <code>Npl(X)</code> \u8868\u793a</p> <p>Definition</p> <p>The null path length, Npl(X), of any node X is the length of the shortest path from X to a node without two children.  Define Npl(NULL) = \u20131.</p> <ul> <li>Npl(X) = min { Npl(C) + 1 for all C as children of X }</li> </ul> <p>Tip</p> <p>\u6709\u70b9\u50cf\u8ba1\u7b97\u6811\u9ad8\uff0c\u53ea\u4e0d\u8fc7\u8ba1\u7b97\u6811\u9ad8\u662f\u53d6max</p> <p>Definition</p> <p>The leftist heap property is that for every node X in the heap, the null path length of the left child is at least as large as that of the right child.</p> <p>\u5bf9\u4e8e\u5de6\u504f\u5806\u4efb\u4f55\u4e00\u4e2a\u8282\u70b9\uff0c\u90fd\u6709Npl(LC) &gt;= Npl(RC).</p> <p>\u5e76\u80fd\u5f97\u5230\u4ee5\u4e0b\u5b9a\u7406\uff1a</p> <ol> <li>\u4ece\u6839\u5230\u6700\u53f3\u4fa7\u53f6\u7684\u8def\u5f84\u662f\u4ece\u6839\u5230\u53f6\u7684\u6700\u77ed\u8ddd\u79bb\uff08\u8fd9\u91cc\u91c7\u7528\u62d3\u5c55\u4e8c\u53c9\u6811\u7684\u5f62\u5f0f\uff0c\u5373\u53f6\u8282\u70b9\u4e3a Null \u8282\u70b9\uff09</li> <li>\u5982\u679c\u5230\u6700\u53f3\u4fa7\u8def\u5f84\u4e0a\u6709 \\(r\\) \u4e2a\u8282\u70b9\uff0c\u5219\u5de6\u504f\u5806\u8d77\u7801\u6709 \\(2^r-1\\) \u4e2a\u8282\u70b9\uff0c\u8fd9\u4e5f\u610f\u5473\u7740\u5bf9\u4e8e\u5177\u6709 \\(N\\) \u4e2a\u8282\u70b9\u7684\u5de6\u504f\u5806\uff0c\u5230\u6700\u53f3\u4fa7\u53f6\u8282\u70b9\u7684\u8def\u5f84\u957f\u5ea6\u4e3a \\(O(log N)\\)\uff08\u53ef\u7528\u6570\u5b66\u5f52\u7eb3\u6cd5\u8bc1\u660e\uff09</li> </ol> <p></p> <p></p> C<pre><code>typedef struct node {\n    ElementType Val;\n    struct node *left;\n    struct node *right;\n    int Npl;\n} Node;\n</code></pre>"}, {"location": "courses/ads/4/4/#operation", "title": "Operation", "text": "<p>\u5bf9\u5de6\u504f\u5806\u7684\u64cd\u4f5c\u4e3b\u8981\u662f Merge \uff0c\u5176\u5b83\u64cd\u4f5c\u90fd\u53ef\u4ee5\u901a\u8fc7 Merge \u6765\u8c03\u6574\u3002</p> <ul> <li><code>DeleteMin()</code> \u6216 <code>ExtractMin()</code> \u53ef\u4ee5\u901a\u8fc7\u5220\u9664 root \u5e76\u4e3a\u5de6\u53f3\u5b50\u6811\u8c03\u7528 Merge \u6765\u5b8c\u6210</li> <li><code>Insert()</code> \u53ef\u4ee5\u901a\u8fc7 Merge \u539f\u6765\u7684\u5de6\u504f\u5806\u4ee5\u53ca\u5355\u4e2a\u8282\u70b9\u7684\u6811\u6765\u5b8c\u6210</li> </ul> Function Complexity Get Min \\(O(1)\\) Delete Min \\(O(log N)\\) Insert \\(O(log N)\\) Merge \\(O(log N)\\)"}, {"location": "courses/ads/4/4/#merge", "title": "\u9012\u5f52Merge", "text": "<p>\u9012\u5f52\u548c\u8fed\u4ee3\u4ea7\u751f\u7684\u7ed3\u679c\u662f\u5b8c\u5168\u4e00\u6837\u7684\uff01</p> <p></p> <p>\u8fd9\u4e2a\u4f8b\u5b50\u662f\u544a\u8bc9\u6211\u4eec\u5148\u6bd4\u8f83\u4e24\u4e2a\u6570\u7684\u6839\u8282\u70b9\uff0c\u7136\u540e\u5408\u5e76\uff0c\u5177\u4f53\u5408\u5e76\u8fc7\u7a0b\u4e0d\u7528\u7ba1\uff0c\u8fd9\u662f\u9012\u5f52\u7684\u8fc7\u7a0b\u3002\u7136\u540e\u518d\u628a\u6811\u63a5\u56de\u53bb\uff0c\u6700\u540e\u5224\u65ad\u4e0b\u662f\u5426\u9700\u8981\u8c03\u6574\u3002</p> <p>\u5177\u4f53\u70b9\u8bb2\uff1a 1. \u6839\u5927\u7684\u5806\u63a5\u5230\u6839\u5c0f\u7684\u5806\u7684\u53f3\u5b50\u6811 2. \u82e5\u662f\u53f3\u5b50\u6811\u4e0d\u4e3a\u7a7a\uff0c\u5219\u5806\u7684\u53f3\u5b50\u6811\u4ee3\u66ff\u5806    3. \u68c0\u67e5Npl\u503c\uff0c\u5f02\u5e38\u5219\u4ea4\u6362\u5de6\u53f3\u5b50\u6811</p> C<pre><code>Node* Merge(Node* H1, Node* H2){\n    if(H1 == NULL) return H2;\n    if(H2 == NULL) return H1;\n    if(H1-&gt;Val &lt; H2-&gt;Val) return Merge1(H1,H2);\n    else return Merge1(H2,H1);\n}\n\n// \u9759\u6001\u5c5e\u6027\u4f7f\u5f97\u5176\u53ef\u4ee5\u5728\u5199\u9898\u65f6\u6b63\u786e\u4e92\u76f8\u8c03\u7528\nstatic Node* Merge1(Node* H1, Node* H2) {\n    if(H1-&gt;left == NULL)\n        H1-&gt;left = H2; // \u540c\u65f6\u505a\u5230\u4e86swap\n    else {\n        H1-&gt;right = Merge(H1-&gt;right,H2);\n        if(H1-&gt;left-&gt;Npl &lt; H1-&gt;right-&gt;Npl)\n            swap(H1-&gt;left,H1-&gt;right);\n    } // end else\n    return H1;\n}\n</code></pre>"}, {"location": "courses/ads/4/4/#merge_1", "title": "\u8fed\u4ee3Merge", "text": "<p>\u8be6\u7ec6\u6b65\u9aa4\uff1a 1. \u5c06\u4e24\u68f5\u6811\u7684\u53f3\u8def\u5f84\u63d0\u51fa\u6765\u6392\u4e2a\u5e8f    2. \u5c06\u5de6\u5b50\u6811\u6328\u4e2a\u6302\u4e0a\u53bb  3. \u68c0\u67e5Npl\uff0c\u5de6\u53f3\u8c03\u6574    </p>"}, {"location": "courses/ads/4/4/#skew-heap", "title": "Skew Heap", "text": ""}, {"location": "courses/ads/4/4/#definition_1", "title": "Definition", "text": "<p>\u659c\u5806\uff08Skew Heap\uff09\u662f\u5de6\u504f\u5806\u7684\u7b80\u5355\u5f62\u5f0f\uff0c\u5177\u6709\u548c\u5de6\u504f\u5806\u7c7b\u4f3c\u7684\u6027\u8d28\uff0c\u4f46\u53c8\u6709\u6240\u4e0d\u540c\u3002</p> <p>\u5176\u7279\u70b9\u662f\u5728\u8fdb\u884c Merge \u64cd\u4f5c\u65f6\uff0c\u6bcf\u6b21\u90fd\u8fdb\u884c\u5de6\u53f3\u5b50\u6811\u7684 Swap\u3002\u65e0Npl\u3002</p> <p>Note</p> <ul> <li>Skew heaps have the advantage that no extra space is required to maintain path lengths and no tests are required to determine when to swap children.</li> <li>It is an open problem to determine precisely the expected right path length of both leftist and skew heaps.</li> </ul>"}, {"location": "courses/ads/4/4/#operation_1", "title": "Operation", "text": ""}, {"location": "courses/ads/4/4/#merge_2", "title": "\u9012\u5f52Merge", "text": "<p>\u9012\u5f52\u548c\u8fed\u4ee3\u4ea7\u751f\u7684\u7ed3\u679c\u662f\u5b8c\u5168\u4e00\u6837\u7684\uff01</p> <p></p> <p>\u8be6\u7ec6\u6b65\u9aa4\uff1a 1. \u6839\u5c0f\u7684\u5806\u5b50\u6811u\u5de6\u53f3\u4ea4\u6362   2. \u5c06\u4ea4\u6362\u540e\u7684u\u7684\u5de6\u5b50\u6811\u4e0e\u6839\u5927\u7684\u5806v\u505aMerge\u64cd\u4f5c   3. Merge\u4e4b\u540e\u7684\u6811\u63a5\u5230\u539f\u5148\u7684\u5de6\u5b50\u6811\u4e0a  </p> <p></p> <p>Warning</p> <p>\u659c\u5806\u5b8c\u5168\u6ca1\u6709\u80fd\u529b\u7ef4\u6301\u5de6\u503e\u7684\u7279\u6027\uff01</p>"}, {"location": "courses/ads/4/4/#merge_3", "title": "\u8fed\u4ee3Merge", "text": "<p>\u5177\u4f53\u64cd\u4f5c\uff1a 1. \u53f3\u8def\u5f84\u4ece\u5c0f\u5230\u5927\u6392\u5e8f  2. \u5de6\u5b50\u6811\u4e0d\u53d8\uff0c\u5de6\u53f3\u4ea4\u6362\uff0c\u4e00\u4e2a\u4e2a\u8fde\u4e0a\u53bb</p>"}, {"location": "courses/ads/4/4/#_1", "title": "\u5747\u644a\u5206\u6790", "text": ""}, {"location": "courses/ads/4/4/#_2", "title": "\u76ee\u7684", "text": "<p>\u5bf9 Skew Heap \u7684 Merge \u64cd\u4f5c\u8fdb\u884c\u5206\u6790\uff0c\u5b9e\u9645\u6210\u672c\u662f\u659c\u5806\u7684\u53f3\u8def\u5f84\u957f\u5ea6\uff0c\u4f46\u662f\u6211\u4eec\u6ca1\u6709\u529e\u6cd5\u9650\u5236\u53f3\u8def\u5f84\u7684\u957f\u5ea6\u3002\u6240\u4ee5\u6211\u4eec\u8981\u8fdb\u884c\u5747\u644a\u5206\u6790\u3002</p>"}, {"location": "courses/ads/4/4/#_3", "title": "\u65b9\u6cd5", "text": "<p>D_i\uff1athe root of the resulting tree</p> <p>Warning</p> <p>\u5355\u8c03\u589e\u51fd\u6570\u4e0d\u9002\u5408\u7528\u6765\u4f30\u8ba1\u5747\u644a\u6210\u672c\uff0c\u5e94\u4e3a\u6bcf\u4e00\u6b65\u90fd\u4f1a\u6bd4\u5b9e\u9645\u6210\u672c\u66f4\u5927\uff0c\u4e0d\u7cbe\u786e\u3002</p> <p>\u5b9a\u4e49\u52bf\u80fd\u51fd\u6570 \\(\\phi(D_i)\\) \u4e3a\u4ee5 \\(D_i\\) \u4e3a\u6839\u8282\u70b9\u7684\u6811\u7684 Heavy Nodes \u7684\u6570\u91cf\uff0c\u5176\u4e2d Heavy Nodes \u5b9a\u4e49\u4e3a\u53f3\u5b50\u6811\u7684\u8282\u70b9\u6570\u5927\u4e8e\u7b49\u4e8e\u5de6\u5b50\u6811\u7684\u8282\u70b9\u6570\u7684 Node\u3002</p> <p>\u90a3\u4e48\u5bf9\u4e8e Heavy Nodes \u4ee5\u53ca\u76f8\u5bf9\u7684 Light Nodes\uff0c\u6709\u5982\u4e0b\u6027\u8d28\uff1a</p> <ul> <li>\u4efb\u610f\u4e0d\u5728\u53f3\u8def\u5f84\u7684\u8282\u70b9\uff0c\u5176\u5728\u5f52\u5e76\u524d\u540e\u5de6\u53f3\u5b50\u6811\u4e0d\u53d8\u5316\uff0c\u5373\u8f7b\u91cd\u60c5\u51b5\u4e5f\u4e0d\u53d8\uff08\u53ea\u6709\u53f3\u8def\u5f84\u4e0a\u7684\u8282\u70b9\u4f1a\u4ea7\u751f\u8f7b\u91cd\u53d8\u5316\uff09</li> <li>\u53f3\u8def\u5f84\u4e0a\u6240\u6709\u91cd\u8282\u70b9\u5728\u5f52\u5e76\u540e\u5168\u90e8\u53d8\u4e3a\u8f7b\u8282\u70b9\uff0c\u800c\u8f7b\u8282\u70b9\u6709\u53ef\u80fd\u4f46\u4e0d\u4e00\u5b9a\u53d8\u4e3a\u91cd\u8282\u70b9</li> </ul> <p></p> <p></p> <p>Tip</p> <p>\u60f3\u8981\u53f3\u8def\u5f84\u8f7b\u8282\u70b9\u591a\uff0c\u90a3\u5de6\u503e\u7a0b\u5ea6\u5c31\u8d8a\u5927\uff0c\u53f3\u8def\u5f84\u5c31\u8d8a\u77ed\uff0c\u53f3\u8def\u5f84\u8f7b\u8282\u70b9\u5c31\u5c11\uff1b \u60f3\u8981\u53f3\u8def\u5f84\u957f\uff0c\u90a3\u5de6\u503e\u7a0b\u5ea6\u5c31\u5c0f\uff0c\u90a3\u53f3\u8def\u5f84\u8f7b\u8282\u70b9\u5c31\u5c11\u3002</p>"}, {"location": "courses/ads/5/5/", "title": "Binomial Queue", "text": ""}, {"location": "courses/ads/5/5/#definition", "title": "Definition", "text": "<p>A binomial queue is not a heap-ordered tree, but rather a collection of heap-ordered trees, known as a forest.(\u68ee\u6797)  Each heap-ordered tree is a binomial tree.</p> <p>\u9012\u5f52\u5b9a\u4e49</p> <p>A binomial tree of height 0 is a one-node tree.    A binomial tree, Bk, of height k is formed by attaching a binomial tree, \\(B_{k\u20131}\\), to the root of another binomial tree, \\(B_{k\u20131}\\).</p> <p></p> <p>\u6027\u8d28</p> <p>Bk consists of a root with k children, which are  $ B_0, B_1, B_2, \\cdots , B_{k-1}$ . Bk has exactly \\(2^k\\) nodes. The number of nodes at depth d is  $ \\binom{k}{d} $.</p> <p>A priority queue of any size can be uniquely represented by a collection of binomial trees. \u56e0\u4e3a\u6bcf\u4e2a\u6570\u90fd\u53ef\u4ee5\u8f6c\u6362\u6210\u552f\u4e00\u7684\u4e8c\u8fdb\u5236\u6570\u3002</p> <p></p> <p>\u5b9e\u73b0\uff1a\u4f7f\u7528\u6307\u9488\u6570\u7ec4\uff0c\u6bcf\u4e2a\u6307\u9488\u6307\u5411\u4e00\u4e2aBinomial Queue.</p>"}, {"location": "courses/ads/5/5/#operation", "title": "Operation", "text": ""}, {"location": "courses/ads/5/5/#findmin", "title": "FindMin", "text": "<p>The minimum key is in one of the roots. There are at most $ \\lceil \\log N \\rceil $ roots, hence Tp = \\(O(\\log n)\\).</p> <p>Warning</p> <p>\u4f46\u662f\u6211\u4eec\u6709\u5feb\u901f\u64cd\u4f5c\u3002We can remember the minimum and update whenever it is changed.  Then this operation will take \\(O(1)\\).</p>"}, {"location": "courses/ads/5/5/#merge", "title": "Merge", "text": "<p>\u590d\u6742\u5ea6\u5c31\u662f\u8fdb\u884c\u52a0\u6cd5\u7684\u4f4d\u6570\u3002</p> <p>Tip</p> <p>\u5bf9\u4e8e\u4e00\u4e2a\u5341\u8fdb\u5236\u6570\uff0c\u8981\u786e\u5b9a\u5176\u8f6c\u6362\u6210\u4e8c\u8fdb\u5236\u540e\u6709\u591a\u5c11\u4f4d\uff0c\u53ef\u4ee5\u901a\u8fc7\u4ee5\u4e0b\u6b65\u9aa4\u8fdb\u884c\u8ba1\u7b97\uff1a</p> <p>\u8bbe\u5341\u8fdb\u5236\u6570\u4e3a \\( N \\)\uff0c\u90a3\u4e48\u5b83\u8f6c\u6362\u6210\u4e8c\u8fdb\u5236\u540e\u7684\u4f4d\u6570 \\( L \\) \u53ef\u4ee5\u901a\u8fc7\u4ee5\u4e0b\u516c\u5f0f\u8ba1\u7b97\uff1a</p> \\[ L = \\lfloor \\log_2{N} \\rfloor + 1 \\] <p>\u5176\u4e2d \\( \\lfloor x \\rfloor \\) \u8868\u793a\u5411\u4e0b\u53d6\u6574\u3002</p>"}, {"location": "courses/ads/5/5/#insert", "title": "Insert", "text": "<p>\u6ce8\u610f</p> <p>\u5355\u6b21Insertion\u53ef\u4ee5\u770b\u4f5c\u662f\u4e00\u6b21\u7279\u6b8a\u7684merge\uff0c\u5355\u6b21\u590d\u6742\u5ea6\u662f\\(O(\\log n)\\)\u3002\u4f46\u662f\u8fd9\u5e76\u4e0d\u610f\u5473\u7740\u4ece\u7a7a\u5f00\u59cbinsert n \u6b21\u590d\u6742\u5ea6\u662f\\(O(n\\log n)\\)\uff0c\u901a\u8fc7\u5747\u644a\u5206\u6790\u53ef\u77e5\u662f\\(O(n)\\)\u3002</p>"}, {"location": "courses/ads/5/5/#deletemin", "title": "DeleteMin", "text": ""}, {"location": "courses/ads/5/5/#decrease-key", "title": "Decrease Key", "text": ""}, {"location": "courses/ads/5/5/#implementation", "title": "Implementation", "text": "<p>Binomial queue = array of binomial trees</p> Operation Property Solution DeleteMin Find all the subtrees quickly Left_child_next_sibling with linkes lists Merge The children are ordered by their sizes The new tree will be the largest. Hence maintain the subtrees in decreasing sizes. C<pre><code>typedef struct BinNode *Position;\ntypedef struct Collection *BinQueue;\ntypedef struct BinNode *BinTree;  /* missing from p.176 */\n\nstruct BinNode \n{ \n    ElementType Element;\n    Position LeftChild;\n    Position NextSibling;\n} ;\n\nstruct Collection \n{ \n    int CurrentSize;  /* total number of nodes */\n    BinTree TheTrees[ MaxTrees ];\n} ;\n</code></pre> <p>C<pre><code>BinTree CombineTrees( BinTree T1, BinTree T2 )\n{  /* merge equal-sized T1 and T2 */\n    if ( T1-&gt;Element &gt; T2-&gt;Element )\n        /* attach the larger one to the smaller one */\n        return CombineTrees( T2, T1 );\n    /* insert T2 to the front of the children list of T1 */\n    T2-&gt;NextSibling = T1-&gt;LeftChild;\n    T1-&gt;LeftChild = T2;\n    return T1;\n}\n</code></pre> </p> <p>C<pre><code>BinQueue Merge( BinQueue H1, BinQueue H2 )\n{   BinTree T1, T2, Carry = NULL;   \n    int i, j;\n    if ( H1-&gt;CurrentSize + H2-&gt; CurrentSize &gt; Capacity )  ErrorMessage();\n    H1-&gt;CurrentSize += H2-&gt; CurrentSize;\n    for ( i = 0, j = 1; j &lt;= H1-&gt;CurrentSize; i++, j*=2 ) {\n        T1 = H1-&gt;TheTrees[i]; T2 = H2-&gt;TheTrees[i]; /* current trees */\n        switch( 4*!!Carry + 2*!!T2 + !!T1 ) { // \u5c06\u64cd\u4f5c\u6570\u53d8\u4e3a0\u548c1\n        case 0: /* 000 */\n        case 1: /* 001 */  break;   \n        case 2: /* 010 */  H1-&gt;TheTrees[i] = T2; \n                           H2-&gt;TheTrees[i] = NULL; \n                           break;\n        case 4: /* 100 */  H1-&gt;TheTrees[i] = Carry; \n                           Carry = NULL; \n                           break;\n        case 3: /* 011 */  Carry = CombineTrees( T1, T2 );\n                           H1-&gt;TheTrees[i] = H2-&gt;TheTrees[i] = NULL; \n                           break;\n        case 5: /* 101 */  Carry = CombineTrees( T1, Carry );\n                           H1-&gt;TheTrees[i] = NULL; \n                           break;\n        case 6: /* 110 */  Carry = CombineTrees( T2, Carry );\n                           H2-&gt;TheTrees[i] = NULL; \n                           break;\n        case 7: /* 111 */  H1-&gt;TheTrees[i] = Carry; \n                           Carry = CombineTrees( T1, T2 ); \n                           H2-&gt;TheTrees[i] = NULL; \n                           break;\n        } /* end switch */\n    } /* end for-loop */\n    return H1;\n}\n</code></pre> C<pre><code>ElementType  DeleteMin( BinQueue H ) {  \n    BinQueue DeletedQueue; \n    Position DeletedTree, OldRoot;\n    ElementType MinItem = Infinity;  /* the minimum item to be returned */  \n    int i, j, MinTree; /* MinTree is the index of the tree with the minimum item */\n\n    if ( IsEmpty( H ) )  {\n        PrintErrorMessage();\n        return \u2013Infinity; \n    }\n\n    for ( i = 0; i &lt; MaxTrees; i++) {  /* Step 1: find the minimum item */\n        if( H-&gt;TheTrees[i] &amp;&amp; H-&gt;TheTrees[i]-&gt;Element &lt; MinItem ) { \n        MinItem = H-&gt;TheTrees[i]-&gt;Element;  MinTree = i;    \n        } /* end if */\n    } /* end for-i-loop */\n\n    DeletedTree = H-&gt;TheTrees[ MinTree ];  \n    H-&gt;TheTrees[ MinTree ] = NULL;   /* Step 2: remove the MinTree from H =&gt; H\u2019 */ \n    OldRoot = DeletedTree;   /* Step 3.1: remove the root */ \n    DeletedTree = DeletedTree-&gt;LeftChild;   free(OldRoot);\n    DeletedQueue = Initialize();   /* Step 3.2: create H\u201d */ \n    DeletedQueue-&gt;CurrentSize = ( 1&lt;&lt;MinTree ) \u2013 1;  /* 2MinTree \u2013 1 */\n\n    for ( j = MinTree \u2013 1; j &gt;= 0; j \u2013 \u2013 ) {  \n        DeletedQueue-&gt;TheTrees[j] = DeletedTree;\n        DeletedTree = DeletedTree-&gt;NextSibling;\n        DeletedQueue-&gt;TheTrees[j]-&gt;NextSibling = NULL;\n    } /* end for-j-loop */\n\n    H-&gt;CurrentSize  \u2013= DeletedQueue-&gt;CurrentSize + 1;\n    H = Merge( H, DeletedQueue ); /* Step 4: merge H\u2019 and H\u201d */ \n    return MinItem;\n}\n</code></pre></p> <p>Tip</p> <p>\u5bf9\u7167\u524d\u9762\u7684\u539f\u7406\u56fe\u98df\u7528\u66f4\u4f73\uff08</p>"}, {"location": "courses/ads/5/5/#amortized-analysis", "title": "Amortized analysis", "text": "\u7b2c\u51e0\u6b21 \u64cd\u4f5c\u6210\u672c 1 1 2 2 3 1 4 3 5 1 ... ... <p>0\u51fa\u73b0\u7684\u8d8a\u65e9\uff0c\u6240\u9700\u7684\u4ee3\u4ef7\u8d8a\u5c0f\u3002</p>"}, {"location": "courses/ads/5/5/#potential-method", "title": "Potential method", "text": "<p>\u5b9a\u4e49\u52bf\u80fd\u51fd\u6570 $$ \\phi(i) = \\text{number of trees after } i \\text{th insertion} $$ \u8fc7\u7a0b\uff1a $$ B_{k+1},\\cdots, B_3, B_2, B_1, B_0 $$ $$ c_i = i + (k + 1)$$ $$ \\hat{c}_i = i + (k + 1) + x + 1 - (x + k + 1) = 2 $$</p> <p>\u6240\u4ee5\uff1a $$ \\sum_{i=1}^{N}{\\hat{c_i}} = \\sum_{i=1}^{N}{c_i} + \\phi(i) - \\phi(0) = 2N $$ $$ \\sum_{i=1}^{N}{c_i} =2N - \\phi(0) \\leq 2N = O(N)$$</p>"}, {"location": "courses/ads/5/5/#accounting-method", "title": "Accounting method", "text": "<p>\u6bcf\u4e00\u4e2a\u8282\u70b9\u5185\u90fd\u6709\u4e00\u4e2a\u786c\u5e01\u3002</p>"}, {"location": "courses/ads/5/5/#aggregate-analysis", "title": "Aggregate analysis", "text": ""}, {"location": "courses/ads/5/5/#_1", "title": "\u5404\u7c7b\u5806\u7684\u64cd\u4f5c\u590d\u6742\u5ea6", "text": "Heaps: Leftist Skew Binomial Fibonacci Binary Link list Make heap O(1) O(1) O(1) O(1) O(1) O(1) Find-Min Merge O(n) Insert Delete Delete-Min Decrease-Key"}, {"location": "courses/ads/6/6/", "title": "Backtracking", "text": ""}, {"location": "courses/ads/6/6/#rationale-of-the-backtracking-algorithms", "title": "Rationale of the Backtracking Algorithms", "text": "<p>A sure-fire way to find the answer to a problem is to make a list of all candidate answers, examine each, and following the examination of all or some of the candidates, declare the identified answer.</p> <p>Backtracking enables us to eliminate the explicit examination of a large subset of the candidates while still guaranteeing that the answer will be found if the algorithm is run to termination.(pruning \u526a\u679d)</p> <p>The basic idea is that suppose we have a partial solution \\(( x_1, \\cdots , x_i )\\) where each \\(x_k \\in S_k\\) for  \\(1 \\leq k \\leq i &lt; n\\).   First we add \\(x_{i+1} \\in S_{i+1}\\) and check if \\(( x_1, \\cdots , x_i, x_{i+1} )\\) satisfies the constrains.  If the answer is \u201cyes\u201d we continue to add the next \\(x\\), else we delete \\(x_i\\) and backtrack to the previous partial solution \\(( x_1, \\cdots , x_{i-1} )\\).</p>"}, {"location": "courses/ads/6/6/#eight-queens", "title": "Eight queens", "text": "<p>Note</p> <p>\u7b2c\u4e00\u6b65\u7684\u64cd\u4f5c\u6570\u662f\\(8^8\\)\uff0c\u7b2c\u4e8c\u90e8\u7684\u64cd\u4f5c\u6570\u51cf\u4e3a\\(8!\\)\u3002</p> <p>\u4ee54\u7687\u540e\u95ee\u9898\u4e3a\u4f8b\uff1a  \u7b2c\u4e00\u6b65\uff1a\u5148\u5efa\u6811 </p> <p>\u7b2c\u4e8c\u6b65\uff1a\u8fdb\u884c\u6df1\u641c\u6765\u68c0\u6d4b\u8def\u5f84\u662f\u5426\u6b63\u786e </p>"}, {"location": "courses/ads/6/6/#the-turnpike-reconstruction-problem", "title": "The Turnpike Reconstruction Problem", "text": "<p>Given \\(N\\) points on the x-axis with coordinates \\(x_1 &lt;  x_2 &lt;\\cdots&lt; x_N\\) .  Assume that \\(x_1 = 0\\).  There are $N ( N \u2013 1 ) / 2 $ distances between every pair of points.</p> <p>Given $N ( N \u2013 1 ) / 2 $ distances. Reconstruct a point set from the distances.</p> <p>Example  Given \\(D = \\{ 1, 2, 2, 2, 3, 3, 3, 4, 5, 5, 5, 6, 7, 8, 10 \\}\\) </p> <ul> <li>Step 1: $ N ( N \u2013 1 ) / 2 = 15$  implies  \\(N = 6\\)</li> <li>Step 2: $ x_1 = 0 $ and $x_6 = 10 $</li> <li>Step 3: find the next largest distance and check  </li> </ul> <p>Warning</p> <p>\u5904\u7406\u987a\u5e8f\u662f\u4ece\u6700\u5927\u8ddd\u79bb\u5230\u6700\u5c0f\u8ddd\u79bb\uff0c\u5728\u627e\u8ddd\u79bb\u65f6\uff0c\u4e00\u5b9a\u662f\u627e\u5f53\u524d\u8282\u70b9\u5230\u4e24\u4e2a\u7aef\u70b9\u4e4b\u95f4\u7684\u8ddd\u79bb\uff0c\u4e0d\u53ef\u4ee5\u53bb\u627e\u4e2d\u95f4\u8282\u70b9\u7684\u8ddd\u79bb\u3002\u8fd9\u662f\u56e0\u4e3a\u4e2d\u95f4\u8282\u70b9\u4e4b\u95f4\u7684\u8def\u5f84\u957f\u5ea6\u4e00\u5b9a\u5c0f\u4e8e\u5176\u5230\u7aef\u70b9\u4e4b\u95f4\u7684\u8ddd\u79bb\uff0c\u800c\u6211\u4eec\u662f\u4ece\u6700\u5927\u8ddd\u79bb\u5230\u6700\u5c0f\u8ddd\u79bb\u7684\u987a\u5e8f\u627e\u7684\u3002</p> <p> </p> C<pre><code>bool Reconstruct (DistType[], DistSet D, int N, int left, int right) {\n    bool Found = false;\n    if (Is_empty(D)) {\n        return true; // \u9000\u51fa\u9012\u5f52\n    }\n    D_max = FindMax(D);\n    OK = Check(D_max, N, left, right);\n    if(OK) {\n        X[right] = D_max;\n        for(i = 1; i &lt; left; i++) {\n            Delete(abs(X[right] - X[i]), D);\n        }\n        for(i = right + 1; i &lt;= N; i++) {\n            Delete(abs(X[right] - X[i]), D);\n        }\n        Found = Reconstruct(X, D, N, left, right-1);\n        if(!Found) {\n            for(i = 1; i &lt; left; i++) {\n                Insert(abs(X[right] - X[i]), D);\n            }\n            for(i = Right + 1; i &lt; N; i++) {\n                Insert(abs(X[right] - X[i]), D);\n            }\n        }\n    }\n    if ( !Found ) { /* if option 1 does not work */\n        /* option 2: X[left] = X[N]-D_max */\n        OK = Check( X[N]-D_max, N, left, right );\n        if ( OK ) {\n            X[left] = X[N] \u2013 D_max;\n            for ( i=1; i&lt;left; i++ ) {\n                Delete( |X[left]-X[i]|, D);\n            }\n            for ( i=right+1; i&lt;=N; i++ ) {\n                Delete( |X[left]-X[i]|, D);\n            }\n            Found = Reconstruct (X, D, N, left+1, right );\n            if ( !Found ) {\n                for ( i=1; i&lt;left; i++ ) {\n                    Insert( |X[left]-X[i]|, D);\n                }\n                for ( i=right+1; i&lt;=N; i++ ) {\n                    Insert( |X[left]-X[i]|, D);\n                }\n            }\n        }\n        /* finish checking option 2 */\n    } /* finish checking all the options */    \n    return Found;\n}\n</code></pre> <p>\u6a21\u677f</p> C<pre><code>bool Backtracking ( int i )\n{   Found = false;\n    if ( i &gt; N )\n        return true; /* solved with (x1, \u2026, xN) */\n    for ( each xi \uf0ce Si ) { \n        /* check if satisfies the restriction R */\n        OK = Check((x1, \u2026, xi) , R ); /* pruning */\n        if ( OK ) {\n            Count xi in;\n            Found = Backtracking( i+1 );\n            if ( !Found )\n                Undo( i ); /* recover to (x1, \u2026, xi-1) */\n        }\n        if ( Found ) break; \n    }\n    return Found;\n}\n</code></pre> <p> </p> <p>\u4f18\u5148\u9009\u62e9\u7b2c\u4e00\u4e2a\uff0c\u56e0\u4e3a\u7b2c\u4e00\u4e2a\u7684\u526a\u679d\u4f1a\u51cf\u53bb\u4e00\u5927\u7247\u3002</p>"}, {"location": "courses/ads/6/6/#minimax-strategy", "title": "Minimax Strategy", "text": "\\[ f(P) = W_{Computer} - W_{Human} \\] <p>\u53ea\u6709\u53f6\u8282\u70b9\u4f1a\u7528\\(f(P)\\)\uff0c\u5f80\u4e0a\u7684\u8bdd\u5c31\u7528minimax\u3002</p>"}, {"location": "courses/ads/6/6/#alpha-pruning", "title": "\\(\\alpha\\) pruning", "text": "<p> <p></p> <p></p>"}, {"location": "courses/ads/6/6/#beta-pruning", "title": "\\(\\beta\\) pruning", "text": "<p> <p></p> <p></p> <p>\\(\\alpha-\\beta\\) pruning: when both techniques are combined.  In practice, it limits the searching to only \\(O(\\sqrt{N})\\) nodes, where \\(N\\) is the size of the full game tree.</p>"}, {"location": "courses/ads/7/7/", "title": "Divide and Conquer", "text": ""}, {"location": "courses/ads/7/7/#closest-points-problem", "title": "Closest Points Problem", "text": ""}, {"location": "courses/ads/7/7/#simple-exhaustive-search", "title": "Simple Exhaustive Search", "text": "<p>Check $ N(N-1)/2 $ pairs of points.\\(T = O(N^2)\\).</p>"}, {"location": "courses/ads/7/7/#divide-and-conquer_1", "title": "Divide and Conquer", "text": "<p>\u56de\u987e\u5206\u6cbb\u7b97\u6cd5\u7684\u65f6\u95f4\u590d\u6742\u5ea6\uff1a</p> <p></p> <p>Three methods for solving recurrence:  - Substitution method - Recursion-tree method - Master method</p>"}, {"location": "courses/ads/7/7/#substitution-method", "title": "Substitution method", "text": "<p>guess, then prove by induction.</p> <p>\u6b63\u786e\u731c\u6d4b\uff1a </p> <p>\u9519\u8bef\u793a\u8303\uff1a </p> <p>Warning</p> <p>\u6bcf\u8fc7\u4e00\u5c42\u5c31\u4f1a\u52a0\u4e00\uff01</p>"}, {"location": "courses/ads/7/7/#recursion-tree-method", "title": "Recursion-tree method", "text": ""}, {"location": "courses/ads/7/7/#master-method", "title": "Master method", "text": "\\[\\begin{gather}T(N)=aT(\\frac{N }{b})+\\Theta(N^k \\log^pN),a\\ge 1,b\\gt 1 ,p\\ge 0 \\\\ \\\\ T(N)=\\begin{cases}O(N^{\\log_ba})\\ ,\\ if\\ \\log_ba\\gt k \\\\ O(N^k\\log ^{p+1}N)\\ ,\\ if\\ \\log_ba=k \\\\  O(N^k \\log ^pN)\\ ,\\ if\\ log_ba\\lt k \\end{cases} \\end{gather}\\]"}, {"location": "courses/ads/8/8/", "title": "Dynamic Programming", "text": "<ul> <li>DP \u5e38\u7528\u4e8e\u89e3\u51b3 \u6700\u4f18\u5316\u95ee\u9898 \u548c\u8ba1\u6570\u95ee\u9898\u3002</li> <li>\u4e00\u822c\u800c\u8a00\uff0c\u7528 DP \u89e3\u51b3\u7684\u95ee\u9898\u9700\u8981\u5177\u6709\u4ee5\u4e0b\u7279\u5f81\uff1a<ul> <li>\u6700\u4f18\u5b50\u7ed3\u6784</li> <li>\u65e0\u540e\u6548\u6027</li> </ul> </li> <li>\u7528\u7a7a\u95f4\u6362\u65f6\u95f4\uff0c\u6211\u4eec\u5e38\u5e38\u9700\u8981\u4e00\u4e2a\u72b6\u6001\u503c\u8868\u793a\u5bf9\u4e8e\u5f53\u524d\u72b6\u6001\u7684\u7b54\u6848\uff08\u53ef\u80fd\u662f\u622a\u81f3\u5f53\u524d\u72b6\u6001</li> </ul>"}, {"location": "courses/ads/8/8/#fibonacci-numbers", "title": "Fibonacci Numbers", "text": "\\[F(N) = F(N-1) + F(N-2)\\] C<pre><code>int Fib(int N) {\n    if(N &lt;= 1)\n        return 1;\n    else\n        return Fib(N-1) + Fib(N-2);\n}\n</code></pre> \\[ T(N) \\geq T(N-1) + T(N-2) \\] <ul> <li>\u95ee\u9898\uff1a\u6211\u4eec\u591a\u6b21\u8ba1\u7b97\u4e86\u76f8\u540c\u7684\u5b50\u95ee\u9898\uff0c\u4ea7\u751f\u4e86\u5f88\u591a\u989d\u5916\u7684\u5f00\u9500\u3002</li> <li>\u89e3\u51b3\uff1a\u4ece\u5e95\u5411\u4e0a\uff0c\u7b54\u6848\u7b49\u4e8e\u5f53\u524d\u7ed3\u679c\u548c\u524d\u4e00\u4e2a\u7b54\u6848\u4e4b\u548c\u3002</li> </ul> <p>C<pre><code>int Fib(int N) {\n    int i, Last, NextToLast, answer;\n    if(N&lt;=1) {\n        return 1;\n    }\n    Last = NextToLast = 1;\n    for (i = 0; i &lt; N; i++) {\n        answer = Last + NextToLast;\n        NextToLast = Last;\n        Last = answer;\n    }\n    return answer;\n}\n</code></pre> $$ T(N) = O(N) $$</p>"}, {"location": "courses/ads/8/8/#ordering-matrix-multiplications", "title": "Ordering Matrix Multiplications", "text": "<p>\u77e9\u9635\u5177\u6709\u7ed3\u5408\u5f8b\uff0c\u901a\u8fc7\u4e0d\u540c\u7684\u7ec4\u5408\u4f1a\u6709\u4e0d\u540c\u7684\u65f6\u95f4\u5f00\u9500\u3002</p> <p>\u4ee4\\(b_n\\) = number of different ways to compute \\(M_1\\), \\(M_2\\), \\(\u00b7\u00b7\u00b7\\), \\(M_n\\) \u6211\u4eec\u6709\\(b_2 = 1, b_3 = 2, b_4 = 5, \\cdots\\).\u4ee4\\(M_{ij} = M_i \\cdots M_j\\).\u90a3\u4e48\\(M_{1n} = M_1 \\cdots M_n = M_{1i} \\cdot M_{i+1 n}\\)</p> <p>\u6240\u4ee5\\(b_n = \\sum_{i=1}^{n-1} b_i b_{n-i}\\)</p> \\[b_n = O(\\frac{4^n}{n\\sqrt{n}})\\] <p> </p> C<pre><code>void OptMatrix(const long r[], int N, TwoDimArray M) {\n    int i, j, k, L;\n    long thisM;\n    fot (i = 1; i &lt; N; i++) {\n        M[i][i] = 0;\n    }\n\n    for(k = 1; k &lt; N; k++) {\n        for(i = 0; i &lt;= N-k; i++) {\n            j = i + k;\n            M[i][j] = INF;\n            for(L = i; L &lt; j; L++) {\n                thisM = M[i][L] + M[L+1][j] + r[i-1]*[L]*r[j];\n                if(thisM &lt; M[i][j]) {\n                    M[i][j] = thisM;\n                }\n            }\n        }\n    }\n}\n</code></pre> \\[ T(N) = O(N^3) \\]"}, {"location": "courses/ads/8/8/#optimal-binary-search-tree", "title": "Optimal Binary Search Tree", "text": "<p>\u9009\u6839\u5c31\u884c\u3002\u4e0b\u9762\u662f\u9009\u6839\uff08\u6bcf\u4e00\u4e2a\u5b50\u95ee\u9898\uff09\u7684\u5177\u4f53\u64cd\u4f5c\u3002</p> <p></p> <p>\u6700\u7ec8\u4e09\u79cd\u6811\u7684cost\uff1a <p></p> <p></p>"}, {"location": "courses/ads/8/8/#all-pairs-shortest-path", "title": "All Pairs Shortest Path", "text": "<ul> <li>Method 1 (Dijkstra\u7b97\u6cd5)</li> </ul> <p>\u5faa\u73af\u8c03\u7528dijkstra\u7b97\u6cd5\u3002\\(T(N) = O(|V|^3)\\)</p> <ul> <li>Method 2 (Floyd\u7b97\u6cd5)</li> </ul> <p>\u5b9a\u4e49\\(D^k[i][j]\\) = min{length of path i -&gt; {l &lt;= k} -&gt; j} and \\(D^{-1}[i][j]\\) = \\(Cost[i][j]\\).</p> <p>\u521d\u59cb\u72b6\u6001\u662f$$</p>"}, {"location": "courses/ads/8/8/#product-assembly", "title": "Product Assembly", "text": "<ul> <li>Two assembly lines for the same car</li> <li>Different technology (time) for each stage</li> <li>One can change lines between stages</li> <li>Minimize the total assembly time</li> </ul> <p> <p></p> <p></p> <ul> <li>Exhaustive search gives \\(O( 2^N )\\) time + \\(O( N )\\) space</li> </ul> <p>\u4e3a\u4ec0\u4e48\u51b3\u5b9a\u7528\u52a8\u6001\u89c4\u5212\uff1f</p> <p> <p></p> <p></p> <p></p>"}, {"location": "courses/dawushiyan/1/1/", "title": "\u7eea\u8bba", "text": ""}, {"location": "courses/dawushiyan/1/1/#_2", "title": "\u987b\u77e5", "text": ""}, {"location": "courses/dawushiyan/1/1/#_3", "title": "\u6210\u7ee9", "text": "<p>\u6210\u7ee9 = \u671f\u672bx30% + \u5b9e\u9a8cx70%</p> <p>\u5b9e\u9a8c\u6210\u7ee9\uff1a</p> <ul> <li>\u9884\u4e60\u62a5\u544a\uff1a20</li> <li>\u5b9e\u9a8c\u64cd\u4f5c\uff1a30</li> <li>\u6570\u636e\u5904\u7406\u4e0e\u5206\u6790\uff1a30</li> <li>\u8bef\u5dee\u5206\u6790\uff1a10</li> <li>\u5b9e\u9a8c\u5fc3\u5f97\u4e0e\u601d\u8003\u9898\uff1a10</li> </ul>"}, {"location": "courses/dawushiyan/1/1/#_4", "title": "\u89c4\u8303", "text": "\\[ L = 250.11 +- 0.04 mm \\]"}, {"location": "courses/dawushiyan/1/1/#_5", "title": "\u5b9e\u9a8c\u6d4b\u91cf\u548c\u6709\u6548\u6570\u5b57", "text": ""}, {"location": "courses/dawushiyan/1/1/#_6", "title": "\u6d4b\u91cf", "text": "<p>\u6d4b\u91cf\u56db\u8981\u7d20\uff1a\u88ab\u6d4b\u5bf9\u8c61\u3001\u6d4b\u91cf\u7a0b\u5e8f\u3001\u6d4b\u91cf\u51c6\u786e\u5ea6\u548c\u8ba1\u91cf\u5355\u4f4d</p> <p>\u76f4\u63a5\u6d4b\u91cf \u95f4\u63a5\u6d4b\u91cf</p>"}, {"location": "courses/dawushiyan/1/1/#_7", "title": "\u6709\u6548\u4f4d\u6570", "text": "<p>\u53ef\u9760\u6570\u5b57</p> <p>\u5b58\u7591\u6570\u5b57</p> <p>\u6709\u6548\u4f4d\u6570\uff1a\u53ef\u9760\u6570\u52a0\u4e0a\u4e00\u4f4d\u5b58\u7591\u6570</p>"}, {"location": "courses/dawushiyan/1/1/#_8", "title": "\u5de5\u5177", "text": "<p>\u6e38\u6807\u5361\u5c3a \u87ba\u65cb\u6d4b\u5fae\u5668 \u5206\u5149\u8ba1</p>"}, {"location": "courses/dawushiyan/1/1/#_9", "title": "\u8bef\u5dee", "text": "<p>\u8bef\u5dee = \u6d4b\u91cf\u503c - \u771f\u503c</p> <p>\u662f\u5c0f\u91cf</p> <p>\u76f8\u5bf9\u8bef\u5dee\uff1aE = \u6d4b\u91cf\u503c-\u771f\u503c/\u771f\u503c x 100%</p> <p>\u6807\u51c6\u8bef\u5dee\uff1a1/n-1 </p> <ul> <li>\u7cfb\u7edf\u8bef\u5dee</li> <li>\u968f\u673a\u8bef\u5dee</li> </ul> <p>\u4eea\u5668\u8bef\u5dee = \u91cf\u7a0b x \u7ea7\u522b%</p> <p>\u8bef\u5dee\u5206\u5e03\uff1a</p> <ul> <li>\u6b63\u6001\u5206\u5e03<ul> <li>\u5355\u5cf0\u6027</li> <li>\u5bf9\u79f0\u6027</li> <li>\u6709\u754c\u6027</li> <li>\u62b5\u507f\u6027</li> </ul> </li> <li>\u5747\u5300\u5206\u5e03</li> </ul> <p></p>"}, {"location": "courses/dawushiyan/1/1/#_10", "title": "\u8bef\u5dee\u4e0e\u4e0d\u786e\u5b9a\u5ea6", "text": "<p>\u8bef\u5dee\u4e00\u822c\u4e0d\u80fd\u8ba1\u7b97\uff0c\u4e0d\u786e\u5b9a\u5ea6\u53ef\u4ee5\u8bc4\u5b9a</p> <p>$$ u = \\sqrt ua^2 + ub^2 $$ ua = \u5e73\u5747\u503c\u7684\u6807\u51c6\u8bef\u5dee ub = 1/3 \u4eea\u5668 \uff08\u9ad8\u65af\uff09 ub = 1/1.732 \u4eea\u5668 \uff08\u5747\u5300\uff09</p>"}, {"location": "courses/dawushiyan/1/1/#_11", "title": "\u6709\u6548\u6570\u5b57\u548c\u5b9e\u9a8c\u6570\u636e\u5904\u7406", "text": ""}, {"location": "courses/dawushiyan/1/1/#_12", "title": "\u4fee\u7ea6", "text": "<p>\u56db\u820d\u516d\u5165\u4e94\u5355\u53cc</p> <p>\u6709\u6548\u6570\u503c\u7684\u4f4d\u6570\u4e0e\u5c0f\u6570\u70b9\u7684\u4f4d\u7f6e\u65e0\u5173\u3002</p> <ul> <li>\u548c\u5dee\u8fd0\u7b97\uff1a\u4ee5\u672b\u4f4d\u6700\u9ad8\u7684\u6570\u4e3a\u51c6</li> <li>\u4e58\u9664\u8fd0\u7b97\uff1a\u6709\u6548\u6570\u5b57\u5c11\u7684\u4e3a\u51c6</li> </ul> <p>\u4e0d\u786e\u5b9a\u6570\u53ea\u53d6\u4e00\u4f4d\uff08\u9996\u4f4d\u5927\u4e8e\u7b49\u4e8e3\uff09\uff1b\u53d6\u4e24\u4f4d\uff08\u9996\u4f4d\u5c0f\u4e8e3\uff09\u3002\u4f30\u7b97\u65f6\u53d6\u6700\u5927\uff08\u4e0d\u4e3a\u96f6\u5219\u8fdb\u4f4d\uff0c\u4e3a\u96f6\u5219\u820d\u53bb\uff09\u3002</p>"}, {"location": "courses/dawushiyan/1/1/#_13", "title": "\u6570\u636e\u5904\u7406\u65b9\u6cd5", "text": "<ul> <li>\u5217\u8868\u6cd5</li> <li>\u4f5c\u56fe\u6cd5<ul> <li>\u9009\u62e9\u5408\u9002\u7684\u5750\u6807\u5206\u5ea6\u503c</li> <li>\u6807\u660e\u5750\u6807\u8f74</li> <li>\u6807\u8bd5\u9a8c\u70b9</li> <li>\u8fde\u6210\u56fe\u7ebf</li> <li>\u6807\u51fa\u56fe\u7ebf\u7279\u5f81</li> <li>\u6807\u51fa\u56fe\u540d</li> </ul> </li> <li></li> </ul>"}, {"location": "courses/jz/1/1/", "title": "Chapter 1", "text": ""}, {"location": "courses/jz/1/1/#eight-great-ideas", "title": "Eight Great Ideas", "text": "<ol> <li>Design for Moore's Law</li> <li>Use abstraction ti Simpify Design</li> <li>Make the Common Case Fast</li> <li>Performance via Parallelism(\u5e76\u884c)</li> <li>Performance via Pipelining (\u6d41\u6c34\u7ebf)</li> <li>Performance via Prediction (\u9884\u6d4b)</li> <li>Hierarchy of Memories (\u5206\u5c42\u5b58\u50a8\u5668)</li> <li>Dependency via Redundancy (\u5197\u4f59)</li> </ol>"}, {"location": "courses/jz/1/1/#performance-analysis", "title": "Performance Analysis", "text": ""}, {"location": "courses/jz/1/1/#cpu-time", "title": "CPU Time", "text": "<p> CPU Time = CPU Clock Cycles x Clock Cycle Time = CPU Clock Cycles / Clock Rate </p>"}, {"location": "courses/jz/1/1/#cpi", "title": "CPI", "text": "<p>CPI: Cycle Per Instruction  CPI = CPU Clock Cycles / Instruction    CPU Time = CPI x Instruction Count x Clock Cycle Time </p>"}, {"location": "courses/jz/1/1/#mips", "title": "MIPS", "text": "<p>MIPS: Million Instructions Per Second  MIPS = Instruction Count / (CPU Time x 10^6) </p> <p>Warning</p> <p>\u8fd9\u4e2a\u6307\u6807\u4e0d\u592a\u80fd\u53cd\u6620\u51faCPU\u7684\u6027\u80fd\uff0c\u56e0\u4e3a    1. \u4e0d\u540c\u7684CPU\u7528\u7684\u4e0d\u540c\u7684ISA(\u6307\u4ee4\u96c6\u67b6\u6784)  2. \u4e0d\u540c\u7684\u6307\u4ee4\u590d\u6742\u5ea6 </p>"}, {"location": "courses/jz/2/2/", "title": "Chapter 2", "text": "<ul> <li>inst mem ROM (read only)</li> <li>data mem RAM</li> </ul> <p>PC:    - Program counter (\u5f53\u524d\u7a0b\u5e8f\u6240\u5728\u7684\u4f4d\u7f6e)</p> <p>\u6240\u6709\u7684:    - rd [] - rs1 [] - rs2 []</p>"}, {"location": "courses/jz/3/3/", "title": "Chapter 3", "text": ""}, {"location": "courses/jz/3/3/#_1", "title": "\u6570\u7684\u8868\u793a", "text": "<p>\u540c\u662f4\u4f4d\u7684\u60c5\u51b5\u4e0b:</p> <ul> <li>unsigned:\u6ca1\u6709\u7b26\u53f7\u4f4d\uff0c\u76f4\u63a5\u8868\u793a\u6570\u5b57\u3002[0~15]</li> <li>signed-magnitude:\u7b2c\u4e00\u4f4d\u662f\u7b26\u53f7\u4f4d\uff0c\u5269\u4e0b3\u4f4d\u6765\u8868\u793a\u6570\u5b57\u3002\u7b26\u53f7\u4f4d1\u5c31\u662f\u8d1f\u6570\uff0c0\u5c31\u662f\u6b63\u6570\u3002[-7~7]</li> <li>1's complement:\u53cd\u7801\u8868\u793a\uff0c\u5404\u4f4d\u53d6\u53cd\u5373\u53ef\u3002[-15~0]</li> <li>2's complement:\u8865\u7801\u8868\u793a\uff0c\u5404\u4f4d\u53d6\u53cd\u52a0\u4e00\u3002[-8~7]</li> </ul>"}, {"location": "courses/jz/3/3/#alu", "title": "ALU", "text": "<ul> <li>\u52a0\u6cd5\uff1a\u52a0\u6cd5\u5668\u3001CLA</li> <li>\u51cf\u6cd5\uff1a\u8f6c\u5316\u4e3a\u52a0\u6cd5</li> </ul> <p>Note</p> <p>\u6ce8\u610f\u533a\u5206CF(Carry Flag)\u548cOF(Overflow Flag)    </p> <ul> <li>CF:\u9488\u5bf9\u65e0\u7b26\u53f7\u6570   </li> <li>OF:\u9488\u5bf9\u6709\u7b26\u53f7\u6570</li> </ul> <ul> <li>\u4f4d\u79fb<ul> <li>\u7b97\u6570\u4f4d\u79fb\uff1a\u8981\u8865\u7b26\u53f7\u4f4d</li> <li>\u903b\u8f91\u4f4d\u79fb\uff1a\u4e0d\u8865\u7b26\u53f7\u4f4d</li> </ul> </li> </ul>"}, {"location": "courses/jz/3/3/#ieee-floating-point", "title": "IEEE Floating Point", "text": ""}, {"location": "link/link/", "title": "\u53cb\u94fe", "text": "Sora\u9171\u7684\u7b14\u8bb0 \u5217\u8f66\u4e00\u5b9a\u4f1a\u9a76\u5411\u4e0b\u4e00\u4e2a\u7ad9\u53f0\uff0c\u90a3\u4e48\u821e\u53f0\u5462\uff1f\u6211\u4eec\u5462\uff1f Cyrus's Blog Think twice, code once."}, {"location": "misc/reveal/", "title": "reveal-md \u7f16\u5199 Slides", "text": "<p>Info</p> <p>\u672c\u7bc7\u6587\u7ae0\u9002\u7528\u4e8e\u4e0d\u60f3\u4f7f\u7528Powerpoint\u4f46\u662f\u62e5\u6709\u5c55\u793a\u9700\u6c42\u7684\u4eba\u3002</p>"}, {"location": "misc/reveal/#pptreveal-md", "title": "\u4e3a\u4ec0\u4e48\u6211\u653e\u5f03\u4e86PPT\u800c\u9009\u62e9\u4e86reveal-md", "text": "<p>\u518d\u89c1PPT\uff0c\u4f60\u597d\u201c\u6587\u6863\u6f14\u793a\u6a21\u5f0f\u201d</p> <p>\u5728\u5927\u4e00\u7684\u8fd9\u6bb5\u65f6\u95f4\u91cc\uff0c\u6211\u4e00\u5ea6\u56e0\u4e3aPPT\u4e2d\u5404\u79cd\u7e41\u7410\u7684\u529f\u80fd\u800c\u6d6a\u8d39\u4e86\u5927\u628a\u65f6\u95f4\u3002\u6362\u53e5\u8bdd\u8bf4\uff0cPPT\u6709\u592a\u591a\u592a\u591a\u5c55\u793a\u9700\u6c42\u4e4b\u5916\u7684\u529f\u80fd\uff0c\u9875\u9762\u4e0d\u591f\u7b80\u4ecb\uff0c\u4f7f\u7528\u592a\u8fc7\u7e41\u7410\u3002\u6b64\u5916\uff0cPPT\u5bf9\u4e8e\u63a5\u53d7\u8005\u7684\u8bbe\u5907\u4e5f\u6709\u8981\u6c42\uff1a</p> <ul> <li>\u63a5\u53d7\u8005\u7684\u7535\u8111\u91cc\u5fc5\u987b\u6709Powerpoint\u8f6f\u4ef6\uff0c\u5426\u5219\u9884\u89c8\u65f6\u4f1a\u51fa\u73b0\u5404\u79cd\u95ee\u9898</li> <li>\u53cc\u65b9\u7684Powerpoint\u7248\u672c\u8981\u6c42\u57fa\u672c\u4e00\u81f4\uff0c\u5426\u5219\u4f1a\u4e0d\u517c\u5bb9</li> <li>\u4e0a\u53f0\u5c55\u793a\u65f6\u9700\u8981\u7528U\u76d8\u62f7\u8d1d\u6216\u8005\u5728\u5c55\u793a\u7528\u7535\u8111\u4e0a\u767b\u5f55\u81ea\u5df1\u7684\u5fae\u4fe1\u7b49\u7b49\uff0c\u4e0d\u65b9\u4fbf</li> </ul> <p>\u800creveal-md\u6ca1\u6709\u8fd9\u4e9b\u7f3a\u70b9\u3002\u6211\u4eec\u53ea\u9700\u8981\u5199\u4e00\u4e2amd\u6587\u6863\uff0cmake\u4e00\u4e0b\uff0c\u6700\u540e\u4e0a\u4f20\u5230github\u4e0a\u5c31\u5b8c\u6210\u4e86\u3002\u5728\u5c55\u793a\u7528\u7535\u8111\u4e0a\u8f93\u5165<code>&lt;...&gt;.github.io/site/index.html\uff08\u793a\u4f8b\uff09</code>\u5c31\u53ef\u4ee5\u5c55\u793a\u4e86\u3002</p>"}, {"location": "misc/reveal/#reveal-md", "title": "\u539f\u59cbreveal-md\u5b89\u88c5", "text": "<p>\u6211\u5e76\u6ca1\u6709\u7814\u7a76\u5982\u4f55\u88f8\u4f7f\u7528reveal-md\uff0c\u60f3\u4e86\u89e3\u7684\u53ef\u4ee5\u79fb\u6b65isshikih\u4fee\u7684\u7b14\u8bb0\uff1a</p> <p>isshikih\u4fee\u7684\u7b14\u8bb0</p>"}, {"location": "misc/reveal/#tonycrane", "title": "Tonycrane\u7684\u6a21\u677f", "text": "<p>xg\u7684\u6a21\u677f\u8ba9\u8fd9\u4e2aslides\u7684\u7f8e\u5de5\u76f4\u63a5\u9876\u5230\u4e86\u5929\u82b1\u677f\u3002</p> <p>Notice</p> <p>\u9996\u5148\u786e\u4fdd\u4f60\u80fd\u4f7f\u7528npm\uff01</p> <p>\u5728\u7ec8\u7aef\u4e2d\u8f93\u5165\u5982\u4e0b\u547d\u4ee4\uff1a Bash<pre><code>npm install -g reveal-md\n</code></pre> \u8fd9\u6837\u4f60\u5c31\u4e0b\u8f7d\u4e86reveal-md\u3002</p> <p>\u63a5\u4e0b\u6765\u53ef\u4ee5\u4f7f\u7528\u4ed6\u7684\u6a21\u677f\u4e86\u3002\u8fd9\u91cc\u8d34\u51fa\u4ed6\u7684\u793a\u4f8b\u4ee5\u53ca\u9879\u76ee\u7f51\u5740\uff1a</p> <p>\u9884\u89c8</p> <p>xg\u7684slides\u6a21\u677f</p>"}, {"location": "misc/reveal/#_1", "title": "\u751f\u6210\u7f51\u9875\u94fe\u63a5", "text": "<p>\u521b\u5efa\u4e00\u4e2agithub\u4ed3\u5e93\uff0c\u5c06\u6587\u4ef6\u6253\u5305\u8fdb\u53bb\uff0c\u5f00\u542fgithub-pages\u90e8\u7f72\u5c31\u53ef\u4ee5\u5566\uff01\u8fd9\u6837\u4f60\u5c31\u53ef\u4ee5\u8bbf\u95ee(github-pages\u7684\u7f51\u5740)/site/index.md\u6765\u6f14\u793a\u4e86\uff01</p>"}, {"location": "misc/reveal/#_2", "title": "\u81ea\u5b9a\u4e49\u57df\u540d", "text": "<p>\u5982\u679c\u4f60\u6709\u81ea\u5df1\u7684\u57df\u540d\uff0c\u53ef\u4ee5\u5c06github-pages\u7684\u7f51\u5740\u89e3\u6790\u5230\u4f60\u81ea\u5df1\u7684\u57df\u540d\u3002\u5148\u5728\u4ee3\u7406\u5546\u90a3\u91cc\u521b\u5efa\u4e00\u4e2aCNAME\u6761\u76ee\u5230github-pages\u7684\u7f51\u5740\u3002\u7136\u540e\u5728\u4ed3\u5e93\u7684\u6839\u76ee\u5f55\u521b\u5efa\u4e00\u4e2aCNAME\u6587\u4ef6\uff0c\u5199\u5165\u4f60\u7684\u57df\u540d\uff0c\u5728pages\u91cc\u9762\u8bbe\u7f6e\u4e0b\u5c31\u597d\u4e86\u3002</p> <p>\u5982\u679c\u4f60\u60f3\u7701\u7565\u540e\u9762\u7684/site/index.md\uff0c\u53ef\u4ee5\u5728\u6839\u76ee\u5f55\u4e0b\u521b\u5efa\u4e00\u4e2aindex.html\uff0c\u653e\u5165\u4ee5\u4e0b\u4ee3\u7801:</p> <p>HTML<pre><code>&lt;!DOCTYPE html&gt;\n&lt;html lang=\"en\"&gt;\n&lt;head&gt;\n    &lt;meta http-equiv=\"refresh\" content=\"0;url=site/index.html\"&gt;\n    &lt;title&gt;Redirecting...&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;p&gt;If you are not redirected automatically, follow this &lt;a href=\"site/index.html\"&gt;link to site/index.html&lt;/a&gt;.&lt;/p&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre> \u8fd9\u6837\u5c31\u53ef\u4ee5\u8df3\u8f6c\u5230/site/index.md\u4e86\u3002</p>"}, {"location": "misc/Bonus/1/", "title": "Python \u4e2d\u7684\u53cd\u5e8f\u5217\u5316\u6f0f\u6d1e", "text": "<p>Note</p> <p>\u624d...\u624d\u4e0d\u662f\u56e0\u4e3a\u4f1a\u670915%\u7684bonus\u624d\u5199\u7684\u5462\uff01\uff08</p> <p>\u53cd\u5e8f\u5217\u5316\u6f0f\u6d1e\u5728\u8bb8\u591a\u7f16\u7a0b\u8bed\u8a00\u4e2d\u90fd\u662f\u4e00\u4e2a\u4e25\u91cd\u7684\u5b89\u5168\u95ee\u9898\uff0cPython \u4e5f\u4e0d\u4f8b\u5916\u3002\u7279\u522b\u662f Python \u7684 pickle \u6a21\u5757\uff0c\u5982\u679c\u4f7f\u7528\u4e0d\u5f53\uff0c\u5bb9\u6613\u6210\u4e3a\u653b\u51fb\u8005\u7684\u76ee\u6807\u3002\u672c\u6587\u5c06\u8be6\u7ec6\u63a2\u8ba8 Python \u4e2d\u7684\u53cd\u5e8f\u5217\u5316\u6f0f\u6d1e\u3001\u5e38\u89c1\u653b\u51fb\u65b9\u6cd5\u53ca\u5176\u9632\u62a4\u63aa\u65bd\u3002</p>"}, {"location": "misc/Bonus/1/#_1", "title": "\u53cd\u5e8f\u5217\u5316\u6f0f\u6d1e\u6982\u8ff0", "text": "<p>\u53cd\u5e8f\u5217\u5316\u662f\u5c06\u5e8f\u5217\u5316\u6570\u636e\uff08\u901a\u5e38\u662f\u4e8c\u8fdb\u5236\u6216\u5b57\u7b26\u4e32\u5f62\u5f0f\uff09\u91cd\u65b0\u8f6c\u6362\u4e3a\u5bf9\u8c61\u7684\u8fc7\u7a0b\u3002\u5e8f\u5217\u5316\u7528\u4e8e\u6301\u4e45\u5316\u5bf9\u8c61\u6216\u5728\u7f51\u7edc\u4e0a\u4f20\u8f93\u5bf9\u8c61\u3002\u7136\u800c\uff0c\u5982\u679c\u53cd\u5e8f\u5217\u5316\u8fc7\u7a0b\u5904\u7406\u4e86\u6076\u610f\u6784\u9020\u7684\u6570\u636e\uff0c\u53ef\u80fd\u5bfc\u81f4\u4efb\u610f\u4ee3\u7801\u6267\u884c\uff08Remote Code Execution, RCE\uff09\uff0c\u8fdb\u800c\u5371\u53ca\u7cfb\u7edf\u5b89\u5168\u3002</p>"}, {"location": "misc/Bonus/1/#pickle", "title": "pickle \u6a21\u5757\u53ca\u5176\u5371\u9669\u6027", "text": "<p>pickle \u662f Python \u5185\u7f6e\u7684\u5e8f\u5217\u5316\u6a21\u5757\uff0c\u652f\u6301\u5e8f\u5217\u5316\u51e0\u4e4e\u6240\u6709 Python \u5bf9\u8c61\u3002\u5b83\u7684\u5f3a\u5927\u529f\u80fd\u4f7f\u5176\u5728\u67d0\u4e9b\u573a\u666f\u4e0b\u975e\u5e38\u6709\u7528\uff0c\u4f46\u4e5f\u5e26\u6765\u4e86\u5b89\u5168\u98ce\u9669\uff0c\u56e0\u4e3a pickle \u53ef\u4ee5\u5e8f\u5217\u5316\u548c\u53cd\u5e8f\u5217\u5316\u5305\u542b\u4efb\u610f\u4ee3\u7801\u7684\u5bf9\u8c61\u3002</p> <p>\u4ee5\u4e0b\u662f\u4e00\u4e2a\u7b80\u5355\u7684 pickle \u4f7f\u7528\u793a\u4f8b\uff1a</p> Python<pre><code>import pickle\n\n# \u5e8f\u5217\u5316\u5bf9\u8c61\ndata = {'key': 'value'}\nserialized_data = pickle.dumps(data)\n\n# \u53cd\u5e8f\u5217\u5316\u5bf9\u8c61\ndeserialized_data = pickle.loads(serialized_data)\nprint(deserialized_data)\n</code></pre> <p>\u5728\u4e0a\u8ff0\u4ee3\u7801\u4e2d\uff0cpickle.dumps \u5c06\u5b57\u5178\u5bf9\u8c61\u5e8f\u5217\u5316\u4e3a\u5b57\u8282\u6570\u636e\uff0cpickle.loads \u5219\u5c06\u5176\u53cd\u5e8f\u5217\u5316\u4e3a\u539f\u59cb\u5bf9\u8c61\u3002\u5c3d\u7ba1\u6b64\u8fc7\u7a0b\u770b\u4f3c\u5b89\u5168\uff0c\u4f46\u5982\u679c\u53cd\u5e8f\u5217\u5316\u7684\u6570\u636e\u6765\u81ea\u4e0d\u53ef\u4fe1\u6765\u6e90\uff0c\u53ef\u80fd\u5f15\u53d1\u5b89\u5168\u95ee\u9898\u3002</p>"}, {"location": "misc/Bonus/1/#_2", "title": "\u6076\u610f\u53cd\u5e8f\u5217\u5316\u793a\u4f8b", "text": "<p>\u5047\u8bbe\u6211\u4eec\u6709\u4e00\u4e2a\u5305\u542b\u6076\u610f\u4ee3\u7801\u7684\u5e8f\u5217\u5316\u6570\u636e\uff0c\u53cd\u5e8f\u5217\u5316\u8be5\u6570\u636e\u5c06\u6267\u884c\u6076\u610f\u4ee3\u7801\u3002\u4ee5\u4e0b\u793a\u4f8b\u5c55\u793a\u4e86\u5982\u4f55\u5229\u7528 pickle \u8fdb\u884c\u653b\u51fb\uff1a</p> Python<pre><code>import pickle\nimport os\n\n# \u521b\u5efa\u6076\u610f\u6570\u636e\nclass Malicious:\n    def __reduce__(self):\n        return (os.system, ('ls',))\n\nmalicious_data = pickle.dumps(Malicious())\n\n# \u53cd\u5e8f\u5217\u5316\u6076\u610f\u6570\u636e\npickle.loads(malicious_data)\n</code></pre> <p>\u5728\u8fd9\u4e2a\u793a\u4f8b\u4e2d\uff0c\u5b9a\u4e49\u4e86\u4e00\u4e2a Malicious \u7c7b\uff0c\u5176 reduce \u65b9\u6cd5\u8fd4\u56de\u4e00\u4e2a\u53ef\u8c03\u7528\u5bf9\u8c61\u548c\u53c2\u6570\u5143\u7ec4\u3002\u8fd9\u4f1a\u5728\u53cd\u5e8f\u5217\u5316\u65f6\u6267\u884c os.system('ls')\uff0c\u5217\u51fa\u5f53\u524d\u76ee\u5f55\u5185\u5bb9\u3002\u653b\u51fb\u8005\u53ef\u4ee5\u5229\u7528\u7c7b\u4f3c\u624b\u6bb5\u6267\u884c\u4efb\u610f\u7cfb\u7edf\u547d\u4ee4\u3002</p>"}, {"location": "misc/Bonus/1/#_3", "title": "\u9632\u62a4\u63aa\u65bd", "text": "<p>\u4e3a\u4e86\u9632\u6b62\u53cd\u5e8f\u5217\u5316\u6f0f\u6d1e\uff0c\u5efa\u8bae\u91c7\u53d6\u4ee5\u4e0b\u9632\u62a4\u63aa\u65bd\uff1a</p> <ol> <li> <p>\u907f\u514d\u4f7f\u7528 pickle \u53cd\u5e8f\u5217\u5316\u4e0d\u53ef\u4fe1\u6570\u636e\uff1apickle \u7684\u7075\u6d3b\u6027\u4f7f\u5176\u5728\u5904\u7406\u4e0d\u53d7\u4fe1\u4efb\u7684\u6570\u636e\u65f6\u975e\u5e38\u5371\u9669\u3002\u5c3d\u91cf\u907f\u514d\u4f7f\u7528 pickle \u53cd\u5e8f\u5217\u5316\u6765\u81ea\u4e0d\u53ef\u4fe1\u6765\u6e90\u7684\u6570\u636e\u3002</p> </li> <li> <p>\u4f7f\u7528\u66f4\u5b89\u5168\u7684\u5e8f\u5217\u5316\u6a21\u5757\uff1a   \u5982\u679c\u4e0d\u9700\u8981\u5e8f\u5217\u5316\u590d\u6742\u5bf9\u8c61\uff0c\u53ef\u4ee5\u4f7f\u7528\u66f4\u5b89\u5168\u7684\u5e8f\u5217\u5316\u6a21\u5757\uff0c\u5982 <code>json</code>\u3002<code>json</code> \u6a21\u5757\u53ea\u652f\u6301\u57fa\u672c\u6570\u636e\u7c7b\u578b\u7684\u5e8f\u5217\u5316\u548c\u53cd\u5e8f\u5217\u5316\uff0c\u4e0d\u4f1a\u6267\u884c\u4ee3\u7801\uff0c\u4ece\u800c\u66f4\u5b89\u5168\u3002</p> </li> </ol> Python<pre><code>import json\n\n# \u5e8f\u5217\u5316\ndata = {'key': 'value'}\nserialized_data = json.dumps(data)\n\n# \u53cd\u5e8f\u5217\u5316\ndeserialized_data = json.loads(serialized_data)\nprint(deserialized_data)\n</code></pre> <ol> <li> <p>\u9a8c\u8bc1\u548c\u6e05\u7406\u8f93\u5165\u6570\u636e\uff1a    - \u5728\u53cd\u5e8f\u5217\u5316\u4e4b\u524d\uff0c\u5c3d\u53ef\u80fd\u9a8c\u8bc1\u6570\u636e\u7684\u6765\u6e90\u548c\u683c\u5f0f\uff0c\u786e\u4fdd\u5176\u5b89\u5168\u3002\u4f8b\u5982\uff0c\u53ef\u4ee5\u4f7f\u7528\u7b7e\u540d\u548c\u54c8\u5e0c\u9a8c\u8bc1\u6570\u636e\u7684\u5b8c\u6574\u6027\u548c\u771f\u5b9e\u6027\u3002</p> </li> <li> <p>\u4f7f\u7528\u53d7\u9650\u73af\u5883\uff1a    - \u5982\u679c\u5fc5\u987b\u4f7f\u7528 pickle\uff0c\u53ef\u4ee5\u5728\u4e00\u4e2a\u53d7\u9650\u73af\u5883\u4e2d\u8fd0\u884c\u53cd\u5e8f\u5217\u5316\u4ee3\u7801\uff0c\u4f8b\u5982\u4f7f\u7528\u6c99\u7bb1\uff08sandbox\uff09\u6280\u672f\u6216\u5176\u4ed6\u9694\u79bb\u673a\u5236\uff0c\u9650\u5236\u4ee3\u7801\u6267\u884c\u7684\u6743\u9650\u3002</p> </li> <li> <p>\u9650\u5236\u53ef\u53cd\u5e8f\u5217\u5316\u7684\u7c7b\uff1a    - \u53ef\u4ee5\u901a\u8fc7\u81ea\u5b9a\u4e49 Unpickler \u7c7b\u5e76\u8986\u76d6\u5176 find_class \u65b9\u6cd5\uff0c\u9650\u5236\u53cd\u5e8f\u5217\u5316\u65f6\u53ef\u7528\u7684\u7c7b\uff0c\u4ece\u800c\u51cf\u5c11\u653b\u51fb\u9762\u3002</p> </li> </ol> Python<pre><code>import pickle\n\nclass RestrictedUnpickler(pickle.Unpickler):\n    def find_class(self, module, name):\n        if module == \"builtins\" and name in {\"list\", \"dict\", \"set\", \"tuple\"}:\n            return super().find_class(module, name)\n        raise pickle.UnpicklingError(f\"global '{module}.{name}' is forbidden\")\n\ndef restricted_loads(s):\n    return RestrictedUnpickler(io.BytesIO(s)).load()\n</code></pre>"}, {"location": "misc/Bonus/1/#_4", "title": "\u7ed3\u8bba", "text": "<p>\u53cd\u5e8f\u5217\u5316\u6f0f\u6d1e\u662f\u4e00\u4e2a\u4e25\u91cd\u7684\u5b89\u5168\u95ee\u9898\uff0c\u5728 Python \u4e2d\u5c24\u4e3a\u503c\u5f97\u5173\u6ce8\u3002\u5f00\u53d1\u8005\u5e94\u5f53\u5145\u5206\u4e86\u89e3\u53cd\u5e8f\u5217\u5316\u7684\u98ce\u9669\uff0c\u5e76\u91c7\u53d6\u9002\u5f53\u7684\u9632\u62a4\u63aa\u65bd\uff0c\u907f\u514d\u5c06\u5e94\u7528\u7a0b\u5e8f\u66b4\u9732\u5728\u6f5c\u5728\u7684\u5b89\u5168\u5a01\u80c1\u4e2d\u3002\u901a\u8fc7\u8c28\u614e\u9009\u62e9\u5e8f\u5217\u5316\u6a21\u5757\u3001\u9a8c\u8bc1\u8f93\u5165\u6570\u636e\u3001\u4f7f\u7528\u53d7\u9650\u73af\u5883\u548c\u9650\u5236\u53cd\u5e8f\u5217\u5316\u7c7b\uff0c\u53ef\u4ee5\u6709\u6548\u964d\u4f4e\u53cd\u5e8f\u5217\u5316\u6f0f\u6d1e\u5e26\u6765\u7684\u98ce\u9669\u3002</p>"}, {"location": "web/webbasic/1/", "title": "\u7f51\u7ad9\u7684\u642d\u5efa", "text": "<p>\u7f51\u7ad9\u76843\u79cd\u67b6\u6784\uff1a  1. C/S\u67b6\u6784\uff1a\u5ba2\u6237\u7aef\u7a0b\u5e8f 2. B/S\u67b6\u6784\uff1a\u6d4f\u89c8\u5668 3. P2P\u67b6\u6784\uff1a\u70b9\u5230\u70b9\uff0c\u65e0\u9700\u670d\u52a1\u5668\u4e2d\u8f6c</p>"}, {"location": "web/webbasic/1/#_2", "title": "\u7f51\u7ad9\u662f\u600e\u4e48\u642d\u5efa\u7684", "text": "<p>\u670d\u52a1\u5668\u3001\u4e2d\u95f4\u4ef6\u3001\u6570\u636e\u5e93\u3001\u4ee3\u7801\u3001\u9759\u6001\u8d44\u6e90</p> <p>\u4e2d\u95f4\u4ef6\uff1a\u4f8b\u5982Apache\uff0c\u5c06\u7f51\u7ad9\u53d1\u5e03\u5230\u516c\u7f51\u4e0a\uff0c\u642d\u5efa\u7f51\u7ad9\u8fd0\u884c\u8d44\u6e90</p> <p>Note</p> <p>\u4e2d\u95f4\u4ef6\u662f\u201c\u94a2\u7b4b\u6df7\u51dd\u571f\u201d</p>"}, {"location": "web/webbasic/2/", "title": "\u7f51\u7ad9\u8fd0\u884c\u539f\u7406", "text": "<p>hosts\u6587\u4ef6\uff1a\u50a8\u5b58\u4e86DNS\u7684\u7f13\u5b58\u8bb0\u5f55</p> <p></p> <p>Text Only<pre><code>1.1.1.1 www.baidu.com\n</code></pre> \u8981\u662f\u4fee\u6539\u4e86hosts\u6587\u4ef6\u5c06\u767e\u5ea6\u524d\u9762\u7684IP\u5730\u5740\u6539\u6389\uff0cping\u767e\u5ea6\u5c31\u4f1a\u76f4\u63a5\u8df3\u52301.1.1.1\u3002</p> <p></p>"}, {"location": "yuyan/C/", "title": "C\u5c0f\u7a0b", "text": "<p>\u8fd9\u662f\u6211\u5927\u4e00\u4e0a\u5b66\u671f\u6f66\u6f66\u8349\u8349\u505a\u51fa\u6765\u7684......</p> <p>\u7b97\u662f\u6211\u7684\u7b2c\u4e00\u672c\u7b14\u8bb0\u5427</p> <p>Note</p> <p>\u8d44\u6599\u6b8b\u7f3a\u4e0d\u5168\uff0c\u4e0d\u5efa\u8bae\u89c2\u770b</p>"}, {"location": "yuyan/C/C%E8%AF%AD%E8%A8%80%E5%89%8D%E7%9E%BB/", "title": "0.0 \u57fa\u7840\u77e5\u8bc6", "text": "<ol> <li>\u6c47\u7f16\u8bed\u8a00\u5c5e\u4e8e\u9762\u5411\u673a\u5668\u8bed\u8a00\uff0c\u9ad8\u7ea7\u8bed\u8a00\u5c5e\u4e8e\u9762\u5411\u95ee\u9898\u7684\u8bed\u8a00\u3002</li> <li>\u7528\u9ad8\u7ea7\u8bed\u8a00\u7f16\u5199\u7684\u7a0b\u5e8f\u79f0\u4e3a\u6e90\u7a0b\u5e8f\uff0c\u5b83\u53ef\u4ee5\u901a\u8fc7\u89e3\u91ca\u7a0b\u5e8f\u7ffb\u8bd1\u4e00\u53e5\u6267\u884c\u4e00\u53e5\u7684\u65b9\u5f0f\u6267\u884c\uff0c\u4e5f\u53ef\u4ee5\u901a\u8fc7\u7f16\u8bd1\u7a0b\u5e8f\u4e00\u6b21\u7ffb\u8bd1\u4ea7\u751f\u76ee\u6807\u53ef\u6267\u884c\u7a0b\u5e8f\uff0c\u7136\u540e\u6267\u884c\u3002</li> <li>\u5728C\u8bed\u8a00\u7a0b\u5e8f\u4e2d\u5141\u8bb8\u51fa\u73b0\u7684\u5b57\u7b26\u96c6\u662f\u5927\u5c0f\u5199\u82f1\u6587\u5b57\u6bcd\uff0852\u4e2a\uff09\u3001\u6570\u5b57\uff0810\u4e2a\uff09\u3001\u952e\u76d8\u7b26\u53f7\uff0833\u4e2a\u548c\u8f6c\u4e49\u5b57\u7b26\u3002</li> <li>\u8f6c\u4e49\u5b57\u7b26\u662f\u7531\\\u7b26\u53f7\u5f00\u59cb\u7684\u5355\u4e2a\u5b57\u7b26\u6216\u82e5\u5e72\u4e2a\u5b57\u7b26\u7ec4\u6210\u7684\u3002</li> <li>C\u8bed\u8a00\u7684\u7a0b\u5e8f\u4e2d\u6709\u7279\u6b8a\u542b\u4e49\u7684\u82f1\u8bed\u5355\u8bcd\u79f0\u4e3a\u4fdd\u7559\u5b57\u3002</li> <li>\u6807\u8bc6\u7b26\u662f\u7528\u6237\u81ea\u5b9a\u4e49\u7684\u4e00\u79cd\u5b57\u7b26\u5e8f\u5217\uff0c\u901a\u5e38\u7528\u6765\u8868\u793a\u7a0b\u5e8f\u4e2d\u9700\u8981\u8fa8\u8ba4\u7684\u5bf9\u8c61\u3002</li> <li>C\u8bed\u8a00\u4e2d\uff0c\u6807\u8bc6\u7b26\u7684\u5b9a\u4e49\u89c4\u5219\u662f\u7531\u5b57\u6bcd\u6216\u4e0b\u5212\u7ebf\u5f00\u5934\u7684\u5b57\u6bcd\u3001\u6570\u5b57\u3001\u4e0b\u5212\u7ebf\u7ec4\u6210\u7684\u4e00\u4e32\u7b26\u53f7\u3002</li> <li>C\u8bed\u8a00\u8bcd\u7c7b\u4e3b\u8981\u5206\u4e3a\u5e38\u91cf\u3001\u53d8\u91cf\u3001\u8fd0\u7b97\u7b26\u3001\u51fd\u6570\u8c03\u7528\u3001\u8868\u8fbe\u5f0f\u3001\u4fdd\u7559\u5b57\u7b496\u7c7b\u3002</li> <li>C\u8bed\u8a00\u7684\u8bed\u53e5\u4e3b\u8981\u5206\u4e3a\u6570\u636e\u5b9a\u4e49\u8bed\u53e5\u3001\u8d4b\u503c\u8bed\u53e5\u3001\u51fd\u6570\u8c03\u7528\u8bed\u53e5\u3001\u8868\u8fbe\u5f0f\u8bed\u53e5\u3001\u6d41\u7a0b\u63a7\u5236\u8bed\u53e5\u3001\u590d\u5408\u8bed\u53e5\u3001\u7a7a\u8bed\u53e5\u548c\u5176\u4ed6\u8bed\u53e5\u7b498\u7c7b\u3002</li> <li>C\u7a0b\u5e8f\u662f\u7531\u51fd\u6570\u6784\u6210\u7684\u3002\u5176\u4e2d\u6709\u5e76\u4e14\u53ea\u80fd\u67091\u4e2a\u4e3b\u51fd\u6570\u3002C\u8bed\u8a00\u7a0b\u5e8f\u7684\u6267\u884c\u603b\u662f\u7531\u4e3b\u51fd\u6570\u5f00\u59cb\uff0c\u5e76\u4e14\u5728\u4e3b\u51fd\u6570\u4e2d\u7ed3\u675f\u3002</li> <li>C\u8bed\u8a00\u7a0b\u5e8f\u7684\u6ce8\u91ca\u53ef\u4ee5\u51fa\u73b0\u5728\u7a0b\u5e8f\u4e2d\u7684\u4efb\u4f55\u5730\u65b9\uff0c\u5b83\u662f\u4ee5\\/*\u7b26\u53f7\u4f5c\u4e3a\u5f00\u59cb\u6807\u8bb0\uff0c\u4ee5*/\u7b26\u53f7\u4f5c\u4e3a\u7ed3\u675f\u6807\u8bb0\u3002</li> </ol>"}, {"location": "yuyan/C/C%E8%AF%AD%E8%A8%80%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95/", "title": "1.1\u6807\u8bc6\u7b26", "text": ""}, {"location": "yuyan/C/C%E8%AF%AD%E8%A8%80%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95/#111", "title": "1.1.1\u6807\u8bc6\u7b26\u7684\u7ec4\u6210\u89c4\u5219", "text": "<ol> <li>\u5fc5\u987b\u7531\u5b57\u6bcd\u3001\u6570\u5b57\u548c\u4e0b\u5212\u7ebf\u7ec4\u6210</li> <li>\u7b2c\u4e00\u4e2a\u5b57\u7b26\u5fc5\u987b\u662f\u5b57\u6bcd\u6216\u4e0b\u5212\u7ebf</li> <li>\u5b57\u6bcd\u8981\u533a\u5206\u5927\u5c0f\u5199</li> <li>\u4e0d\u80fd\u4e0e\u5173\u952e\u5b57\u540c\u540d</li> </ol>"}, {"location": "yuyan/C/C%E8%AF%AD%E8%A8%80%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95/#112", "title": "1.1.2\u6709\u6548\u957f\u5ea6", "text": "<p>\u524d31\u4e2a\u5b57\u7b26</p>"}, {"location": "yuyan/C/C%E8%AF%AD%E8%A8%80%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95/#113", "title": "1.1.3\u5173\u952e\u5b57", "text": "<p>Which one below is NOT a keyword of the C programming language? ____   A. define  B. if C. typedef D. while</p> <p>A <code>define</code>\u00a0\u4e0d\u662f\u5173\u952e\u5b57\uff0c\u662f\u9884\u5904\u7406\u6307\u4ee4\uff0c\u4f60\u751a\u81f3\u53ef\u4ee5\u00a0<code>int define;</code>\u00a0\u800c\u00a0<code>if</code>\u3001<code>typedef</code>\u3001<code>while</code>\u00a0\u663e\u7136\u90fd\u662f\u5173\u952e\u5b57\u3002</p> <p>Which one below is NOT a valid identifier in the C programming language? ____  A. printf B.  _ever C. \"char\" D. true</p> <p>C\uff0c\u56e0\u4e3a\u00a0<code>int \"char\";</code>\u00a0\u80af\u5b9a\u662f\u975e\u6cd5\u7684\uff0c\u6807\u8bc6\u7b26\u5fc5\u987b\u4ee5\u5b57\u6bcd\u6216\u4e0b\u5212\u7ebf\u5f00\u5934\u3002\u5bf9\u4e8e\u00a0A\uff0cprintf\u00a0\u53ea\u662f\u4e00\u4e2a\u51fd\u6570\u540d\uff0c\u4e0d\u662f\u5173\u952e\u5b57\uff0c\u6240\u4ee5\u662f\u5408\u6cd5\u7684\u3002\u5bf9\u4e8e\u00a0D\uff0cC\u00a0\u8bed\u8a00\u4e2d\u00a0true\u00a0\u5e76\u4e0d\u662f\u5173\u952e\u5b57\uff0c\u4e5f\u53ef\u4ee5\u4f7f\u7528\u3002</p>"}, {"location": "yuyan/C/C%E8%AF%AD%E8%A8%80%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95/#12", "title": "1.2\u8f93\u5165\u4e0e\u8f93\u51fa", "text": ""}, {"location": "yuyan/C/C%E8%AF%AD%E8%A8%80%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95/#121-printf", "title": "1.2.1 printf", "text": "<p>\u8f6c\u5316\u58f0\u660e\u7b26</p> \u7c7b\u578b \u683c\u5f0f\u5b57\u7b26\u4e32 \u8f93\u51fa\u5f62\u5f0f \u6574\u5f62 %d \u5e26\u7b26\u53f7\u7684\u5341\u8fdb\u5236 \u6574\u578b %o \u65e0\u7b26\u53f7\u7684\u516b\u8fdb\u5236 \u6574\u578b %x \u65e0\u7b26\u53f7\u7684\u5341\u516d\u8fdb\u5236 \u6574\u578b %u \u65e0\u7b26\u53f7\u7684\u5341\u8fdb\u5236 \u6d6e\u70b9\u578b %f \u5c0f\u6570\uff0c6\u4f4d \u6d6e\u70b9\u578b %e \u6307\u6570\uff0c6\u4f4d \u6d6e\u70b9\u578b %g \u4f18\u5316\u7684\u5c0f\u6570\uff08\u53bb\u6389\u65e0\u610f\u4e49\u76840\uff09 \u5b57\u7b26\u578b %c \u5b57\u7b26 \u5b57\u7b26\u578b %s \u5b57\u7b26\u4e32 <p>\u9644\u52a0\u683c\u5f0f</p> \u5b57\u7b26 \u8f93\u51fa %md \u5f53\u6570\u636e\u957f\u5ea6&lt;m\u65f6\uff0c\u5de6\u8865\u7a7a\u683c\uff0c\u5426\u5219\u6309\u5b9e\u9645\u8f93\u51fa ^1 %nf \u6307\u5b9a\u5c0f\u6570\u70b9\u540e\u4f4d\u6570\uff08\u56db\u820d\u4e94\u5165\uff09 %ns \u5bf9\u5b57\u7b26\u4e32\uff0c\u8f93\u51fa\u6307\u5b9a\u4f4d\u6570 %-md \u8f93\u5165\u6570\u636e\u5728\u57df\u5185\u5de6\u5bf9\u9f50 %+md \u5728\u6709\u7b26\u53f7\u7684\u6b63\u6570\u524d\u52a0\u6b63\u53f7 %0md \u5728\u5de6\u8fb9\u7684\u7a7a\u683c\u75280\u8865 %#o \u5728\u516b\u8fdb\u5236\u524d\u663e\u793a0 %#x \u5728\u5341\u516d\u8fdb\u5236\u524d\u663e\u793a0x %ld \u5728d,o,x,u\u524d\uff0clong\u578b %lf \u5728e,f,g\u524d\uff0cdouble\u578b <p>\u91cd\u70b9</p> <p>\u5173\u4e8e%e\u7684\u7528\u6cd5</p> <p>\u5728C\u8bed\u8a00\u4e2d\uff0c<code>%e</code>\u662f\u7528\u4e8e\u683c\u5f0f\u5316\u8f93\u51fa\u6d6e\u70b9\u6570\u7684\u683c\u5f0f\u63a7\u5236\u7b26\u3002\u5b83\u8868\u793a\u4ee5\u6307\u6570\u5f62\u5f0f\u8f93\u51fa\u6d6e\u70b9\u6570\uff0c\u4f7f\u7528\u5c0f\u5199\u5b57\u6bcd\"e\"\u8868\u793a\u6307\u6570\u90e8\u5206\u3002\u5177\u4f53\u6765\u8bf4\uff0c<code>%e</code>\u5c06\u6d6e\u70b9\u6570\u8868\u793a\u4e3a<code>[-]d.ddddde\u00b1dd</code>\u7684\u5f62\u5f0f\uff0c\u5176\u4e2d\u7b2c\u4e00\u4e2a<code>d</code>\u662f\u6574\u6570\u90e8\u5206\uff0c\u540e\u9762\u7684\u5c0f\u6570\u90e8\u5206\u4ee5\u53ca\u6307\u6570\u90e8\u5206\u90fd\u7528\u5c0f\u5199\u5b57\u6bcd\"e\"\u8868\u793a\u3002</p> <p>\u4ee5\u4e0b\u662f\u4e00\u4e2a\u7b80\u5355\u7684\u4f8b\u5b50\uff1a</p> C<pre><code>#include &lt;stdio.h&gt;\n\nint main() {\n    double number = 12345.6789;\n    printf(\"Number in scientific notation: %e\\n\", number);\n    return 0;\n}\n</code></pre> <p>\u8fd9\u4e2a\u7a0b\u5e8f\u5c06\u8f93\u51fa\uff1a</p> Text Only<pre><code>Number in scientific notation: 1.234568e+004\n</code></pre> <p>\u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c<code>%e</code>\u5c06<code>12345.6789</code>\u683c\u5f0f\u5316\u4e3a\u79d1\u5b66\u8ba1\u6570\u6cd5\u5f62\u5f0f\uff0c\u5373<code>1.234568e+04</code>\u3002\u6307\u6570\u90e8\u5206\u8868\u793a10\u7684\u5e42\uff0c\u56e0\u6b64<code>e+04</code>\u8868\u793a10\u76844\u6b21\u65b9\u3002</p> <p>%e\u4e5f\u53ef\u4ee5\u4e0e\u5176\u4ed6\u683c\u5f0f\u5b57\u7b26\u4e32\u7684\u8bed\u6cd5\u76f8\u7ed3\u5408</p> C<pre><code>printf(\"%12.3e\",918.48);\n</code></pre> <p>\u8fd9\u5c06\u4f1a\u8f93\u51fa</p> <p><code>9.185e+002</code></p> <p><code>printf(\"%12.3e\", 918.48)</code> \u662f\u4e00\u4e2a\u683c\u5f0f\u5316\u8f93\u51fa\u8bed\u53e5\uff0c\u5b83\u4f7f\u7528\u4e86 <code>%e</code> \u683c\u5f0f\u63a7\u5236\u7b26\u6765\u8868\u793a\u6d6e\u70b9\u6570\uff0c\u5e76\u4e14\u5305\u542b\u4e86\u4e00\u4e9b\u5bbd\u5ea6\u548c\u7cbe\u5ea6\u7684\u8bbe\u7f6e\u3002\u8ba9\u6211\u4eec\u9010\u4e2a\u89e3\u91ca\u8fd9\u4e2a\u8bed\u53e5\uff1a</p> <ul> <li><code>%e</code>: \u8868\u793a\u4ee5\u79d1\u5b66\u8ba1\u6570\u6cd5\u7684\u5f62\u5f0f\u8f93\u51fa\u6d6e\u70b9\u6570\u3002</li> <li><code>%12.3e</code>: \u8fd9\u4e2a\u90e8\u5206\u4e2d\u7684\u6570\u5b57\u63a7\u5236\u4e86\u8f93\u51fa\u7684\u683c\u5f0f\u3002</li> <li><code>12</code>: \u8868\u793a\u8f93\u51fa\u7684\u603b\u5bbd\u5ea6\u4e3a12\u4e2a\u5b57\u7b26\uff0c\u5305\u62ec\u5c0f\u6570\u70b9\u548c\u6307\u6570\u90e8\u5206\u3002</li> <li><code>.3</code>: \u8868\u793a\u8f93\u51fa\u7684\u5c0f\u6570\u90e8\u5206\u7cbe\u786e\u52303\u4f4d\u3002</li> <li><code>e</code>: \u8868\u793a\u4f7f\u7528\u79d1\u5b66\u8ba1\u6570\u6cd5\u8868\u793a\u6d6e\u70b9\u6570\u3002</li> </ul> <p>\u73b0\u5728\uff0c\u8ba9\u6211\u4eec\u5e94\u7528\u8fd9\u4e9b\u8bbe\u7f6e\u5230 <code>918.48</code> \u8fd9\u4e2a\u6d6e\u70b9\u6570\uff1a</p> <ol> <li>\u6d6e\u70b9\u6570 <code>918.48</code> \u4ee5\u79d1\u5b66\u8ba1\u6570\u6cd5\u8868\u793a\u4e3a <code>9.1848e+02</code>\u3002</li> <li>\u603b\u5bbd\u5ea6\u4e3a12\u4e2a\u5b57\u7b26\uff0c\u6240\u4ee5\u5728\u8f93\u51fa\u4e2d\u4f1a\u586b\u5145\u4e00\u4e9b\u7a7a\u683c\uff0c\u4f7f\u5f97\u6574\u4e2a\u8f93\u51fa\u5360\u636e12\u4e2a\u5b57\u7b26\u7684\u5bbd\u5ea6\u3002</li> <li>\u5c0f\u6570\u90e8\u5206\u7cbe\u786e\u52303\u4f4d\uff0c\u6240\u4ee5\u8f93\u51fa\u7684\u5c0f\u6570\u90e8\u5206\u662f <code>.185</code>\u3002</li> <li>\u6700\u7ec8\u8f93\u51fa\u4e3a <code>\"  9.185e+002\"</code>\u3002</li> </ol> <p>\u8fd9\u6837\uff0c<code>printf(\"%12.3e\", 918.48)</code> \u5c06\u4f1a\u8f93\u51fa <code>\"   9.185e+002\"</code>\u3002</p>"}, {"location": "yuyan/C/C%E8%AF%AD%E8%A8%80%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95/#122-scanf", "title": "1.2.2 scanf", "text": "C<pre><code>scanf(\"%4d%2d\",&amp;a,&amp;b);\n</code></pre> <p>\u82e5\u8f93\u5165123456\uff0c\u5219a=1234\uff0cb=56</p> C<pre><code>//\u82e5\u5728%\u540e\u6709*\u8bf4\u660e\u7b26\uff0c\u5219\u8868\u793a\u672c\u6b21\u8f93\u5165\u4e0d\u4f20\u7ed9\u4efb\u610f\u503c\nscanf(\"%2d%*3d%2d\",&amp;a,&amp;b);\n</code></pre> <p>\u82e5\u8f93\u51651234567 \u5219a=12\uff0cb=67</p> C<pre><code>scanf(\"%.2f\",&amp;a);\n</code></pre> <p>\u4e0d\u5408\u6cd5</p> C<pre><code>scanf(\"%[^m]\",&amp;a);\n</code></pre> <p>\u975e\u5e38\u5389\u5bb3\uff0cm\u662f\u4efb\u610f\u4e00\u4e2a\u5b57\u7b26\uff0c\u4e00\u76f4\u8bfb\u5230m\u5b57\u7b26\u4e3a\u6b62\u3002</p>"}, {"location": "yuyan/C/C%E8%AF%AD%E8%A8%80%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95/#_1", "title": "\u672c\u7ae0\u505a\u9898\u5206\u6790", "text": "<p>class\u4e0d\u53ef\u4ee5\u7528\u4f5c\u7528\u6237\u6807\u8bc6\u7b26\uff0c\u56e0\u4e3a\u4ed6\u662fC++\u4e2d\u7684\u5173\u952e\u5b57</p> <p>C<pre><code>scanf(\"a=%d,b=%d\",&amp;a,&amp;b);\n</code></pre> \u8fd9\u6761\u8bed\u53e5\u662f\u5408\u6cd5\u7684</p> <p>include \u4e0d\u662fC\u8bed\u8a00\u4e2d\u7684\u5173\u952e\u5b57</p> C<pre><code>int a = 1234;\nprintf(\"%2d\",a);\n</code></pre> <p>\u6b64\u65f6\u8f93\u51fa\u7684\u662f1234\uff0c\u56e0\u4e3a[[#^1]]</p> C<pre><code>int a,b,c;\na=b=c=5;\n</code></pre> <p>\u8fd9\u662f\u5408\u6cd5\u7684\u3002\u800c C<pre><code>int a=b=c=5;\n</code></pre> \u8fd9\u662f\u4e0d\u5408\u6cd5\u7684\u3002</p>"}, {"location": "yuyan/C/%E5%85%B3%E9%94%AE%E5%AD%97/", "title": "2.5 \u5173\u952e\u5b57", "text": "\u5173\u952e\u5b57 \u4f5c\u7528 auto \u58f0\u660e\u81ea\u52a8\u53d8\u91cf break \u8df3\u51fa\u5f53\u524d\u5faa\u73af case char const continue default do double else enum extern \u58f0\u660e\u53d8\u91cf\u6216\u51fd\u6570\u662f\u5728\u5176\u4ed6\u6587\u4ef6\u6216\u672c\u6587\u4ef6\u5176\u4ed6\u4f4d\u7f6e\u5b9a\u4e49 float for goto if int long register \u58f0\u660e\u5bc4\u5b58\u5668\u53d8\u91cf return short signed sizeof static \u58f0\u660e\u9759\u6001\u53d8\u91cf struct switch typedef unsigned \u58f0\u660e\u65e0\u7b26\u53f7\u7c7b\u578b\u53d8\u91cf\u6216\u51fd\u6570 union \u58f0\u660e\u5171\u7528\u4f53\u7c7b\u578b void volatile \u8bf4\u660e\u53d8\u91cf\u5728\u7a0b\u5e8f\u8fd0\u884c\u65f6\u53ef\u88ab\u9690\u542b\u5730\u6539\u53d8 while"}, {"location": "yuyan/C/%E5%BE%AA%E7%8E%AF/", "title": "4.1 for", "text": "<p>for( ; ; ) \u8868\u8fbe\u5f0f\u90fd\u53ef\u7531\u5305\u542b\u9017\u53f7\u8fd0\u7b97\u7b26\u7684\u591a\u4e2a\u8868\u8fbe\u5f0f\u7ec4\u6210\u3002</p>"}, {"location": "yuyan/C/%E5%BE%AA%E7%8E%AF/#42", "title": "4.2 \u8f85\u52a9\u63a7\u5236\u8bed\u53e5", "text": ""}, {"location": "yuyan/C/%E5%BE%AA%E7%8E%AF/#421-break", "title": "4.2.1 break", "text": "<p>break\u53ea\u80fd\u7528\u5728\u5faa\u73af\u4f53\u548cswitch\u8bed\u53e5\u4e2d\u3002</p> <p>break\u8df3\u51fa\u672c\u5c42\u5faa\u73af\u3002</p>"}, {"location": "yuyan/C/%E5%BE%AA%E7%8E%AF/#422-continue", "title": "4.2.2 continue", "text": "<p>continue\u53ea\u662f\u8df3\u51fa\u672c\u6b21\u5faa\u73af\u3002</p>"}, {"location": "yuyan/C/%E5%BE%AA%E7%8E%AF/#423-goto", "title": "4.2.3 goto", "text": "<p>\"goto\" \u662f\u4e00\u79cd\u63a7\u5236\u6d41\u8bed\u53e5\uff0c\u5141\u8bb8\u5c06\u7a0b\u5e8f\u7684\u6267\u884c\u4ece\u4e00\u4e2a\u4f4d\u7f6e\u65e0\u6761\u4ef6\u5730\u8f6c\u79fb\u5230\u53e6\u4e00\u4e2a\u4f4d\u7f6e\u3002\u7136\u800c\uff0c\u5927\u591a\u6570\u73b0\u4ee3\u7f16\u7a0b\u8bed\u8a00\u4e2d\u90fd\u4e0d\u63a8\u8350\u6216\u4e0d\u652f\u6301\u4f7f\u7528 \"goto\"\uff0c\u56e0\u4e3a\u5b83\u5bb9\u6613\u5bfc\u81f4\u4ee3\u7801\u96be\u4ee5\u7406\u89e3\u548c\u7ef4\u62a4\u3002\u76f8\u53cd\uff0c\u63a8\u8350\u4f7f\u7528\u7ed3\u6784\u5316\u7684\u63a7\u5236\u6d41\u8bed\u53e5\uff0c\u5982\u6761\u4ef6\u8bed\u53e5\uff08if-else\uff09\u3001\u5faa\u73af\u8bed\u53e5\uff08for\u3001while\uff09\u3001\u51fd\u6570\u548c\u5f02\u5e38\u5904\u7406\u7b49\u3002</p> <p>\u4ee5\u4e0b\u662f\u4e00\u4e2a\u4f7f\u7528 \"goto\" \u7684\u7b80\u5355\u4f8b\u5b50\uff0c\u4f7f\u7528C\u8bed\u8a00\uff1a</p> C<pre><code>#include &lt;stdio.h&gt;\n\nint main() {\n    int i = 0;\n\n    // \u4f7f\u7528goto\u8bed\u53e5\n    loop_start:\n        if (i &lt; 5) {\n            printf(\"%d \", i);\n            i++;\n            goto loop_start;\n        }\n\n    return 0;\n}\n</code></pre> <p>\u5728\u4e0a\u9762\u7684\u4f8b\u5b50\u4e2d\uff0c\u7a0b\u5e8f\u901a\u8fc7 <code>goto loop_start;</code> \u8bed\u53e5\u65e0\u6761\u4ef6\u5730\u8df3\u8f6c\u5230\u6807\u7b7e <code>loop_start:</code> \u5904\uff0c\u4ece\u800c\u521b\u5efa\u4e86\u4e00\u4e2a\u7b80\u5355\u7684\u5faa\u73af\u3002\u7136\u800c\uff0c\u8bf7\u6ce8\u610f\uff0c\u8fd9\u6837\u7684\u5199\u6cd5\u5bb9\u6613\u5bfc\u81f4\u4ee3\u7801\u6df7\u4e71\uff0c\u5e76\u4e14\u4e0d\u6613\u7ef4\u62a4\u3002</p> <p>\u5927\u591a\u6570\u7f16\u7a0b\u8bed\u8a00\u63d0\u4f9b\u4e86\u66f4\u597d\u7684\u63a7\u5236\u6d41\u7ed3\u6784\uff0c\u4f7f\u5f97\u4ee3\u7801\u66f4\u6613\u8bfb\u61c2\u548c\u7ef4\u62a4\u3002\u5982\u679c\u4f60\u9047\u5230\u9700\u8981\u4f7f\u7528 \"goto\" \u7684\u60c5\u51b5\uff0c\u5efa\u8bae\u8003\u8651\u91cd\u6784\u4ee3\u7801\u4ee5\u4f7f\u7528\u66f4\u5408\u9002\u7684\u63a7\u5236\u7ed3\u6784\u3002</p>"}, {"location": "yuyan/C/%E6%8C%87%E9%92%88/", "title": "8 \u6307\u9488", "text": "<p>\u592a\u96be\u4e86\uff0c\u6211\u4e0d\u4f1a\uff08bushi</p>"}, {"location": "yuyan/C/%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E3%80%81%E8%BF%90%E7%AE%97%E7%AC%A6%E5%92%8C%E8%A1%A8%E8%BE%BE%E5%BC%8F/", "title": "2.1 \u5e38\u91cf\u4e0e\u53d8\u91cf", "text": ""}, {"location": "yuyan/C/%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E3%80%81%E8%BF%90%E7%AE%97%E7%AC%A6%E5%92%8C%E8%A1%A8%E8%BE%BE%E5%BC%8F/#211", "title": "2.1.1", "text": "<ul> <li>\u6d6e\u70b9\u5e38\u6570\u540e\u7f00\uff1af\u6216F\uff08\u5355\u7cbe\u5ea6\u6d6e\u70b9\u6570\uff09\u3001l\u6216L\uff08\u957f\u53cc\u7cbe\u5ea6\u6d6e\u70b9\u6570\uff09      \u6d6e\u70b9\u578b\u5e38\u6570\u603b\u662f\u6709\u7b26\u53f7\u7684\uff0c\u6545\u6ca1\u6709u\u548cU</li> <li>\u6574\u578b\u5e38\u6570\u540e\u7f00\uff1al\u6216L\uff0cu\u6216U\uff0cL\u548cU\u7684\u7ec4\u5408</li> </ul>"}, {"location": "yuyan/C/%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E3%80%81%E8%BF%90%E7%AE%97%E7%AC%A6%E5%92%8C%E8%A1%A8%E8%BE%BE%E5%BC%8F/#212", "title": "2.1.2 \u5b57\u7b26\u578b\u5e38\u91cf", "text": "<ul> <li>\u666e\u901a\u5b57\u7b26</li> <li>\u8f6c\u4e49\u5b57\u7b26</li> </ul> \u8f6c\u4e49\u5b57\u7b26 \u542b\u4e49 \\o NULL \\n \u6362\u884c \\r \u56de\u8f66 \\t \u5236\u8868 \\a \u54cd\u94c3 \\b \u9000\u683c \\f \u6362\u9875 \\' \u5355\u5f15\u53f7 \\\" \u53cc\u5f15\u53f7 \\\\ \u53cd\u659c\u6760 \\ddd \u4e09\u4f4d8\u8fdb\u5236 \\xhh \u4e8c\u4f4d16\u8fdb\u5236 <p>ddd\u548chh\u5206\u522b\u4e3a8\u8fdb\u5236\u548c16\u8fdb\u5236\u7684ASCII\u7801</p> <p>C\u8bed\u8a00\u5141\u8bb8\u5bf9\u6574\u578b\u53d8\u91cf\u8d4b\u4e88\u5b57\u7b26\u503c\uff0c\u4e5f\u5141\u8bb8\u5bf9\u5b57\u7b26\u53d8\u91cf\u8d4b\u4e88\u6574\u578b\u503c</p> <p>\u8868\u793a\u5341\u8fdb\u5236\u6570 -3 \u7684\u4e8c\u8fdb\u5236\u5f62\u5f0f\u4f7f\u75288\u4f4d\u7684\u8865\u7801\u8868\u793a\u3002\u9996\u5148\uff0c\u627e\u52303\u7684\u4e8c\u8fdb\u5236\u8868\u793a\u5f62\u5f0f\uff0c\u7136\u540e\u53d6\u53cd\uff0c\u5e76\u5728\u7ed3\u679c\u4e0a\u52a01\u30023 \u7684\u4e8c\u8fdb\u5236\u8868\u793a\u662f <code>0000 0011</code>\u3002\u53d6\u53cd\u5f97\u5230 <code>1111 1100</code>\uff0c\u7136\u540e\u52a01\u5f97\u5230\u8865\u7801\u5f62\u5f0f\uff1a</p> \\[1111 \\ 1100 + 1 = 1111 \\ 1101\\] <p>\u56e0\u6b64\uff0c-3 \u7684\u4e8c\u8fdb\u5236\u8868\u793a\u662f <code>1111 1101</code>\u3002</p> \u7c7b\u578b \u5185\u5b58 \u8303\u56f4 short int 2 -32768~32767 unsign short 2 0~65535 int 4 -......~...... long int 4 -......~......"}, {"location": "yuyan/C/%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E3%80%81%E8%BF%90%E7%AE%97%E7%AC%A6%E5%92%8C%E8%A1%A8%E8%BE%BE%E5%BC%8F/#22", "title": "2.2 \u8fd0\u7b97\u7b26\u53ca\u8868\u8fbe\u5f0f", "text": "<p>\u8fd0\u7b97\u7b26\u53ca\u4f18\u5148\u7ea7</p> <p>\u5728C\u8bed\u8a00\u4e2d\uff0c\u5982\u679c\u4e00\u4e2a\u64cd\u4f5c\u6570\u662f\u6574\u578b\uff0c\u800c\u53e6\u4e00\u4e2a\u662f\u6d6e\u70b9\u578b\uff0c\u901a\u5e38\u4f1a\u53d1\u751f\u9690\u5f0f\u7684\u7c7b\u578b\u8f6c\u6362\uff0c\u5373\u6574\u578b\u4f1a\u88ab\u8f6c\u6362\u4e3a\u6d6e\u70b9\u578b\uff0c\u7136\u540e\u6267\u884c\u6d6e\u70b9\u6570\u9664\u6cd5\u3002\u8fd9\u662f\u56e0\u4e3a\u6d6e\u70b9\u6570\u7684\u8868\u793a\u8303\u56f4\u66f4\u5e7f\uff0c\u80fd\u591f\u5bb9\u7eb3\u6574\u6570\u548c\u5c0f\u6570\u3002</p> C<pre><code>#include &lt;stdio.h&gt;\n\nint main() {\n    int numerator = 7;\n    double denominator = 3.0;\n\n    double result = numerator / denominator;  // \u6574\u578b\u88ab\u8f6c\u6362\u4e3a\u6d6e\u70b9\u578b\uff0c\u6267\u884c\u6d6e\u70b9\u6570\u9664\u6cd5\n    printf(\"%f\\n\", result);  // \u8f93\u51fa 2.333333\n\n    return 0;\n}\n</code></pre> <p>\u5728\u4e0a\u9762\u7684\u4f8b\u5b50\u4e2d\uff0c<code>numerator</code>\u662f\u6574\u578b\uff0c<code>denominator</code>\u662f\u6d6e\u70b9\u578b\uff0c\u7136\u540e\u5b83\u4eec\u76f8\u9664\u7684\u7ed3\u679c\u662f\u4e00\u4e2a\u6d6e\u70b9\u6570\u3002\u5728\u8fdb\u884c\u9664\u6cd5\u8fd0\u7b97\u65f6\uff0c\u6574\u578b\u7684\u64cd\u4f5c\u6570\u4f1a\u88ab\u81ea\u52a8\u8f6c\u6362\u4e3a\u6d6e\u70b9\u578b\uff0c\u4ee5\u4fdd\u7559\u5c0f\u6570\u90e8\u5206\u3002</p> <p>\u5982\u679c\u4f60\u60f3\u660e\u786e\u6307\u5b9a\u6574\u6570\u9664\u6cd5\uff0c\u53ef\u4ee5\u5c06\u5176\u4e2d\u4e00\u4e2a\u64cd\u4f5c\u6570\u5f3a\u5236\u8f6c\u6362\u4e3a\u6574\u578b\u3002\u4f8b\u5982\uff1a</p> C<pre><code>#include &lt;stdio.h&gt;\n\nint main() {\n    int numerator = 7;\n    double denominator = 3.0;\n\n    double result = (double)numerator / denominator;  // \u5f3a\u5236\u5c06\u6574\u578b\u8f6c\u6362\u4e3a\u6d6e\u70b9\u578b\uff0c\u6267\u884c\u6d6e\u70b9\u6570\u9664\u6cd5\n    printf(\"%f\\n\", result);  // \u8f93\u51fa 2.333333\n\n    return 0;\n}\n</code></pre> <p>\u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c\u901a\u8fc7\u4f7f\u7528<code>(double)</code>\u5c06<code>numerator</code>\u5f3a\u5236\u8f6c\u6362\u4e3a<code>double</code>\u7c7b\u578b\uff0c\u786e\u4fdd\u4e86\u6267\u884c\u7684\u662f\u6d6e\u70b9\u6570\u9664\u6cd5\u3002</p> <p>\u91cd\u70b9\uff1ai++\u548c++i \u5728C\u8bed\u8a00\u4e2d\uff0c<code>i++</code> \u548c <code>++i</code> \u90fd\u662f\u7528\u6765\u9012\u589e\u53d8\u91cf <code>i</code> \u7684\u64cd\u4f5c\u7b26\uff0c\u4f46\u5b83\u4eec\u6709\u4e00\u4e9b\u5173\u952e\u7684\u533a\u522b\u3002</p> <ol> <li> <p><code>i++</code>\uff08\u540e\u7f00\u9012\u589e\uff09\uff1a \u8fd9\u4e2a\u64cd\u4f5c\u7b26\u4f1a\u5148\u8fd4\u56de <code>i</code> \u7684\u5f53\u524d\u503c\uff0c\u7136\u540e\u518d\u5c06 <code>i</code> \u7684\u503c\u52a0 1\u3002\u6240\u4ee5\uff0c\u5982\u679c\u4f60\u5199 <code>y = i++</code>\uff0c<code>y</code> \u5c06\u4f1a\u5f97\u5230 <code>i</code> \u7684\u5f53\u524d\u503c\uff0c\u7136\u540e <code>i</code> \u7684\u503c\u4f1a\u9012\u589e\u3002</p> C<pre><code>#include &lt;stdio.h&gt;\n\nint main() {\n    int i = 5;\n    int y = i++;\n\n    printf(\"i: %d\\n\", i);  // \u8f93\u51fa\uff1a6\n    printf(\"y: %d\\n\", y);  // \u8f93\u51fa\uff1a5\n\n    return 0;\n}\n</code></pre> </li> <li> <p><code>++i</code>\uff08\u524d\u7f00\u9012\u589e\uff09\uff1a \u8fd9\u4e2a\u64cd\u4f5c\u7b26\u4f1a\u5148\u5c06 <code>i</code> \u7684\u503c\u52a0 1\uff0c\u7136\u540e\u518d\u8fd4\u56de <code>i</code> \u7684\u65b0\u503c\u3002\u6240\u4ee5\uff0c\u5982\u679c\u4f60\u5199 <code>y = ++i</code>\uff0c<code>y</code> \u5c06\u4f1a\u5f97\u5230 <code>i</code> \u7684\u9012\u589e\u540e\u7684\u65b0\u503c\u3002</p> C<pre><code>#include &lt;stdio.h&gt;\n\nint main() {\n    int i = 5;\n    int y = ++i;\n\n    printf(\"i: %d\\n\", i);  // \u8f93\u51fa\uff1a6\n    printf(\"y: %d\\n\", y);  // \u8f93\u51fa\uff1a6\n\n    return 0;\n}\n</code></pre> </li> </ol> <p>\u5728\u5927\u591a\u6570\u60c5\u51b5\u4e0b\uff0c\u4e24\u8005\u7684\u6548\u679c\u662f\u76f8\u540c\u7684\uff0c\u4f46\u5728\u67d0\u4e9b\u7279\u5b9a\u7684\u573a\u666f\u4e2d\uff0c\u9009\u62e9\u4f7f\u7528\u5176\u4e2d\u4e4b\u4e00\u53ef\u80fd\u66f4\u5408\u9002\u3002\u4f8b\u5982\uff0c\u5728\u8868\u8fbe\u5f0f\u4e2d\uff0c<code>++i</code> \u7684\u6548\u7387\u53ef\u80fd\u6bd4 <code>i++</code> \u9ad8\uff0c\u56e0\u4e3a\u5b83\u4e0d\u9700\u8981\u4fdd\u5b58 <code>i</code> \u7684\u5f53\u524d\u503c\u3002</p> <p>\u5728\u66f4\u590d\u6742\u7684\u60c5\u51b5\u4e0b\uff0c\u4e86\u89e3\u9012\u589e\u64cd\u4f5c\u7b26\u7684\u524d\u7f00\u548c\u540e\u7f00\u5f62\u5f0f\u4e4b\u95f4\u7684\u533a\u522b\u662f\u5f88\u91cd\u8981\u7684\u3002\u4ee5\u4e0b\u662f\u4e00\u4e9b\u53ef\u80fd\u66f4\u5177\u6311\u6218\u6027\u7684\u793a\u4f8b\uff0c\u4ee5\u5e2e\u52a9\u8bf4\u660e\u8fd9\u4e24\u8005\u4e4b\u95f4\u7684\u533a\u522b\uff1a</p> <ol> <li> <p>\u5728\u8868\u8fbe\u5f0f\u4e2d\u4f7f\u7528\uff1a</p> C<pre><code>#include &lt;stdio.h&gt;\n\nint main() {\n    int i = 5;\n    int x = 2 * i++;  // \u540e\u7f00\u9012\u589e\n\n    printf(\"i: %d\\n\", i);  // \u8f93\u51fa\uff1a6\n    printf(\"x: %d\\n\", x);  // \u8f93\u51fa\uff1a10\n\n    return 0;\n}\n</code></pre> <p>\u4e0a\u8ff0\u793a\u4f8b\u4e2d\uff0c<code>x = 2 * i++</code> \u8868\u793a\u5148\u4f7f\u7528 <code>i</code> \u7684\u5f53\u524d\u503c\u8ba1\u7b97 <code>2 * i</code>\uff0c\u7136\u540e\u518d\u9012\u589e <code>i</code> \u7684\u503c\u3002</p> </li> <li> <p>\u5faa\u73af\u4e2d\u7684\u4f7f\u7528\uff1a</p> C<pre><code>#include &lt;stdio.h&gt;\n\nint main() {\n    int i;\n\n    printf(\"Postfix increment:\\n\");\n    for (i = 0; i &lt; 5; i++) {\n        printf(\"%d \", i);\n    }\n    printf(\"\\n\");\n\n    printf(\"Prefix increment:\\n\");\n    for (i = 0; i &lt; 5; ++i) {\n        printf(\"%d \", i);\n    }\n    printf(\"\\n\");\n\n    return 0;\n}\n</code></pre> <p>\u5728\u5faa\u73af\u4e2d\u4f7f\u7528\u65f6\uff0c<code>i++</code> \u548c <code>++i</code> \u5728\u6548\u679c\u4e0a\u662f\u76f8\u540c\u7684\uff0c\u90fd\u4f1a\u9012\u589e <code>i</code> \u7684\u503c\uff0c\u4f46\u524d\u7f00\u9012\u589e\u53ef\u80fd\u5728\u67d0\u4e9b\u60c5\u51b5\u4e0b\u66f4\u53d7\u6b22\u8fce\uff0c\u56e0\u4e3a\u5b83\u4e0d\u9700\u8981\u7ef4\u62a4 <code>i</code> \u7684\u5f53\u524d\u503c\u3002</p> </li> </ol> <p>\u9017\u53f7\u8fd0\u7b97\u7b26 \u4ece\u5de6\u5230\u53f3\u6267\u884c\uff0c\u6700\u540e\u8fd4\u56de\u6700\u540e\u8868\u8fbe\u5f0f\u7684\u503c\u3002</p>"}, {"location": "yuyan/C/%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E3%80%81%E8%BF%90%E7%AE%97%E7%AC%A6%E5%92%8C%E8%A1%A8%E8%BE%BE%E5%BC%8F/#23", "title": "2.3 \u4f4d\u8fd0\u7b97", "text": "\u64cd\u4f5c \u7b26\u53f7 \u89e3\u91ca \u793a\u4f8b \u4e0e\u8fd0\u7b97 &amp; \u5bf9\u5e94\u4f4d\u4e0a\u7684\u4e24\u4e2a\u4e8c\u8fdb\u5236\u6570\u90fd\u4e3a1\u65f6\uff0c\u7ed3\u679c\u7684\u76f8\u5e94\u4f4d\u4e3a1\uff0c\u5426\u5219\u4e3a0\u3002 1010 &amp; 1100 = 1000 \u6216\u8fd0\u7b97 | \u5bf9\u5e94\u4f4d\u4e0a\u7684\u4e24\u4e2a\u4e8c\u8fdb\u5236\u6570\u6709\u4e00\u4e2a\u4e3a1\u65f6\uff0c\u7ed3\u679c\u7684\u76f8\u5e94\u4f4d\u4e3a1\u3002 1010 | 1100 = 1110 \u5f02\u6216\u8fd0\u7b97 ^ \u5bf9\u5e94\u4f4d\u4e0a\u7684\u4e24\u4e2a\u4e8c\u8fdb\u5236\u6570\u4e0d\u540c\u65f6\uff0c\u7ed3\u679c\u7684\u76f8\u5e94\u4f4d\u4e3a1\uff0c\u76f8\u540c\u65f6\u4e3a0\u3002 1010 ^ 1100 = 0110 \u53d6\u53cd\u8fd0\u7b97 ~ \u5c06\u6bcf\u4e2a\u4f4d\u4e0a\u76840\u53d8\u4e3a1\uff0c1\u53d8\u4e3a0\u3002 ~1010 = 0101 \u5de6\u79fb\u8fd0\u7b97 &lt;&lt; \u5c06\u4e8c\u8fdb\u5236\u6570\u7684\u6240\u6709\u4f4d\u5411\u5de6\u79fb\u52a8n\u4f4d\uff0c\u53f3\u4fa7\u75280\u586b\u5145\u3002 1010 &lt;&lt; 2 = 00101000 \u53f3\u79fb\u8fd0\u7b97 &gt;&gt; \u5c06\u4e8c\u8fdb\u5236\u6570\u7684\u6240\u6709\u4f4d\u5411\u53f3\u79fb\u52a8n\u4f4d\uff0c\u5de6\u4fa7\u7528\u7b26\u53f7\u4f4d\u62160\u586b\u5145\u3002 1010 &gt;&gt; 2 = 00001010 <p>&lt;&lt; \u5411\u5de6n\u4f4d\uff0c\u5219\u4e582^n\u3002</p> <p>\u82e5\u77e5\u9053\u8d1f\u6570\u7684\u8865\u7801\uff0c\u5219\u9664\u7b26\u53f7\u4f4d\u53d6\u53cd\u52a0\u4e00\uff08\u518d\u52a0\u8d1f\u53f7\uff09\u3002</p> <p>\u5b83\u7528\u4e8e\u5c06\u4e00\u4e2a\u4e8c\u8fdb\u5236\u6570\u7684\u5404\u4f4d\u5411\u53f3\u79fb\u52a8\u6307\u5b9a\u7684\u4f4d\u6570\u3002\u53f3\u79fb\u8fd0\u7b97\u4f1a\u7528\u7b26\u53f7\u4f4d\u586b\u5145\u5de6\u4fa7\u7684\u7a7a\u4f4d\uff08\u5bf9\u4e8e\u6709\u7b26\u53f7\u6574\u6570\uff09\uff0c\u6216\u8005\u75280\u586b\u5145\uff08\u5bf9\u4e8e\u65e0\u7b26\u53f7\u6574\u6570\uff09\u3002</p> <p>![[Pasted image 20231226220150.jpg]]</p>"}, {"location": "yuyan/C/%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E3%80%81%E8%BF%90%E7%AE%97%E7%AC%A6%E5%92%8C%E8%A1%A8%E8%BE%BE%E5%BC%8F/#_1", "title": "\u505a\u9898\u603b\u7ed3", "text": "<p>%\u8fd0\u7b97\u7b26\u7684\u64cd\u4f5c\u5bf9\u8c61\u4e3a\u6574\u6570\uff0c\u8d4b\u503c\u8fd0\u7b97\u5de6\u8fb9\u662f\u53d8\u91cf\uff0c\u53f3\u8fb9\u4e3a\u8868\u8fbe\u5f0f</p> <p>\u5b8f\u5b9a\u4e49\u4e2d\u4e3a\u5e38\u91cf\uff0c\u4e0d\u80fd\u8fdb\u884c\u81ea\u589e\u64cd\u4f5c C<pre><code>#define d 2\nd++; //\u9519\u8bef\u7684\n</code></pre></p> <p>\u5173\u4e8ee\u7684\u591a\u5c11\u6b21\u65b9\uff0c\u9636\u6570\u5fc5\u987b\u4e3a\u4e00\u5230\u4e09\u4f4d\u65e0\u7b26\u53f7\u5e38\u91cf\uff0c\u4e0d\u80fd\u4e3a\u7a7a\uff0c\u4e14e/E\u524d\u9762\u7684\u90e8\u5206\u4e0d\u53ef\u5b8c\u5168\u7701\u53bb\u3002</p> <p>y=double(i)\u662f\u9519\u8bef\u7684 y=(double)i\u662f\u6b63\u786e\u7684</p>"}, {"location": "yuyan/C/%E6%95%B0%E7%BB%84/", "title": "5.1 \u6392\u5e8f", "text": ""}, {"location": "yuyan/C/%E6%95%B0%E7%BB%84/#511", "title": "5.1.1 \u9009\u62e9\u6392\u5e8f", "text": "<p>\u5f53\u6211\u4eec\u8c08\u8bba\u9009\u62e9\u6392\u5e8f\uff08Selection Sort\uff09\u65f6\uff0c\u8fd9\u662f\u4e00\u79cd\u7b80\u5355\u7684\u6392\u5e8f\u7b97\u6cd5\u3002\u5b83\u7684\u57fa\u672c\u601d\u60f3\u662f\u5728\u672a\u6392\u5e8f\u7684\u90e8\u5206\u4e2d\u9009\u62e9\u6700\u5c0f\uff08\u6216\u6700\u5927\uff09\u7684\u5143\u7d20\uff0c\u7136\u540e\u5c06\u5176\u4e0e\u672a\u6392\u5e8f\u90e8\u5206\u7684\u7b2c\u4e00\u4e2a\u5143\u7d20\u4ea4\u6362\u3002\u8fd9\u4e2a\u8fc7\u7a0b\u4e0d\u65ad\u91cd\u590d\uff0c\u76f4\u5230\u6574\u4e2a\u6570\u7ec4\u6392\u5e8f\u5b8c\u6210\u3002</p> <p>\u4e0b\u9762\u662f\u4e00\u4e2a\u4f7f\u7528C\u8bed\u8a00\u5b9e\u73b0\u9009\u62e9\u6392\u5e8f\u7684\u7b80\u5355\u4f8b\u5b50\uff1a</p> C<pre><code>#include &lt;stdio.h&gt;\n\n// \u9009\u62e9\u6392\u5e8f\u51fd\u6570\nvoid selectionSort(int arr[], int n) {\n    int i, j, minIndex, temp;\n\n    for (i = 0; i &lt; n - 1; i++) {\n        // \u5047\u8bbe\u5f53\u524d\u4f4d\u7f6e\u7684\u5143\u7d20\u662f\u6700\u5c0f\u7684\n        minIndex = i;\n\n        // \u5728\u672a\u6392\u5e8f\u7684\u90e8\u5206\u4e2d\u627e\u5230\u6700\u5c0f\u7684\u5143\u7d20\u7684\u7d22\u5f15\n        for (j = i + 1; j &lt; n; j++) {\n            if (arr[j] &lt; arr[minIndex]) {\n                minIndex = j;\n            }\n        }\n\n        // \u5c06\u6700\u5c0f\u7684\u5143\u7d20\u4e0e\u5f53\u524d\u4f4d\u7f6e\u7684\u5143\u7d20\u4ea4\u6362\n        temp = arr[i];\n        arr[i] = arr[minIndex];\n        arr[minIndex] = temp;\n    }\n}\n\n// \u6253\u5370\u6570\u7ec4\u5143\u7d20\u7684\u51fd\u6570\nvoid printArray(int arr[], int size) {\n    int i;\n    for (i = 0; i &lt; size; i++)\n        printf(\"%d \", arr[i]);\n    printf(\"\\n\");\n}\n\nint main() {\n    int arr[] = {64, 25, 12, 22, 11};\n    int n = sizeof(arr) / sizeof(arr[0]);\n\n    printf(\"\u539f\u59cb\u6570\u7ec4: \\n\");\n    printArray(arr, n);\n\n    // \u5e94\u7528\u9009\u62e9\u6392\u5e8f\n    selectionSort(arr, n);\n\n    printf(\"\u6392\u5e8f\u540e\u7684\u6570\u7ec4: \\n\");\n    printArray(arr, n);\n\n    return 0;\n}\n</code></pre> <p>\u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c<code>selectionSort</code> \u51fd\u6570\u5b9e\u73b0\u4e86\u9009\u62e9\u6392\u5e8f\u7b97\u6cd5\uff0c\u800c <code>printArray</code> \u51fd\u6570\u7528\u4e8e\u6253\u5370\u6570\u7ec4\u5143\u7d20\u3002\u5728 <code>main</code> \u51fd\u6570\u4e2d\uff0c\u6211\u4eec\u5b9a\u4e49\u4e86\u4e00\u4e2a\u6570\u7ec4\uff0c\u5bf9\u5176\u8fdb\u884c\u9009\u62e9\u6392\u5e8f\uff0c\u5e76\u8f93\u51fa\u6392\u5e8f\u540e\u7684\u7ed3\u679c\u3002</p> <p>\u8bf7\u6ce8\u610f\uff0c\u9009\u62e9\u6392\u5e8f\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3aO(n^2)\uff0c\u56e0\u6b64\u5bf9\u4e8e\u5927\u578b\u6570\u636e\u96c6\u53ef\u80fd\u4e0d\u662f\u6700\u4f18\u9009\u62e9\u3002</p>"}, {"location": "yuyan/C/%E6%95%B0%E7%BB%84/#512", "title": "5.1.2 \u5192\u6ce1\u6392\u5e8f", "text": "<p>\u5192\u6ce1\u6392\u5e8f\uff08Bubble Sort\uff09\u662f\u53e6\u4e00\u79cd\u7b80\u5355\u7684\u6392\u5e8f\u7b97\u6cd5\u3002\u5b83\u7684\u57fa\u672c\u601d\u60f3\u662f\u901a\u8fc7\u591a\u6b21\u904d\u5386\u6570\u7ec4\uff0c\u6bd4\u8f83\u76f8\u90bb\u7684\u4e24\u4e2a\u5143\u7d20\uff0c\u5982\u679c\u5b83\u4eec\u7684\u987a\u5e8f\u4e0d\u6b63\u786e\u5c31\u4ea4\u6362\u5b83\u4eec\uff0c\u76f4\u5230\u6574\u4e2a\u6570\u7ec4\u6392\u5e8f\u5b8c\u6210\u3002</p> <p>\u4ee5\u4e0b\u662f\u4f7f\u7528C\u8bed\u8a00\u5b9e\u73b0\u5192\u6ce1\u6392\u5e8f\u7684\u7b80\u5355\u4f8b\u5b50\uff1a</p> C<pre><code>#include &lt;stdio.h&gt;\n\n// \u5192\u6ce1\u6392\u5e8f\u51fd\u6570\nvoid bubbleSort(int arr[], int n) {\n    int i, j, temp;\n    for (i = 0; i &lt; n-1; i++) {\n        for (j = 0; j &lt; n-i-1; j++) {\n            // \u5982\u679c\u76f8\u90bb\u5143\u7d20\u7684\u987a\u5e8f\u4e0d\u6b63\u786e\uff0c\u4ea4\u6362\u5b83\u4eec\n            if (arr[j] &gt; arr[j+1]) {\n                temp = arr[j];\n                arr[j] = arr[j+1];\n                arr[j+1] = temp;\n            }\n        }\n    }\n}\n\n// \u6253\u5370\u6570\u7ec4\u5143\u7d20\u7684\u51fd\u6570\nvoid printArray(int arr[], int size) {\n    int i;\n    for (i = 0; i &lt; size; i++)\n        printf(\"%d \", arr[i]);\n    printf(\"\\n\");\n}\n\nint main() {\n    int arr[] = {64, 25, 12, 22, 11};\n    int n = sizeof(arr) / sizeof(arr[0]);\n\n    printf(\"\u539f\u59cb\u6570\u7ec4: \\n\");\n    printArray(arr, n);\n\n    // \u5e94\u7528\u5192\u6ce1\u6392\u5e8f\n    bubbleSort(arr, n);\n\n    printf(\"\u6392\u5e8f\u540e\u7684\u6570\u7ec4: \\n\");\n    printArray(arr, n);\n\n    return 0;\n}\n</code></pre> <p>\u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c<code>bubbleSort</code> \u51fd\u6570\u5b9e\u73b0\u4e86\u5192\u6ce1\u6392\u5e8f\u7b97\u6cd5\uff0c\u800c <code>printArray</code> \u51fd\u6570\u7528\u4e8e\u6253\u5370\u6570\u7ec4\u5143\u7d20\u3002\u5728 <code>main</code> \u51fd\u6570\u4e2d\uff0c\u6211\u4eec\u5b9a\u4e49\u4e86\u4e00\u4e2a\u6570\u7ec4\uff0c\u5bf9\u5176\u8fdb\u884c\u5192\u6ce1\u6392\u5e8f\uff0c\u5e76\u8f93\u51fa\u6392\u5e8f\u540e\u7684\u7ed3\u679c\u3002</p> <p>\u5192\u6ce1\u6392\u5e8f\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e5f\u4e3aO(n^2)\uff0c\u56e0\u6b64\u5bf9\u4e8e\u5927\u578b\u6570\u636e\u96c6\u540c\u6837\u4e0d\u662f\u6700\u4f18\u9009\u62e9\u3002\u7136\u800c\uff0c\u7531\u4e8e\u5176\u7b80\u5355\u6027\uff0c\u5192\u6ce1\u6392\u5e8f\u5728\u67d0\u4e9b\u7279\u5b9a\u60c5\u51b5\u4e0b\u53ef\u80fd\u662f\u6709\u7528\u7684\u3002</p>"}, {"location": "yuyan/C/%E6%95%B0%E7%BB%84/#513", "title": "5.1.3 \u5e0c\u5c14\u6392\u5e8f", "text": "<p>\u5e0c\u5c14\u6392\u5e8f\uff08Shell Sort\uff09\u662f\u63d2\u5165\u6392\u5e8f\u7684\u4e00\u79cd\u6539\u8fdb\u7248\u672c\uff0c\u4e5f\u79f0\u4e3a\u7f29\u5c0f\u589e\u91cf\u6392\u5e8f\u3002\u5b83\u901a\u8fc7\u5c06\u6574\u4e2a\u6570\u7ec4\u5206\u5272\u6210\u82e5\u5e72\u4e2a\u5b50\u5e8f\u5217\uff0c\u7136\u540e\u5bf9\u6bcf\u4e2a\u5b50\u5e8f\u5217\u5206\u522b\u8fdb\u884c\u63d2\u5165\u6392\u5e8f\uff0c\u6700\u7ec8\u5408\u5e76\u8fd9\u4e9b\u5b50\u5e8f\u5217\u3002</p> <p>\u4ee5\u4e0b\u662f\u4f7f\u7528C\u8bed\u8a00\u5b9e\u73b0\u5e0c\u5c14\u6392\u5e8f\u7684\u7b80\u5355\u4f8b\u5b50\uff1a</p> C<pre><code>#include &lt;stdio.h&gt;\n\n// \u5e0c\u5c14\u6392\u5e8f\u51fd\u6570\nvoid shellSort(int arr[], int n) {\n    int i, j, temp;\n    // \u9009\u62e9\u589e\u91cf\u5e8f\u5217\uff0c\u8fd9\u91cc\u4f7f\u7528\u5e0c\u5c14\u5efa\u8bae\u7684\u5e8f\u5217\n    for (int gap = n/2; gap &gt; 0; gap /= 2) {\n        for (i = gap; i &lt; n; i++) {\n            temp = arr[i];\n            // \u5bf9\u5b50\u5e8f\u5217\u8fdb\u884c\u63d2\u5165\u6392\u5e8f\n            for (j = i; j &gt;= gap &amp;&amp; arr[j - gap] &gt; temp; j -= gap) {\n                arr[j] = arr[j - gap];\n            }\n            arr[j] = temp;\n        }\n    }\n}\n\n// \u6253\u5370\u6570\u7ec4\u5143\u7d20\u7684\u51fd\u6570\nvoid printArray(int arr[], int size) {\n    int i;\n    for (i = 0; i &lt; size; i++)\n        printf(\"%d \", arr[i]);\n    printf(\"\\n\");\n}\n\nint main() {\n    int arr[] = {64, 25, 12, 22, 11};\n    int n = sizeof(arr) / sizeof(arr[0]);\n\n    printf(\"\u539f\u59cb\u6570\u7ec4: \\n\");\n    printArray(arr, n);\n\n    // \u5e94\u7528\u5e0c\u5c14\u6392\u5e8f\n    shellSort(arr, n);\n\n    printf(\"\u6392\u5e8f\u540e\u7684\u6570\u7ec4: \\n\");\n    printArray(arr, n);\n\n    return 0;\n}\n</code></pre> <p>\u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c<code>shellSort</code> \u51fd\u6570\u5b9e\u73b0\u4e86\u5e0c\u5c14\u6392\u5e8f\u7b97\u6cd5\uff0c\u800c <code>printArray</code> \u51fd\u6570\u7528\u4e8e\u6253\u5370\u6570\u7ec4\u5143\u7d20\u3002\u5728 <code>main</code> \u51fd\u6570\u4e2d\uff0c\u6211\u4eec\u5b9a\u4e49\u4e86\u4e00\u4e2a\u6570\u7ec4\uff0c\u5bf9\u5176\u8fdb\u884c\u5e0c\u5c14\u6392\u5e8f\uff0c\u5e76\u8f93\u51fa\u6392\u5e8f\u540e\u7684\u7ed3\u679c\u3002</p> <p>\u5e0c\u5c14\u6392\u5e8f\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u53d6\u51b3\u4e8e\u6240\u9009\u62e9\u7684\u589e\u91cf\u5e8f\u5217\uff0c\u4f46\u901a\u5e38\u5b83\u5728\u5e73\u5747\u60c5\u51b5\u4e0b\u7684\u6027\u80fd\u8981\u4f18\u4e8e\u63d2\u5165\u6392\u5e8f\u548c\u5192\u6ce1\u6392\u5e8f\u3002\u5e0c\u5c14\u6392\u5e8f\u662f\u4e00\u79cd\u4e0d\u7a33\u5b9a\u7684\u6392\u5e8f\u7b97\u6cd5\u3002</p>"}, {"location": "yuyan/C/%E6%95%B0%E7%BB%84/#514", "title": "5.1.4 \u5feb\u901f\u6392\u5e8f", "text": "<p>\u5feb\u901f\u6392\u5e8f\uff08Quick Sort\uff09\u662f\u4e00\u79cd\u5206\u6cbb\u7b97\u6cd5\uff0c\u5b83\u901a\u8fc7\u9009\u62e9\u4e00\u4e2a\u57fa\u51c6\u5143\u7d20\u5c06\u6570\u7ec4\u5206\u6210\u4e24\u4e2a\u5b50\u6570\u7ec4\uff0c\u7136\u540e\u9012\u5f52\u5730\u5bf9\u5b50\u6570\u7ec4\u8fdb\u884c\u6392\u5e8f\u3002\u5feb\u901f\u6392\u5e8f\u7684\u57fa\u672c\u601d\u60f3\u662f\u5728\u6570\u7ec4\u4e2d\u9009\u62e9\u4e00\u4e2a\u5143\u7d20\u4f5c\u4e3a\u57fa\u51c6\uff0c\u5c06\u5c0f\u4e8e\u57fa\u51c6\u7684\u5143\u7d20\u79fb\u52a8\u5230\u57fa\u51c6\u7684\u5de6\u8fb9\uff0c\u5c06\u5927\u4e8e\u57fa\u51c6\u7684\u5143\u7d20\u79fb\u52a8\u5230\u57fa\u51c6\u7684\u53f3\u8fb9\uff0c\u7136\u540e\u5bf9\u5de6\u53f3\u4e24\u4e2a\u5b50\u6570\u7ec4\u91cd\u590d\u8fd9\u4e2a\u8fc7\u7a0b\u3002</p> <p>\u4ee5\u4e0b\u662f\u4f7f\u7528C\u8bed\u8a00\u5b9e\u73b0\u5feb\u901f\u6392\u5e8f\u7684\u7b80\u5355\u4f8b\u5b50\uff1a</p> C<pre><code>#include &lt;stdio.h&gt;\n\n// \u4ea4\u6362\u4e24\u4e2a\u5143\u7d20\u7684\u51fd\u6570\nvoid swap(int* a, int* b) {\n    int temp = *a;\n    *a = *b;\n    *b = temp;\n}\n\n// \u5c06\u6570\u7ec4\u5206\u533a\uff0c\u5e76\u8fd4\u56de\u57fa\u51c6\u5143\u7d20\u7684\u7d22\u5f15\nint partition(int arr[], int low, int high) {\n    int pivot = arr[high]; // \u9009\u62e9\u6700\u540e\u4e00\u4e2a\u5143\u7d20\u4f5c\u4e3a\u57fa\u51c6\n    int i = (low - 1); // \u521d\u59cb\u5316\u8f83\u5c0f\u5143\u7d20\u7684\u7d22\u5f15\n\n    for (int j = low; j &lt;= high - 1; j++) {\n        // \u5982\u679c\u5f53\u524d\u5143\u7d20\u5c0f\u4e8e\u6216\u7b49\u4e8e\u57fa\u51c6\n        if (arr[j] &lt;= pivot) {\n            i++;\n            // \u4ea4\u6362arr[i]\u548carr[j]\n            swap(&amp;arr[i], &amp;arr[j]);\n        }\n    }\n    // \u4ea4\u6362arr[i+1]\u548carr[high]\uff0c\u5c06\u57fa\u51c6\u5143\u7d20\u653e\u5728\u6b63\u786e\u7684\u4f4d\u7f6e\n    swap(&amp;arr[i + 1], &amp;arr[high]);\n    return (i + 1);\n}\n\n// \u5feb\u901f\u6392\u5e8f\u51fd\u6570\nvoid quickSort(int arr[], int low, int high) {\n    if (low &lt; high) {\n        // \u5bf9\u6570\u7ec4\u8fdb\u884c\u5206\u533a\uff0c\u5e76\u83b7\u53d6\u57fa\u51c6\u5143\u7d20\u7684\u7d22\u5f15\n        int pi = partition(arr, low, high);\n\n        // \u5206\u522b\u5bf9\u5de6\u53f3\u5b50\u6570\u7ec4\u8fdb\u884c\u5feb\u901f\u6392\u5e8f\n        quickSort(arr, low, pi - 1);\n        quickSort(arr, pi + 1, high);\n    }\n}\n\n// \u6253\u5370\u6570\u7ec4\u5143\u7d20\u7684\u51fd\u6570\nvoid printArray(int arr[], int size) {\n    int i;\n    for (i = 0; i &lt; size; i++)\n        printf(\"%d \", arr[i]);\n    printf(\"\\n\");\n}\n\nint main() {\n    int arr[] = {64, 25, 12, 22, 11};\n    int n = sizeof(arr) / sizeof(arr[0]);\n\n    printf(\"\u539f\u59cb\u6570\u7ec4: \\n\");\n    printArray(arr, n);\n\n    // \u5e94\u7528\u5feb\u901f\u6392\u5e8f\n    quickSort(arr, 0, n - 1);\n\n    printf(\"\u6392\u5e8f\u540e\u7684\u6570\u7ec4: \\n\");\n    printArray(arr, n);\n\n    return 0;\n}\n</code></pre> <p>\u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c<code>quickSort</code> \u51fd\u6570\u5b9e\u73b0\u4e86\u5feb\u901f\u6392\u5e8f\u7b97\u6cd5\uff0c\u800c <code>partition</code> \u51fd\u6570\u7528\u4e8e\u5728\u6570\u7ec4\u4e2d\u9009\u62e9\u57fa\u51c6\u5143\u7d20\u5e76\u5c06\u6570\u7ec4\u5206\u533a\u3002\u5728 <code>main</code> \u51fd\u6570\u4e2d\uff0c\u6211\u4eec\u5b9a\u4e49\u4e86\u4e00\u4e2a\u6570\u7ec4\uff0c\u5bf9\u5176\u8fdb\u884c\u5feb\u901f\u6392\u5e8f\uff0c\u5e76\u8f93\u51fa\u6392\u5e8f\u540e\u7684\u7ed3\u679c\u3002</p> <p>\u5feb\u901f\u6392\u5e8f\u7684\u5e73\u5747\u65f6\u95f4\u590d\u6742\u5ea6\u4e3aO(n log n)\uff0c\u5b83\u662f\u4e00\u79cd\u9ad8\u6548\u7684\u6392\u5e8f\u7b97\u6cd5\u3002</p>"}, {"location": "yuyan/C/%E6%95%B0%E7%BB%84/#52", "title": "5.2 \u4e8c\u7ef4\u6570\u7ec4", "text": "<ul> <li>\u5728\u521d\u59cb\u5316\u4e8c\u7ef4\u6570\u7ec4\u65f6\u53ef\u7701\u7565\u7b2c\u4e00\u7ef4\u5927\u5c0f\uff0c\u4f46\u662f\u4e0d\u80fd\u7701\u7565\u7b2c\u4e8c\u7ef4\u5927\u5c0f\u3002</li> </ul>"}, {"location": "yuyan/C/%E6%95%B0%E7%BB%84/#53", "title": "5.3 \u5b57\u7b26\u6570\u7ec4", "text": "<ul> <li>char str[6] = {\"Hello\"} ;</li> </ul> <p>\u5b57\u7b26\u4e32\u4e24\u7aef\u7684\u5927\u62ec\u53f7\u53ef\u4ee5\u7701\u7565\u3002</p> <p>![[Pasted image 20231229193611.png]] \u672c\u8d28\uff1a\u6570\u7ec4\u7b49\u4e8e\u6570\u7ec4</p> C<pre><code>char a[10];\nscanf(\"%c\",&amp;a[i]);\nscanf(\"%s\",a);\n</code></pre> <p>scanf\u9047\u5230\u5236\u8868\u7b26\u3001\u7a7a\u683c\u3001\u6362\u884c\u7b26\u3001EOF\u505c\u6b62\u8bfb\u5165\u3002 gets\u548cputs\u9047\u5230\u6362\u884c\u7b26\u3001EOF\u505c\u6b62\u3002</p>"}, {"location": "yuyan/C/%E6%95%B0%E7%BB%84/#_1", "title": "\u672c\u7ae0\u603b\u7ed3", "text": "<p>C<pre><code>char sp[] = \"\\t\\b\\0123\\n\"\nprintf(\"%d\",strlen(sp));\n</code></pre> \u7b54\u6848\u662f5\u3002 \\t \\b \\012 3 \\n</p>"}, {"location": "yuyan/C/%E6%96%87%E4%BB%B6/", "title": "10.1 \u6587\u4ef6\u7684\u57fa\u7840\u77e5\u8bc6", "text": "<code>mode</code> Access <code>\"r\"</code> \u6253\u5f00\u4ee5\u4fbf\u8bfb\u53d6\u3002 \u5982\u679c\u6587\u4ef6\u4e0d\u5b58\u5728\u6216\u627e\u4e0d\u5230\uff0c<code>fopen</code>\u00a0\u8c03\u7528\u5c06\u5931\u8d25\u3002 <code>\"w\"</code> \u6253\u5f00\u7528\u4e8e\u5199\u5165\u7684\u7a7a\u6587\u4ef6\u3002 \u5982\u679c\u7ed9\u5b9a\u6587\u4ef6\u5b58\u5728\uff0c\u5219\u5176\u5185\u5bb9\u4f1a\u88ab\u9500\u6bc1\u3002 <code>\"a\"</code> \u5728\u6587\u4ef6\u672b\u5c3e\u6253\u5f00\u4ee5\u8fdb\u884c\u5199\u5165\uff08\u8ffd\u52a0\uff09\uff0c\u5728\u65b0\u6570\u636e\u5199\u5165\u5230\u6587\u4ef6\u4e4b\u524d\u4e0d\u79fb\u9664\u6587\u4ef6\u672b\u5c3e (EOF) \u6807\u8bb0\u3002 \u5982\u679c\u6587\u4ef6\u4e0d\u5b58\u5728\uff0c\u5219\u521b\u5efa\u6587\u4ef6\u3002 <code>\"r+\"</code> \u6253\u5f00\u4ee5\u4fbf\u8bfb\u53d6\u548c\u5199\u5165\u3002 \u6587\u4ef6\u5fc5\u987b\u5b58\u5728\u3002 <code>\"w+\"</code> \u6253\u5f00\u7528\u4e8e\u8bfb\u53d6\u548c\u5199\u5165\u7684\u7a7a\u6587\u4ef6\u3002 \u5982\u679c\u6587\u4ef6\u5b58\u5728\uff0c\u5219\u5176\u5185\u5bb9\u4f1a\u88ab\u9500\u6bc1\u3002 <code>\"a+\"</code> \u6253\u5f00\u4ee5\u8fdb\u884c\u8bfb\u53d6\u548c\u8ffd\u52a0\u3002 \u8ffd\u52a0\u64cd\u4f5c\u5305\u62ec\u5728\u65b0\u6570\u636e\u5199\u5165\u6587\u4ef6\u4e4b\u524d\u79fb\u9664 EOF \u6807\u8bb0\u3002 \u5199\u5165\u5b8c\u6210\u540e\uff0cEOF \u6807\u8bb0\u4e0d\u4f1a\u8fd8\u539f\u3002 \u5982\u679c\u6587\u4ef6\u4e0d\u5b58\u5728\uff0c\u5219\u521b\u5efa\u6587\u4ef6\u3002"}, {"location": "yuyan/C/%E9%80%89%E6%8B%A9%E7%BB%93%E6%9E%84/", "title": "3.1 if", "text": "<p>\u82e5\u4e0d\u5e0c\u671belse\u4e0e\u6700\u8fd1\u7684if\u8bed\u53e5\u914d\u5bf9\uff0c\u53ef\u4ee5\u7528\u5927\u62ec\u53f7{ }\u5c06\u8be5if\u8bed\u53e5\u62ec\u8d77\u6765</p>"}, {"location": "yuyan/C/%E9%80%89%E6%8B%A9%E7%BB%93%E6%9E%84/#32-switch-case", "title": "3.2 Switch Case", "text": "<p><code>switch</code>\u8bed\u53e5\u662f\u4e00\u79cd\u5728\u591a\u4e2a\u53ef\u80fd\u60c5\u51b5\u4e0b\u9009\u62e9\u6267\u884c\u7684\u63a7\u5236\u6d41\u8bed\u53e5\u3002\u5b83\u901a\u5e38\u4e0e<code>case</code>\u8bed\u53e5\u4e00\u8d77\u4f7f\u7528\u3002</p>"}, {"location": "yuyan/C/%E9%80%89%E6%8B%A9%E7%BB%93%E6%9E%84/#_1", "title": "\u8bed\u6cd5", "text": "C<pre><code>switch (\u8868\u8fbe\u5f0f) {\n  case \u503c1:\n    // \u4ee3\u7801\u57571\n    break;\n  case \u503c2:\n    // \u4ee3\u7801\u57572\n    break;\n  // \u53ef\u4ee5\u6709\u591a\u4e2acase\n  default:\n    // \u5982\u679c\u4e0a\u9762\u7684case\u90fd\u4e0d\u5339\u914d\u65f6\u6267\u884c\u7684\u4ee3\u7801\u5757\n}\n</code></pre> <ul> <li>\u4e00\u5b9a\u8981\u6ce8\u610f\u6709\u6ca1\u6709break</li> <li>\u82e5switch\u4e2d\u7684\u8868\u8fbe\u5f0f\u7684\u503c\u4e0d\u662f\u6574\u6570\u5219\u81ea\u52a8\u53d6\u6574</li> <li>case\u548cdefault\u540e\u7684\u8bed\u53e5\u53ef\u4ee5\u662f\u590d\u5408\u8bed\u53e5\uff0c\u4e14\u4e0d\u7528\u52a0{ }</li> <li>\u5e38\u91cf\u8868\u8fbe\u5f0f\u7684\u8bed\u53e5\u53ef\u4ee5\u7701\u7565\uff0c\u591a\u4e2acase\u5171\u7528\u4e00\u7ec4\u6267\u884c\u8bed\u53e5</li> <li>default\u53ef\u4ee5\u7f6e\u4e8ecase\u4e4b\u95f4\uff0cdefault\u540ecase\u4e2d\u7684\u8bed\u53e5\u4f1a\u7ee7\u7eed\u6267\u884c C<pre><code>#include &lt;stdio.h&gt;\nint main()\n{\n\u00a0 \u00a0 int i;\n\u00a0 \u00a0 scanf(\"%d\",&amp;i);\n\u00a0 \u00a0 switch(i)\n\u00a0 \u00a0 {\n\u00a0 \u00a0 \u00a0 \u00a0 case 1:\n\u00a0 \u00a0 \u00a0 \u00a0 printf(\"1\");\n\u00a0 \u00a0 \u00a0 \u00a0 break;\n\u00a0 \u00a0 \u00a0 \u00a0 default:\n\u00a0 \u00a0 \u00a0 \u00a0 printf(\"2\");\n\u00a0 \u00a0 \u00a0 \u00a0 case 2:\n\u00a0 \u00a0 \u00a0 \u00a0 printf(\"3\");\n\u00a0 \u00a0 \u00a0 \u00a0 break;\n\u00a0 \u00a0 \u00a0 \u00a0 case 3:\n\u00a0 \u00a0 \u00a0 \u00a0 printf(\"4\");\n\u00a0 \u00a0 \u00a0 \u00a0 break;\n\u00a0 \u00a0 }\n}\n</code></pre></li> <li>switch\u65e0\u4f18\u5148\u7ea7\uff0cif\u6709\u4f18\u5148\u7ea7</li> </ul>"}, {"location": "yuyan/C/%E9%80%89%E6%8B%A9%E7%BB%93%E6%9E%84/#_2", "title": "\u505a\u9898\u603b\u7ed3", "text": "<p>C<pre><code>#include &lt;stdio.h&gt;\nint main()\n{\n\u00a0 \u00a0 int x = 5;\n\u00a0 \u00a0 if(x++&gt;5)\n\u00a0 \u00a0 printf(\"%d\",x);\n\u00a0 \u00a0 else\n\u00a0 \u00a0 printf(\"%d\",x--);\n\u00a0 \u00a0 printf(\"%d\",x);\n}\n</code></pre> \u6ce8\u610f\uff1a\u6781\u5176\u91cd\u8981\uff01\uff01\u5728if(x++&gt;5)\u4e2d\uff0cx\u5df2\u7ecf\u52a0\u4e861\u4e86\uff01\u5728\u540e\u7eedprintf\u4e2d\u7684x--\u4e2d\uff0c\u5148\u8f93\u51fax\uff0c\u518d\u5c06x\u7684\u503c\u51cf1\u3002</p> C<pre><code>#include &lt;stdio.h&gt;\nint main()\n{\n\u00a0 \u00a0 int k=5,n=0;\n\u00a0 \u00a0 while(k&gt;0)\n\u00a0 \u00a0 {\n\u00a0 \u00a0 \u00a0 \u00a0 switch (k)\n\u00a0 \u00a0 \u00a0 \u00a0 {\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 default:break;\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 case 1:n+=k;\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 case 2:\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 case 3:n+=k;\n\u00a0 \u00a0 \u00a0 \u00a0 }\n\u00a0 \u00a0 \u00a0 \u00a0 k--;\n\u00a0 \u00a0 }\n\u00a0 \u00a0 printf(\"%d\",n);\n}\n</code></pre> <p>C<pre><code>#include &lt;stdio.h&gt;\nint main()\n{\n\u00a0 \u00a0 int a=1,b=2,c=3,d=0;\n\u00a0 \u00a0 if(a==1&amp;&amp;b++==2)\n\u00a0 \u00a0 \u00a0 \u00a0 if(b!=2||c--!=3)\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 printf(\"%d,%d,%d\\n\",a,b,c);\n\u00a0 \u00a0 \u00a0 \u00a0 else if(\"%d,%d,%d\\n\",a,b,c);\n\u00a0 \u00a0 else printf(\"%d,%d,%d\\n\",a,b,c);\n\u00a0 \u00a0 //\u7b54\u6848\u662f1,3,3\n}\n</code></pre> \u8fd9\u662f\u56e0\u4e3ab!=2\u4e4b\u540e\u7684\u8bed\u53e5\u88ab||\u77ed\u8def\u4e86\u3002</p> <p>C<pre><code>#include &lt;stdio.h&gt;\nint main()\n{\n\u00a0 \u00a0 int a=0,b=0,c=0,d=0;\n\u00a0 \u00a0 if(a=1)b=1;c=2;\n\u00a0 \u00a0 else d=3;\n\u00a0 \u00a0 printf(\"%d %d %d %d\",a,b,c,d);\n}\n</code></pre> \u6b64\u5904\u4f1a\u7f16\u8bd1\u9519\u8bef\uff0c\u56e0\u4e3aelse\u524d\u65e0\u4e0e\u4e4b\u5bf9\u5e94\u7684if\u3002 C<pre><code>case 1:****//\u6b63\u786e\ncase 2+1:**//\u6b63\u786e\ncase c:****//\u9519\u8bef\ncase 2.0:**//\u9519\u8bef\n\nswitch(a+b)//\u6b63\u786e\nswitch(a==1)//\u6b63\u786e\n</code></pre></p> <p>C<pre><code>#include &lt;stdio.h&gt;\nint main()\n{\n\u00a0 \u00a0 int a=0,b=1,c=0,d=20;\n\u00a0 \u00a0 if(a) d=d-10;\n\u00a0 \u00a0 else if(!b)\n\u00a0 \u00a0 if(!c)d=15;\n\u00a0 \u00a0 else d=25;\n\u00a0 \u00a0 printf(\"%d\",d);\n}\n</code></pre> \u6ce8\u610f\uff1a\u76f8\u5f53\u4e8eelse if(!b) \u00a0 \u00a0           { if(!c)d=15; \u00a0 \u00a0           else d=25; }</p> C<pre><code>if(a&gt;b&gt;c)\n\u76f8\u5f53\u4e8e\nif((a&gt;b)&gt;c)\n</code></pre>"}, {"location": "yuyan/Python/1/1/", "title": "Python \u6982\u8ff0", "text": ""}, {"location": "yuyan/Python/1/1/#_1", "title": "\u73af\u5883", "text": "<p>\u5efa\u8bae\u4f7f\u7528conda</p>"}, {"location": "yuyan/Python/1/1/#number", "title": "\u6570\u5b57(Number)\u7c7b\u578b", "text": "<p>python\u4e2d\u6570\u5b57\u6709\u56db\u79cd\u7c7b\u578b\uff1a\u6574\u6570\u3001\u5e03\u5c14\u578b\u3001\u6d6e\u70b9\u6570\u548c\u590d\u6570\u3002</p> <ul> <li>int (\u6574\u6570), \u5982 1, \u53ea\u6709\u4e00\u79cd\u6574\u6570\u7c7b\u578b int\uff0c\u8868\u793a\u4e3a\u957f\u6574\u578b\uff0c\u6ca1\u6709 python2 \u4e2d\u7684 Long\u3002</li> <li>bool (\u5e03\u5c14), \u5982 True\u3002</li> <li>float (\u6d6e\u70b9\u6570), \u5982 1.23\u30013E-2</li> <li>complex (\u590d\u6570) - \u590d\u6570\u7531\u5b9e\u90e8\u548c\u865a\u90e8\u7ec4\u6210\uff0c\u5f62\u5f0f\u4e3a a + bj\uff0c\u5176\u4e2d a \u662f\u5b9e\u90e8\uff0cb \u662f\u865a\u90e8\uff0cj \u8868\u793a\u865a\u6570\u5355\u4f4d\u3002\u5982 1 + 2j\u3001 1.1 + 2.2j</li> </ul>"}, {"location": "yuyan/Python/1/1/#string", "title": "\u5b57\u7b26\u4e32(String)", "text": "<ul> <li>Python \u4e2d\u5355\u5f15\u53f7 ' \u548c\u53cc\u5f15\u53f7 \" \u4f7f\u7528\u5b8c\u5168\u76f8\u540c\u3002</li> <li>\u4f7f\u7528\u4e09\u5f15\u53f7(''' \u6216 \"\"\")\u53ef\u4ee5\u6307\u5b9a\u4e00\u4e2a\u591a\u884c\u5b57\u7b26\u4e32\u3002 \u8f6c\u4e49\u7b26 \\\u3002</li> <li>\u53cd\u659c\u6760\u53ef\u4ee5\u7528\u6765\u8f6c\u4e49\uff0c\u4f7f\u7528 r \u53ef\u4ee5\u8ba9\u53cd\u659c\u6760\u4e0d\u53d1\u751f\u8f6c\u4e49\u3002 \u5982 r\"this is a line with \\n\" \u5219 \\n \u4f1a\u663e\u793a\uff0c\u5e76\u4e0d\u662f\u6362\u884c\u3002</li> <li>\u6309\u5b57\u9762\u610f\u4e49\u7ea7\u8054\u5b57\u7b26\u4e32\uff0c\u5982 \"this \" \"is \" \"string\" \u4f1a\u88ab\u81ea\u52a8\u8f6c\u6362\u4e3a this is string\u3002</li> <li>\u5b57\u7b26\u4e32\u53ef\u4ee5\u7528 + \u8fd0\u7b97\u7b26\u8fde\u63a5\u5728\u4e00\u8d77\uff0c\u7528 * \u8fd0\u7b97\u7b26\u91cd\u590d\u3002</li> <li>Python \u4e2d\u7684\u5b57\u7b26\u4e32\u6709\u4e24\u79cd\u7d22\u5f15\u65b9\u5f0f\uff0c\u4ece\u5de6\u5f80\u53f3\u4ee5 0 \u5f00\u59cb\uff0c\u4ece\u53f3\u5f80\u5de6\u4ee5 -1 \u5f00\u59cb\u3002</li> <li>Python \u4e2d\u7684\u5b57\u7b26\u4e32\u4e0d\u80fd\u6539\u53d8\u3002</li> <li>Python \u6ca1\u6709\u5355\u72ec\u7684\u5b57\u7b26\u7c7b\u578b\uff0c\u4e00\u4e2a\u5b57\u7b26\u5c31\u662f\u957f\u5ea6\u4e3a 1 \u7684\u5b57\u7b26\u4e32\u3002</li> <li>\u5b57\u7b26\u4e32\u5207\u7247 str[start:end]\uff0c\u5176\u4e2d start\uff08\u5305\u542b\uff09\u662f\u5207\u7247\u5f00\u59cb\u7684\u7d22\u5f15\uff0cend\uff08\u4e0d\u5305\u542b\uff09\u662f\u5207\u7247\u7ed3\u675f\u7684\u7d22\u5f15\u3002</li> <li>\u5b57\u7b26\u4e32\u7684\u5207\u7247\u53ef\u4ee5\u52a0\u4e0a\u6b65\u957f\u53c2\u6570 step\uff0c\u8bed\u6cd5\u683c\u5f0f\u5982\u4e0b\uff1astr[startstep]</li> </ul>"}, {"location": "yuyan/Python/1/1/#print", "title": "print \u8f93\u51fa", "text": "<p>print \u9ed8\u8ba4\u8f93\u51fa\u662f\u6362\u884c\u7684\uff0c\u5982\u679c\u8981\u5b9e\u73b0\u4e0d\u6362\u884c\u9700\u8981\u5728\u53d8\u91cf\u672b\u5c3e\u52a0\u4e0a end=\"\"\uff1a Python<pre><code>#!/usr/bin/python3\n\nx=\"a\"\ny=\"b\"\n# \u6362\u884c\u8f93\u51fa\nprint( x )\nprint( y )\n\nprint('---------')\n# \u4e0d\u6362\u884c\u8f93\u51fa\nprint( x, end=\" \" )\nprint( y, end=\" \" )\nprint()\n</code></pre></p> Text Only<pre><code>a\nb\n---------\na b\n</code></pre>"}, {"location": "yuyan/Python/1/1/#import-fromimport", "title": "import \u4e0e from...import", "text": "<p>\u5728 python \u7528 import \u6216\u8005 from...import \u6765\u5bfc\u5165\u76f8\u5e94\u7684\u6a21\u5757\u3002</p> <p>\u5c06\u6574\u4e2a\u6a21\u5757(somemodule)\u5bfc\u5165\uff0c\u683c\u5f0f\u4e3a\uff1a import somemodule</p> <p>\u4ece\u67d0\u4e2a\u6a21\u5757\u4e2d\u5bfc\u5165\u67d0\u4e2a\u51fd\u6570,\u683c\u5f0f\u4e3a\uff1a from somemodule import somefunction</p> <p>\u4ece\u67d0\u4e2a\u6a21\u5757\u4e2d\u5bfc\u5165\u591a\u4e2a\u51fd\u6570,\u683c\u5f0f\u4e3a\uff1a from somemodule import firstfunc, secondfunc, thirdfunc</p> <p>\u5c06\u67d0\u4e2a\u6a21\u5757\u4e2d\u7684\u5168\u90e8\u51fd\u6570\u5bfc\u5165\uff0c\u683c\u5f0f\u4e3a\uff1a from somemodule import *</p> <p>\u5bfc\u5165 sys \u6a21\u5757</p> <p>import sys print('================Python import mode==========================') print ('\u547d\u4ee4\u884c\u53c2\u6570\u4e3a:') for i in sys.argv:     print (i) print ('\\n python \u8def\u5f84\u4e3a',sys.path)</p> <p>\u5bfc\u5165 sys \u6a21\u5757\u7684 argv,path \u6210\u5458</p> <p>from sys import argv,path  #  \u5bfc\u5165\u7279\u5b9a\u7684\u6210\u5458</p> <p>print('================python from import===================================') print('path:',path) # \u56e0\u4e3a\u5df2\u7ecf\u5bfc\u5165path\u6210\u5458\uff0c\u6240\u4ee5\u6b64\u5904\u5f15\u7528\u65f6\u4e0d\u9700\u8981\u52a0sys.path</p> <p>import sys \u548c from sys import * \u7684\u533a\u522b</p> <p><code>import sys</code> \u548c <code>from sys import *</code> \u4e4b\u95f4\u7684\u533a\u522b\u4e3b\u8981\u5728\u4e8e\u4e24\u8005\u5bfc\u5165\u6a21\u5757\u7684\u65b9\u5f0f\u548c\u4f7f\u7528\u65f6\u7684\u547d\u540d\u65b9\u5f0f\uff1a</p> <ol> <li><code>import sys</code>:  </li> </ol> <ul> <li>\u5bfc\u5165\u6574\u4e2a <code>sys</code> \u6a21\u5757\u3002 </li> <li>\u4f7f\u7528\u65f6\u5fc5\u987b\u5e26\u4e0a\u6a21\u5757\u7684\u524d\u7f00 <code>sys</code>\u3002\u4f8b\u5982\uff1a<code>sys.argv</code>\u3002    </li> <li>\u9002\u5408\u5728\u4ee3\u7801\u4e2d\u907f\u514d\u547d\u540d\u51b2\u7a81\u7684\u60c5\u51b5\uff0c\u56e0\u4e3a\u6240\u6709 <code>sys</code> \u6a21\u5757\u4e2d\u7684\u5185\u5bb9\u90fd\u8981\u901a\u8fc7 <code>sys.</code> \u6765\u5f15\u7528\u3002   </li> </ul> Python<pre><code>import sys\nprint(sys.argv)\n</code></pre> <ol> <li><code>from sys import *</code>:  - \u5bfc\u5165 <code>sys</code> \u6a21\u5757\u4e2d\u7684\u6240\u6709\u516c\u6709\u6210\u5458\uff08\u4e0d\u5305\u62ec\u4ee5 <code>_</code> \u5f00\u5934\u7684\u79c1\u6709\u6210\u5458\uff09\uff0c\u5e76\u5c06\u8fd9\u4e9b\u6210\u5458\u76f4\u63a5\u5f15\u5165\u5f53\u524d\u7684\u547d\u540d\u7a7a\u95f4\u3002  - \u4f7f\u7528\u65f6\u4e0d\u9700\u8981\u6a21\u5757\u524d\u7f00\uff0c\u76f4\u63a5\u4f7f\u7528 <code>argv</code> \u7b49\u6210\u5458\u3002 \u4f8b\u5982\uff1a<code>argv</code>\u3002  - \u53ef\u80fd\u5bfc\u81f4\u547d\u540d\u51b2\u7a81\uff0c\u5c24\u5176\u662f\u5f53\u591a\u4e2a\u6a21\u5757\u4e2d\u6709\u76f8\u540c\u7684\u6210\u5458\u540d\u79f0\u65f6\u3002</li> </ol> Python<pre><code>from sys import *\nprint(argv)\n</code></pre> <p>\u603b\u7ed3\uff1a - <code>import sys</code> \u66f4\u5b89\u5168\uff0c\u907f\u514d\u547d\u540d\u51b2\u7a81\u3002  - <code>from sys import *</code> \u66f4\u7b80\u4fbf\uff0c\u4f46\u53ef\u80fd\u5bfc\u81f4\u547d\u540d\u51b2\u7a81\uff0c\u901a\u5e38\u4e0d\u63a8\u8350\u5728\u5927\u578b\u9879\u76ee\u6216\u5e93\u4e2d\u4f7f\u7528\u3002</p>"}, {"location": "yuyan/Python/2/2/", "title": "Python\u57fa\u672c\u6570\u636e\u7c7b\u578b", "text": "<p>Note</p> <p>\u5728 Python \u4e2d\uff0cm = \"asf\" \u548c m = 'asf' \u4e4b\u95f4\u6ca1\u6709\u533a\u522b\u3002\u5b83\u4eec\u90fd\u7528\u4e8e\u5b9a\u4e49\u5b57\u7b26\u4e32\uff0c\u53cc\u5f15\u53f7 (\") \u548c\u5355\u5f15\u53f7 (') \u662f\u7b49\u6548\u7684\uff0c\u53ef\u4ee5\u4e92\u6362\u4f7f\u7528</p>"}, {"location": "yuyan/Python/2/2/#_1", "title": "\u591a\u4e2a\u53d8\u91cf\u8d4b\u503c", "text": "<p>Python\u5141\u8bb8\u4f60\u540c\u65f6\u4e3a\u591a\u4e2a\u53d8\u91cf\u8d4b\u503c\u3002\u4f8b\u5982\uff1a Python<pre><code>a = b = c = 1\n</code></pre> \u4ee5\u4e0a\u5b9e\u4f8b\uff0c\u521b\u5efa\u4e00\u4e2a\u6574\u578b\u5bf9\u8c61\uff0c\u503c\u4e3a 1\uff0c\u4ece\u540e\u5411\u524d\u8d4b\u503c\uff0c\u4e09\u4e2a\u53d8\u91cf\u88ab\u8d4b\u4e88\u76f8\u540c\u7684\u6570\u503c\u3002</p> <p>\u60a8\u4e5f\u53ef\u4ee5\u4e3a\u591a\u4e2a\u5bf9\u8c61\u6307\u5b9a\u591a\u4e2a\u53d8\u91cf\u3002\u4f8b\u5982\uff1a Python<pre><code>a, b, c = 1, 2, \"runoob\"\n</code></pre> \u4ee5\u4e0a\u5b9e\u4f8b\uff0c\u4e24\u4e2a\u6574\u578b\u5bf9\u8c61 1 \u548c 2 \u7684\u5206\u914d\u7ed9\u53d8\u91cf a \u548c b\uff0c\u5b57\u7b26\u4e32\u5bf9\u8c61 \"runoob\" \u5206\u914d\u7ed9\u53d8\u91cf c\u3002</p>"}, {"location": "yuyan/Python/2/2/#_2", "title": "\u6807\u51c6\u6570\u636e\u7c7b\u578b", "text": "<p>Python3 \u4e2d\u5e38\u89c1\u7684\u6570\u636e\u7c7b\u578b\u6709\uff1a</p> <ul> <li>Number\uff08\u6570\u5b57\uff09</li> <li>String\uff08\u5b57\u7b26\u4e32\uff09</li> <li>bool\uff08\u5e03\u5c14\u7c7b\u578b\uff09</li> <li>List\uff08\u5217\u8868\uff09</li> <li>Tuple\uff08\u5143\u7ec4\uff09</li> <li>Set\uff08\u96c6\u5408\uff09</li> <li> <p>Dictionary\uff08\u5b57\u5178\uff09 Python3 \u7684\u516d\u4e2a\u6807\u51c6\u6570\u636e\u7c7b\u578b\u4e2d\uff1a</p> </li> <li> <p>\u4e0d\u53ef\u53d8\u6570\u636e\uff083 \u4e2a\uff09\uff1aNumber\uff08\u6570\u5b57\uff09\u3001String\uff08\u5b57\u7b26\u4e32\uff09\u3001Tuple\uff08\u5143\u7ec4\uff09\uff1b</p> </li> <li>\u53ef\u53d8\u6570\u636e\uff083 \u4e2a\uff09\uff1aList\uff08\u5217\u8868\uff09\u3001Dictionary\uff08\u5b57\u5178\uff09\u3001Set\uff08\u96c6\u5408\uff09\u3002</li> </ul> <p>\u6b64\u5916\u8fd8\u6709\u4e00\u4e9b\u9ad8\u7ea7\u7684\u6570\u636e\u7c7b\u578b\uff0c\u5982: \u5b57\u8282\u6570\u7ec4\u7c7b\u578b(bytes)\u3002</p>"}, {"location": "yuyan/Python/2/2/#number", "title": "Number\uff08\u6570\u5b57\uff09", "text": "<p>Python3 \u652f\u6301 int\u3001float\u3001bool\u3001complex\uff08\u590d\u6570\uff09\u3002</p> <p>\u5728Python 3\u91cc\uff0c\u53ea\u6709\u4e00\u79cd\u6574\u6570\u7c7b\u578b int\uff0c\u8868\u793a\u4e3a\u957f\u6574\u578b\uff0c\u6ca1\u6709 python2 \u4e2d\u7684 Long\u3002</p> <p>\u50cf\u5927\u591a\u6570\u8bed\u8a00\u4e00\u6837\uff0c\u6570\u503c\u7c7b\u578b\u7684\u8d4b\u503c\u548c\u8ba1\u7b97\u90fd\u662f\u5f88\u76f4\u89c2\u7684\u3002</p> <p>\u5185\u7f6e\u7684 type() \u51fd\u6570\u53ef\u4ee5\u7528\u6765\u67e5\u8be2\u53d8\u91cf\u6240\u6307\u7684\u5bf9\u8c61\u7c7b\u578b\u3002 Python<pre><code>&gt;&gt;&gt; a, b, c, d = 20, 5.5, True, 4+3j\n&gt;&gt;&gt; print(type(a), type(b), type(c), type(d))\n&lt;class 'int'&gt; &lt;class 'float'&gt; &lt;class 'bool'&gt; &lt;class 'complex'&gt;\n</code></pre></p>"}, {"location": "yuyan/Python/2/2/#string", "title": "String\uff08\u5b57\u7b26\u4e32\uff09", "text": "<p>Python\u4e2d\u7684\u5b57\u7b26\u4e32\u7528\u5355\u5f15\u53f7 ' \u6216\u53cc\u5f15\u53f7 \" \u62ec\u8d77\u6765\uff0c\u540c\u65f6\u4f7f\u7528\u53cd\u659c\u6760  \u8f6c\u4e49\u7279\u6b8a\u5b57\u7b26\u3002</p> <p>\u5b57\u7b26\u4e32\u7684\u622a\u53d6\u7684\u8bed\u6cd5\u683c\u5f0f\u5982\u4e0b\uff1a</p> <p>\u53d8\u91cf[\u5934\u4e0b\u6807:\u5c3e\u4e0b\u6807] \u7d22\u5f15\u503c\u4ee5 0 \u4e3a\u5f00\u59cb\u503c\uff0c-1 \u4e3a\u4ece\u672b\u5c3e\u7684\u5f00\u59cb\u4f4d\u7f6e\u3002</p> <p></p>"}, {"location": "yuyan/Python/2/2/#bool", "title": "bool\uff08\u5e03\u5c14\u7c7b\u578b\uff09", "text": "<p>\u5e03\u5c14\u7c7b\u578b\u5373 True \u6216 False\u3002</p> <p>\u5728 Python \u4e2d\uff0cTrue \u548c False \u90fd\u662f\u5173\u952e\u5b57\uff0c\u8868\u793a\u5e03\u5c14\u503c\u3002</p> <p>\u5e03\u5c14\u7c7b\u578b\u53ef\u4ee5\u7528\u6765\u63a7\u5236\u7a0b\u5e8f\u7684\u6d41\u7a0b\uff0c\u6bd4\u5982\u5224\u65ad\u67d0\u4e2a\u6761\u4ef6\u662f\u5426\u6210\u7acb\uff0c\u6216\u8005\u5728\u67d0\u4e2a\u6761\u4ef6\u6ee1\u8db3\u65f6\u6267\u884c\u67d0\u6bb5\u4ee3\u7801\u3002</p> <p>\u5e03\u5c14\u7c7b\u578b\u7279\u70b9\uff1a</p> <ul> <li> <p>\u5e03\u5c14\u7c7b\u578b\u53ea\u6709\u4e24\u4e2a\u503c\uff1aTrue \u548c False\u3002</p> </li> <li> <p>bool \u662f int \u7684\u5b50\u7c7b\uff0c\u56e0\u6b64\u5e03\u5c14\u503c\u53ef\u4ee5\u88ab\u770b\u4f5c\u6574\u6570\u6765\u4f7f\u7528\uff0c\u5176\u4e2d True \u7b49\u4ef7\u4e8e 1\u3002</p> </li> <li> <p>\u5e03\u5c14\u7c7b\u578b\u53ef\u4ee5\u548c\u5176\u4ed6\u6570\u636e\u7c7b\u578b\u8fdb\u884c\u6bd4\u8f83\uff0c\u6bd4\u5982\u6570\u5b57\u3001\u5b57\u7b26\u4e32\u7b49\u3002\u5728\u6bd4\u8f83\u65f6\uff0cPython \u4f1a\u5c06 True \u89c6\u4e3a 1\uff0cFalse \u89c6\u4e3a 0\u3002</p> </li> <li> <p>\u5e03\u5c14\u7c7b\u578b\u53ef\u4ee5\u548c\u903b\u8f91\u8fd0\u7b97\u7b26\u4e00\u8d77\u4f7f\u7528\uff0c\u5305\u62ec and\u3001or \u548c not\u3002\u8fd9\u4e9b\u8fd0\u7b97\u7b26\u53ef\u4ee5\u7528\u6765\u7ec4\u5408\u591a\u4e2a\u5e03\u5c14\u8868\u8fbe\u5f0f\uff0c\u751f\u6210\u4e00\u4e2a\u65b0\u7684\u5e03\u5c14\u503c\u3002</p> </li> <li> <p>\u5e03\u5c14\u7c7b\u578b\u4e5f\u53ef\u4ee5\u88ab\u8f6c\u6362\u6210\u5176\u4ed6\u6570\u636e\u7c7b\u578b\uff0c\u6bd4\u5982\u6574\u6570\u3001\u6d6e\u70b9\u6570\u548c\u5b57\u7b26\u4e32\u3002\u5728\u8f6c\u6362\u65f6\uff0cTrue \u4f1a\u88ab\u8f6c\u6362\u6210 1\uff0cFalse \u4f1a\u88ab\u8f6c\u6362\u6210 0\u3002</p> </li> <li> <p>\u53ef\u4ee5\u4f7f\u7528 bool() \u51fd\u6570\u5c06\u5176\u4ed6\u7c7b\u578b\u7684\u503c\u8f6c\u6362\u4e3a\u5e03\u5c14\u503c\u3002\u4ee5\u4e0b\u503c\u5728\u8f6c\u6362\u4e3a\u5e03\u5c14\u503c\u65f6\u4e3a False\uff1aNone\u3001False\u3001\u96f6 (0\u30010.0\u30010j)\u3001\u7a7a\u5e8f\u5217\uff08\u5982 ''\u3001()\u3001[]\uff09\u548c\u7a7a\u6620\u5c04\uff08\u5982 {}\uff09\u3002\u5176\u4ed6\u6240\u6709\u503c\u8f6c\u6362\u4e3a\u5e03\u5c14\u503c\u65f6\u5747\u4e3a True\u3002</p> </li> </ul>"}, {"location": "yuyan/Python/2/2/#list", "title": "List\uff08\u5217\u8868\uff09", "text": "<p>List\uff08\u5217\u8868\uff09 \u662f Python \u4e2d\u4f7f\u7528\u6700\u9891\u7e41\u7684\u6570\u636e\u7c7b\u578b\u3002</p> <p>\u5217\u8868\u53ef\u4ee5\u5b8c\u6210\u5927\u591a\u6570\u96c6\u5408\u7c7b\u7684\u6570\u636e\u7ed3\u6784\u5b9e\u73b0\u3002\u5217\u8868\u4e2d\u5143\u7d20\u7684\u7c7b\u578b\u53ef\u4ee5\u4e0d\u76f8\u540c\uff0c\u5b83\u652f\u6301\u6570\u5b57\uff0c\u5b57\u7b26\u4e32\u751a\u81f3\u53ef\u4ee5\u5305\u542b\u5217\u8868\uff08\u6240\u8c13\u5d4c\u5957\uff09\u3002</p> <p>\u5217\u8868\u662f\u5199\u5728\u65b9\u62ec\u53f7 [] \u4e4b\u95f4\u3001\u7528\u9017\u53f7\u5206\u9694\u5f00\u7684\u5143\u7d20\u5217\u8868\u3002</p> <p>\u548c\u5b57\u7b26\u4e32\u4e00\u6837\uff0c\u5217\u8868\u540c\u6837\u53ef\u4ee5\u88ab\u7d22\u5f15\u548c\u622a\u53d6\uff0c\u5217\u8868\u88ab\u622a\u53d6\u540e\u8fd4\u56de\u4e00\u4e2a\u5305\u542b\u6240\u9700\u5143\u7d20\u7684\u65b0\u5217\u8868\u3002</p> <p>\u5217\u8868\u622a\u53d6\u7684\u8bed\u6cd5\u683c\u5f0f\u5982\u4e0b\uff1a</p> <p>\u53d8\u91cf[\u5934\u4e0b\u6807:\u5c3e\u4e0b\u6807]</p> \u5e8f\u53f7 \u65b9\u6cd5 \u63cf\u8ff0 1 <code>list.append(obj)</code> \u5728\u5217\u8868\u672b\u5c3e\u6dfb\u52a0\u65b0\u7684\u5bf9\u8c61 2 <code>list.count(obj)</code> \u7edf\u8ba1\u67d0\u4e2a\u5143\u7d20\u5728\u5217\u8868\u4e2d\u51fa\u73b0\u7684\u6b21\u6570 3 <code>list.extend(seq)</code> \u5728\u5217\u8868\u672b\u5c3e\u4e00\u6b21\u6027\u8ffd\u52a0\u53e6\u4e00\u4e2a\u5e8f\u5217\u4e2d\u7684\u591a\u4e2a\u503c\uff08\u7528\u65b0\u5217\u8868\u6269\u5c55\u539f\u6765\u7684\u5217\u8868\uff09 4 <code>list.index(obj)</code> \u4ece\u5217\u8868\u4e2d\u627e\u51fa\u67d0\u4e2a\u503c\u7b2c\u4e00\u4e2a\u5339\u914d\u9879\u7684\u7d22\u5f15\u4f4d\u7f6e 5 <code>list.insert(index, obj)</code> \u5c06\u5bf9\u8c61\u63d2\u5165\u5217\u8868 6 <code>list.pop([index=-1])</code> \u79fb\u9664\u5217\u8868\u4e2d\u7684\u4e00\u4e2a\u5143\u7d20\uff08\u9ed8\u8ba4\u6700\u540e\u4e00\u4e2a\u5143\u7d20\uff09\uff0c\u5e76\u4e14\u8fd4\u56de\u8be5\u5143\u7d20\u7684\u503c 7 <code>list.remove(obj)</code> \u79fb\u9664\u5217\u8868\u4e2d\u67d0\u4e2a\u503c\u7684\u7b2c\u4e00\u4e2a\u5339\u914d\u9879 8 <code>list.reverse()</code> \u53cd\u5411\u5217\u8868\u4e2d\u5143\u7d20 9 <code>list.sort(key=None, reverse=False)</code> \u5bf9\u539f\u5217\u8868\u8fdb\u884c\u6392\u5e8f 10 <code>list.clear()</code> \u6e05\u7a7a\u5217\u8868 11 <code>list.copy()</code> \u590d\u5236\u5217\u8868 <p>\u7d22\u5f15\u503c\u4ee5 0 \u4e3a\u5f00\u59cb\u503c\uff0c-1 \u4e3a\u4ece\u672b\u5c3e\u7684\u5f00\u59cb\u4f4d\u7f6e\u3002</p>"}, {"location": "yuyan/Python/2/2/#tuple", "title": "Tuple\uff08\u5143\u7ec4\uff09", "text": "<p>\u5143\u7ec4\uff08tuple\uff09\u4e0e\u5217\u8868\u7c7b\u4f3c\uff0c\u4e0d\u540c\u4e4b\u5904\u5728\u4e8e\u5143\u7ec4\u7684\u5143\u7d20\u4e0d\u80fd\u4fee\u6539\u3002\u5143\u7ec4\u5199\u5728\u5c0f\u62ec\u53f7 () \u91cc\uff0c\u5143\u7d20\u4e4b\u95f4\u7528\u9017\u53f7\u9694\u5f00\u3002</p> <p>\u5143\u7ec4\u4e2d\u7684\u5143\u7d20\u7c7b\u578b\u4e5f\u53ef\u4ee5\u4e0d\u76f8\u540c\u3002</p> <p>Warning</p> <p>\u5982\u679c\u4f60\u60f3\u521b\u5efa\u53ea\u6709\u4e00\u4e2a\u5143\u7d20\u7684\u5143\u7ec4\uff0c\u9700\u8981\u6ce8\u610f\u5728\u5143\u7d20\u540e\u9762\u6dfb\u52a0\u4e00\u4e2a\u9017\u53f7\uff0c\u4ee5\u533a\u5206\u5b83\u662f\u4e00\u4e2a\u5143\u7ec4\u800c\u4e0d\u662f\u4e00\u4e2a\u666e\u901a\u7684\u503c\uff0c\u8fd9\u662f\u56e0\u4e3a\u5728\u6ca1\u6709\u9017\u53f7\u7684\u60c5\u51b5\u4e0b\uff0cPython\u4f1a\u5c06\u62ec\u53f7\u89e3\u91ca\u4e3a\u6570\u5b66\u8fd0\u7b97\u4e2d\u7684\u62ec\u53f7\uff0c\u800c\u4e0d\u662f\u5143\u7ec4\u7684\u8868\u793a\u3002</p> \u5e8f\u53f7 \u65b9\u6cd5 \u63cf\u8ff0 \u793a\u4f8b 1 <code>len(tuple)</code> \u8ba1\u7b97\u5143\u7ec4\u5143\u7d20\u4e2a\u6570 <code>&gt;&gt;&gt; tuple1 = ('Google', 'Runoob', 'Taobao')</code><code>&gt;&gt;&gt; len(tuple1)</code><code>3</code> 2 <code>max(tuple)</code> \u8fd4\u56de\u5143\u7ec4\u4e2d\u5143\u7d20\u6700\u5927\u503c <code>&gt;&gt;&gt; tuple2 = ('5', '4', '8')</code><code>&gt;&gt;&gt; max(tuple2)</code><code>'8'</code> 3 <code>min(tuple)</code> \u8fd4\u56de\u5143\u7ec4\u4e2d\u5143\u7d20\u6700\u5c0f\u503c <code>&gt;&gt;&gt; tuple2 = ('5', '4', '8')</code><code>&gt;&gt;&gt; min(tuple2)</code><code>'4'</code> 4 <code>tuple(iterable)</code> \u5c06\u53ef\u8fed\u4ee3\u7cfb\u5217\u8f6c\u6362\u4e3a\u5143\u7ec4 <code>&gt;&gt;&gt; list1= ['Google', 'Taobao', 'Runoob', 'Baidu']</code><code>&gt;&gt;&gt; tuple1=tuple(list1)</code><code>&gt;&gt;&gt; tuple1</code><code>('Google', 'Taobao', 'Runoob', 'Baidu')</code>"}, {"location": "yuyan/Python/2/2/#set", "title": "Set\uff08\u96c6\u5408\uff09", "text": "<p>Python \u4e2d\u7684\u96c6\u5408\uff08Set\uff09\u662f\u4e00\u79cd\u65e0\u5e8f\u3001\u53ef\u53d8\u7684\u6570\u636e\u7c7b\u578b\uff0c\u7528\u4e8e\u5b58\u50a8\u552f\u4e00\u7684\u5143\u7d20\u3002</p> <p>\u96c6\u5408\u4e2d\u7684\u5143\u7d20\u4e0d\u4f1a\u91cd\u590d\uff0c\u5e76\u4e14\u53ef\u4ee5\u8fdb\u884c\u4ea4\u96c6\u3001\u5e76\u96c6\u3001\u5dee\u96c6\u7b49\u5e38\u89c1\u7684\u96c6\u5408\u64cd\u4f5c\u3002</p> <p>\u5728 Python \u4e2d\uff0c\u96c6\u5408\u4f7f\u7528\u5927\u62ec\u53f7 {} \u8868\u793a\uff0c\u5143\u7d20\u4e4b\u95f4\u7528\u9017\u53f7 , \u5206\u9694\u3002</p> <p>\u53e6\u5916\uff0c\u4e5f\u53ef\u4ee5\u4f7f\u7528 set() \u51fd\u6570\u521b\u5efa\u96c6\u5408\u3002</p> <p>\u6ce8\u610f\uff1a\u521b\u5efa\u4e00\u4e2a\u7a7a\u96c6\u5408\u5fc5\u987b\u7528 set() \u800c\u4e0d\u662f { }\uff0c\u56e0\u4e3a { } \u662f\u7528\u6765\u521b\u5efa\u4e00\u4e2a\u7a7a\u5b57\u5178\u3002</p> <p>\u521b\u5efa\u683c\u5f0f\uff1a</p> Python<pre><code>parame = {value01,value02,...}\n\u6216\u8005\nset(value)\n</code></pre> \u65b9\u6cd5 \u63cf\u8ff0 <code>add()</code> \u4e3a\u96c6\u5408\u6dfb\u52a0\u5143\u7d20 <code>clear()</code> \u79fb\u9664\u96c6\u5408\u4e2d\u7684\u6240\u6709\u5143\u7d20 <code>copy()</code> \u62f7\u8d1d\u4e00\u4e2a\u96c6\u5408 <code>difference()</code> \u8fd4\u56de\u591a\u4e2a\u96c6\u5408\u7684\u5dee\u96c6 <code>difference_update()</code> \u79fb\u9664\u96c6\u5408\u4e2d\u7684\u5143\u7d20\uff0c\u8be5\u5143\u7d20\u5728\u6307\u5b9a\u7684\u96c6\u5408\u4e5f\u5b58\u5728 <code>discard()</code> \u5220\u9664\u96c6\u5408\u4e2d\u6307\u5b9a\u7684\u5143\u7d20 <code>intersection()</code> \u8fd4\u56de\u96c6\u5408\u7684\u4ea4\u96c6 <code>intersection_update()</code> \u8fd4\u56de\u96c6\u5408\u7684\u4ea4\u96c6 <code>isdisjoint()</code> \u5224\u65ad\u4e24\u4e2a\u96c6\u5408\u662f\u5426\u5305\u542b\u76f8\u540c\u7684\u5143\u7d20\uff0c\u5982\u679c\u6ca1\u6709\u8fd4\u56de True\uff0c\u5426\u5219\u8fd4\u56de False <code>issubset()</code> \u5224\u65ad\u6307\u5b9a\u96c6\u5408\u662f\u5426\u4e3a\u8be5\u65b9\u6cd5\u53c2\u6570\u96c6\u5408\u7684\u5b50\u96c6 <code>issuperset()</code> \u5224\u65ad\u8be5\u65b9\u6cd5\u7684\u53c2\u6570\u96c6\u5408\u662f\u5426\u4e3a\u6307\u5b9a\u96c6\u5408\u7684\u5b50\u96c6 <code>pop()</code> \u968f\u673a\u79fb\u9664\u5143\u7d20 <code>remove()</code> \u79fb\u9664\u6307\u5b9a\u5143\u7d20 <code>symmetric_difference()</code> \u8fd4\u56de\u4e24\u4e2a\u96c6\u5408\u4e2d\u4e0d\u91cd\u590d\u7684\u5143\u7d20\u96c6\u5408 <code>symmetric_difference_update()</code> \u79fb\u9664\u5f53\u524d\u96c6\u5408\u4e2d\u5728\u53e6\u5916\u4e00\u4e2a\u6307\u5b9a\u96c6\u5408\u76f8\u540c\u7684\u5143\u7d20\uff0c\u5e76\u5c06\u53e6\u5916\u4e00\u4e2a\u6307\u5b9a\u96c6\u5408\u4e2d\u4e0d\u540c\u7684\u5143\u7d20\u63d2\u5165\u5230\u5f53\u524d\u96c6\u5408\u4e2d <code>union()</code> \u8fd4\u56de\u4e24\u4e2a\u96c6\u5408\u7684\u5e76\u96c6 <code>update()</code> \u7ed9\u96c6\u5408\u6dfb\u52a0\u5143\u7d20 <code>len()</code> \u8ba1\u7b97\u96c6\u5408\u5143\u7d20\u4e2a\u6570"}, {"location": "yuyan/Python/2/2/#dictionary", "title": "Dictionary\uff08\u5b57\u5178\uff09", "text": "<p>\u5b57\u5178\uff08dictionary\uff09\u662fPython\u4e2d\u53e6\u4e00\u4e2a\u975e\u5e38\u6709\u7528\u7684\u5185\u7f6e\u6570\u636e\u7c7b\u578b\u3002</p> <p>\u5217\u8868\u662f\u6709\u5e8f\u7684\u5bf9\u8c61\u96c6\u5408\uff0c\u5b57\u5178\u662f\u65e0\u5e8f\u7684\u5bf9\u8c61\u96c6\u5408\u3002\u4e24\u8005\u4e4b\u95f4\u7684\u533a\u522b\u5728\u4e8e\uff1a\u5b57\u5178\u5f53\u4e2d\u7684\u5143\u7d20\u662f\u901a\u8fc7\u952e\u6765\u5b58\u53d6\u7684\uff0c\u800c\u4e0d\u662f\u901a\u8fc7\u504f\u79fb\u5b58\u53d6\u3002</p> <p>\u5b57\u5178\u662f\u4e00\u79cd\u6620\u5c04\u7c7b\u578b\uff0c\u5b57\u5178\u7528 { } \u6807\u8bc6\uff0c\u5b83\u662f\u4e00\u4e2a\u65e0\u5e8f\u7684 \u952e(key) : \u503c(value) \u7684\u96c6\u5408\u3002</p> <p>\u952e(key)\u5fc5\u987b\u4f7f\u7528\u4e0d\u53ef\u53d8\u7c7b\u578b\u3002</p> <p>\u5728\u540c\u4e00\u4e2a\u5b57\u5178\u4e2d\uff0c\u952e(key)\u5fc5\u987b\u662f\u552f\u4e00\u7684\u3002</p> Python<pre><code>#!/usr/bin/python3\n\ndict = {}\ndict['one'] = \"1 - \u83dc\u9e1f\u6559\u7a0b\"\ndict[2]     = \"2 - \u83dc\u9e1f\u5de5\u5177\"\n\ntinydict = {'name': 'runoob','code':1, 'site': 'www.runoob.com'}\n\n\nprint (dict['one'])       # \u8f93\u51fa\u952e\u4e3a 'one' \u7684\u503c\nprint (dict[2])           # \u8f93\u51fa\u952e\u4e3a 2 \u7684\u503c\nprint (tinydict)          # \u8f93\u51fa\u5b8c\u6574\u7684\u5b57\u5178\nprint (tinydict.keys())   # \u8f93\u51fa\u6240\u6709\u952e\nprint (tinydict.values()) # \u8f93\u51fa\u6240\u6709\u503c\n</code></pre>"}, {"location": "yuyan/Python/2/2/#bytes", "title": "bytes \u7c7b\u578b", "text": "<p>\u5728 Python3 \u4e2d\uff0cbytes \u7c7b\u578b\u8868\u793a\u7684\u662f\u4e0d\u53ef\u53d8\u7684\u4e8c\u8fdb\u5236\u5e8f\u5217\uff08byte sequence\uff09\u3002</p> <p>\u4e0e\u5b57\u7b26\u4e32\u7c7b\u578b\u4e0d\u540c\u7684\u662f\uff0cbytes \u7c7b\u578b\u4e2d\u7684\u5143\u7d20\u662f\u6574\u6570\u503c\uff080 \u5230 255 \u4e4b\u95f4\u7684\u6574\u6570\uff09\uff0c\u800c\u4e0d\u662f Unicode \u5b57\u7b26\u3002</p> <p>bytes \u7c7b\u578b\u901a\u5e38\u7528\u4e8e\u5904\u7406\u4e8c\u8fdb\u5236\u6570\u636e\uff0c\u6bd4\u5982\u56fe\u50cf\u6587\u4ef6\u3001\u97f3\u9891\u6587\u4ef6\u3001\u89c6\u9891\u6587\u4ef6\u7b49\u7b49\u3002\u5728\u7f51\u7edc\u7f16\u7a0b\u4e2d\uff0c\u4e5f\u7ecf\u5e38\u4f7f\u7528 bytes \u7c7b\u578b\u6765\u4f20\u8f93\u4e8c\u8fdb\u5236\u6570\u636e\u3002</p> <p>\u521b\u5efa bytes \u5bf9\u8c61\u7684\u65b9\u5f0f\u6709\u591a\u79cd\uff0c\u6700\u5e38\u89c1\u7684\u65b9\u5f0f\u662f\u4f7f\u7528 b \u524d\u7f00\uff1a</p> <p>\u6b64\u5916\uff0c\u4e5f\u53ef\u4ee5\u4f7f\u7528 bytes() \u51fd\u6570\u5c06\u5176\u4ed6\u7c7b\u578b\u7684\u5bf9\u8c61\u8f6c\u6362\u4e3a bytes \u7c7b\u578b\u3002bytes() \u51fd\u6570\u7684\u7b2c\u4e00\u4e2a\u53c2\u6570\u662f\u8981\u8f6c\u6362\u7684\u5bf9\u8c61\uff0c\u7b2c\u4e8c\u4e2a\u53c2\u6570\u662f\u7f16\u7801\u65b9\u5f0f\uff0c\u5982\u679c\u7701\u7565\u7b2c\u4e8c\u4e2a\u53c2\u6570\uff0c\u5219\u9ed8\u8ba4\u4f7f\u7528 UTF-8 \u7f16\u7801\uff1a Python<pre><code>x = bytes(\"hello\", encoding=\"utf-8\")\n</code></pre> \u4e0e\u5b57\u7b26\u4e32\u7c7b\u578b\u7c7b\u4f3c\uff0cbytes \u7c7b\u578b\u4e5f\u652f\u6301\u8bb8\u591a\u64cd\u4f5c\u548c\u65b9\u6cd5\uff0c\u5982\u5207\u7247\u3001\u62fc\u63a5\u3001\u67e5\u627e\u3001\u66ff\u6362\u7b49\u7b49\u3002\u540c\u65f6\uff0c\u7531\u4e8e bytes \u7c7b\u578b\u662f\u4e0d\u53ef\u53d8\u7684\uff0c\u56e0\u6b64\u5728\u8fdb\u884c\u4fee\u6539\u64cd\u4f5c\u65f6\u9700\u8981\u521b\u5efa\u4e00\u4e2a\u65b0\u7684 bytes \u5bf9\u8c61\u3002\u4f8b\u5982\uff1a</p> <p>\u5b9e\u4f8b Python<pre><code>x = b\"hello\"\ny = x[1:3]  # \u5207\u7247\u64cd\u4f5c\uff0c\u5f97\u5230 b\"el\"\nz = x + b\"world\"  # \u62fc\u63a5\u64cd\u4f5c\uff0c\u5f97\u5230 b\"helloworld\"\n</code></pre> \u9700\u8981\u6ce8\u610f\u7684\u662f\uff0cbytes \u7c7b\u578b\u4e2d\u7684\u5143\u7d20\u662f\u6574\u6570\u503c\uff0c\u56e0\u6b64\u5728\u8fdb\u884c\u6bd4\u8f83\u64cd\u4f5c\u65f6\u9700\u8981\u4f7f\u7528\u76f8\u5e94\u7684\u6574\u6570\u503c\u3002\u4f8b\u5982\uff1a</p> <p>\u5b9e\u4f8b Python<pre><code>x = b\"hello\"\nif x[0] == ord(\"h\"):\n    print(\"The first element is 'h'\")\n</code></pre></p> <p>\u5176\u4e2d ord() \u51fd\u6570\u7528\u4e8e\u5c06\u5b57\u7b26\u8f6c\u6362\u4e3a\u76f8\u5e94\u7684\u6574\u6570\u503c\u3002</p>"}, {"location": "yuyan/Python/3/3/", "title": "Python \u6570\u636e\u7c7b\u578b\u8f6c\u6362", "text": ""}, {"location": "yuyan/Python/3/3/#_1", "title": "\u9690\u5f0f\u7c7b\u578b\u8f6c\u6362", "text": "<p>\u5728\u9690\u5f0f\u7c7b\u578b\u8f6c\u6362\u4e2d\uff0cPython \u4f1a\u81ea\u52a8\u5c06\u4e00\u79cd\u6570\u636e\u7c7b\u578b\u8f6c\u6362\u4e3a\u53e6\u4e00\u79cd\u6570\u636e\u7c7b\u578b\uff0c\u4e0d\u9700\u8981\u6211\u4eec\u53bb\u5e72\u9884\u3002</p> <p>\u4ee5\u4e0b\u5b9e\u4f8b\u4e2d\uff0c\u6211\u4eec\u5bf9\u4e24\u79cd\u4e0d\u540c\u7c7b\u578b\u7684\u6570\u636e\u8fdb\u884c\u8fd0\u7b97\uff0c\u8f83\u4f4e\u6570\u636e\u7c7b\u578b\uff08\u6574\u6570\uff09\u5c31\u4f1a\u8f6c\u6362\u4e3a\u8f83\u9ad8\u6570\u636e\u7c7b\u578b\uff08\u6d6e\u70b9\u6570\uff09\u4ee5\u907f\u514d\u6570\u636e\u4e22\u5931\u3002</p>"}, {"location": "yuyan/Python/3/3/#_2", "title": "\u663e\u5f0f\u7c7b\u578b\u8f6c\u6362", "text": "<p>\u5728\u663e\u5f0f\u7c7b\u578b\u8f6c\u6362\u4e2d\uff0c\u7528\u6237\u5c06\u5bf9\u8c61\u7684\u6570\u636e\u7c7b\u578b\u8f6c\u6362\u4e3a\u6240\u9700\u7684\u6570\u636e\u7c7b\u578b\u3002 \u6211\u4eec\u4f7f\u7528 int()\u3001float()\u3001str() \u7b49\u9884\u5b9a\u4e49\u51fd\u6570\u6765\u6267\u884c\u663e\u5f0f\u7c7b\u578b\u8f6c\u6362\u3002</p> <p>int() \u5f3a\u5236\u8f6c\u6362\u4e3a\u6574\u578b\uff1a</p> <p>\u5b9e\u4f8b Python<pre><code>x = int(1)   # x \u8f93\u51fa\u7ed3\u679c\u4e3a 1\ny = int(2.8) # y \u8f93\u51fa\u7ed3\u679c\u4e3a 2\nz = int(\"3\") # z \u8f93\u51fa\u7ed3\u679c\u4e3a 3\n</code></pre> float() \u5f3a\u5236\u8f6c\u6362\u4e3a\u6d6e\u70b9\u578b\uff1a</p> <p>\u5b9e\u4f8b Python<pre><code>x = float(1)     # x \u8f93\u51fa\u7ed3\u679c\u4e3a 1.0\ny = float(2.8)   # y \u8f93\u51fa\u7ed3\u679c\u4e3a 2.8\nz = float(\"3\")   # z \u8f93\u51fa\u7ed3\u679c\u4e3a 3.0\nw = float(\"4.2\") # w \u8f93\u51fa\u7ed3\u679c\u4e3a 4.2\n</code></pre> str() \u5f3a\u5236\u8f6c\u6362\u4e3a\u5b57\u7b26\u4e32\u7c7b\u578b\uff1a</p> <p>\u5b9e\u4f8b Python<pre><code>x = str(\"s1\") # x \u8f93\u51fa\u7ed3\u679c\u4e3a 's1'\ny = str(2)    # y \u8f93\u51fa\u7ed3\u679c\u4e3a '2'\nz = str(3.0)  # z \u8f93\u51fa\u7ed3\u679c\u4e3a '3.0'\n</code></pre></p>"}, {"location": "yuyan/Python/4/4/", "title": "Python \u8fd0\u7b97\u7b26", "text": "<p>\u5728 Python 3.8 \u53ca\u66f4\u9ad8\u7248\u672c\u4e2d\uff0c\u5f15\u5165\u4e86\u4e00\u79cd\u65b0\u7684\u8bed\u6cd5\u7279\u6027\uff0c\u79f0\u4e3a\"\u6d77\u8c61\u8fd0\u7b97\u7b26\"\uff08Walrus Operator\uff09\uff0c\u5b83\u4f7f\u7528 := \u7b26\u53f7\u3002\u8fd9\u4e2a\u8fd0\u7b97\u7b26\u7684\u4e3b\u8981\u76ee\u7684\u662f\u5728\u8868\u8fbe\u5f0f\u4e2d\u540c\u65f6\u8fdb\u884c\u8d4b\u503c\u548c\u8fd4\u56de\u8d4b\u503c\u7684\u503c\u3002</p> <p>\u4f7f\u7528\u6d77\u8c61\u8fd0\u7b97\u7b26\u53ef\u4ee5\u5728\u4e00\u4e9b\u60c5\u51b5\u4e0b\u7b80\u5316\u4ee3\u7801\uff0c\u5c24\u5176\u662f\u5728\u9700\u8981\u5728\u8868\u8fbe\u5f0f\u4e2d\u4f7f\u7528\u8d4b\u503c\u7ed3\u679c\u7684\u60c5\u51b5\u4e0b\u3002\u8fd9\u5bf9\u4e8e\u7b80\u5316\u5faa\u73af\u6761\u4ef6\u6216\u8868\u8fbe\u5f0f\u4e2d\u7684\u91cd\u590d\u8ba1\u7b97\u5f88\u6709\u7528\u3002</p> <p>\u4e0b\u9762\u662f\u4e00\u4e2a\u7b80\u5355\u7684\u5b9e\u4f8b\uff0c\u6f14\u793a\u4e86\u6d77\u8c61\u8fd0\u7b97\u7b26\u7684\u4f7f\u7528\uff1a</p> <p>\u5b9e\u4f8b Python<pre><code># \u4f20\u7edf\u5199\u6cd5\nn = 10\nif n &gt; 5:\n    print(n)\n</code></pre> Python<pre><code># \u4f7f\u7528\u6d77\u8c61\u8fd0\u7b97\u7b26\nif (n := 10) &gt; 5:\n    print(n)\n</code></pre></p> <ol> <li>if (n := 10) &gt; 5:\uff1a\u8fd9\u662f\u4f7f\u7528\u6d77\u8c61\u8fd0\u7b97\u7b26\uff08:=\uff09\u7684\u5199\u6cd5\u3002\u6d77\u8c61\u8fd0\u7b97\u7b26\u5728\u8868\u8fbe\u5f0f\u4e2d\u8fdb\u884c\u8d4b\u503c\u64cd\u4f5c\u3002<ul> <li>(n := 10)\uff1a\u5c06\u53d8\u91cf n \u8d4b\u503c\u4e3a 10\uff0c\u540c\u65f6\u8fd4\u56de\u8fd9\u4e2a\u8d4b\u503c\u7ed3\u679c\u3002</li> <li> <p>5\uff1a\u68c0\u67e5\u8d4b\u503c\u540e\u7684 n \u662f\u5426\u5927\u4e8e 5\u3002\u5982\u679c\u6761\u4ef6\u4e3a\u771f\uff0c\u5219\u6267\u884c\u63a5\u4e0b\u6765\u7684\u4ee3\u7801\u5757\u3002</p> </li> </ul> </li> <li>print(n)\uff1a\u5982\u679c\u6761\u4ef6\u4e3a\u771f\uff0c\u6253\u5370\u53d8\u91cf n \u7684\u503c\uff08\u5373 10\uff09\u3002 \u6d77\u8c61\u8fd0\u7b97\u7b26\u7684\u4f18\u70b9\uff1a</li> </ol> <ul> <li>\u6d77\u8c61\u8fd0\u7b97\u7b26\uff08:=\uff09\u5141\u8bb8\u5728\u8868\u8fbe\u5f0f\u5185\u90e8\u8fdb\u884c\u8d4b\u503c\uff0c\u8fd9\u53ef\u4ee5\u51cf\u5c11\u4ee3\u7801\u7684\u91cd\u590d\uff0c\u63d0\u9ad8\u4ee3\u7801\u7684\u53ef\u8bfb\u6027\u548c\u7b80\u6d01\u6027\u3002</li> <li>\u5728\u4e0a\u8ff0\u4f8b\u5b50\u4e2d\uff0c\u4f20\u7edf\u5199\u6cd5\u9700\u8981\u5355\u72ec\u4e00\u884c\u6765\u8d4b\u503c n\uff0c\u7136\u540e\u5728 if \u8bed\u53e5\u4e2d\u8fdb\u884c\u6761\u4ef6\u68c0\u67e5\u3002\u800c\u4f7f\u7528\u6d77\u8c61\u8fd0\u7b97\u7b26\u7684\u5199\u6cd5\u53ef\u4ee5\u5728 if \u8bed\u53e5\u4e2d\u76f4\u63a5\u8fdb\u884c\u8d4b\u503c\u548c\u6761\u4ef6\u68c0\u67e5\u3002</li> </ul> <p>Warning</p> <p>is \u4e0e == \u533a\u522b\uff1a</p> <p>is \u7528\u4e8e\u5224\u65ad\u4e24\u4e2a\u53d8\u91cf\u5f15\u7528\u5bf9\u8c61\u662f\u5426\u4e3a\u540c\u4e00\u4e2a\uff0c == \u7528\u4e8e\u5224\u65ad\u5f15\u7528\u53d8\u91cf\u7684\u503c\u662f\u5426\u76f8\u7b49\u3002 Python<pre><code>&gt;&gt;&gt;a = [1, 2, 3]\n&gt;&gt;&gt; b = a\n&gt;&gt;&gt; b is a \nTrue\n&gt;&gt;&gt; b == a\nTrue\n&gt;&gt;&gt; b = a[:]\n&gt;&gt;&gt; b is a\nFalse\n&gt;&gt;&gt; b == a\nTrue\n</code></pre></p> <p>a = 10; b = 10 \u4e3a\u4ec0\u4e48a\u548cb\u7684\u5185\u5b58\u5730\u5740\u662f\u4e00\u6837\u7684\uff1f</p> <p>\u5728 Python \u4e2d\uff0c\u50cf\u6574\u6570\u8fd9\u6837\u7684\u4e0d\u53ef\u53d8\u7c7b\u578b\u6709\u4e00\u79cd\u4f18\u5316\u673a\u5236\uff0c\u79f0\u4e3a\u9a7b\u7559\u673a\u5236\uff08interning\uff09\u3002\u5bf9\u4e8e\u67d0\u4e9b\u8f83\u5c0f\u7684\u3001\u5e38\u7528\u7684\u6574\u6570\u5bf9\u8c61\uff08\u4f8b\u5982 -5 \u5230 256 \u4e4b\u95f4\u7684\u6574\u6570\uff09\uff0cPython \u4f1a\u5c06\u5b83\u4eec\u5728\u5185\u5b58\u4e2d\u9a7b\u7559\uff0c\u5373\u4e3a\u8fd9\u4e9b\u6570\u503c\u521b\u5efa\u5355\u4e00\u7684\u5185\u5b58\u5730\u5740\uff0c\u5e76\u91cd\u590d\u4f7f\u7528\u5b83\u4eec\u3002</p> <p>Warning</p> <p>\u5728 Python \u4e2d\uff0c<code>a = b[:]</code> \u8868\u793a\u521b\u5efa\u4e00\u4e2a\u5217\u8868 <code>b</code> \u7684\u6d45\u62f7\u8d1d\uff0c\u5e76\u5c06\u5176\u8d4b\u503c\u7ed9 <code>a</code>\u3002</p> <ul> <li><code>b[:]</code> \u662f\u5207\u7247\u64cd\u4f5c\u7b26\uff0c\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u5b83\u4f1a\u4ece\u5217\u8868 <code>b</code> \u4e2d\u53d6\u51fa\u6240\u6709\u5143\u7d20\uff0c\u751f\u6210\u4e00\u4e2a\u65b0\u7684\u5217\u8868\u3002\u8fd9\u4e2a\u65b0\u7684\u5217\u8868\u4e0e\u539f\u5217\u8868 <code>b</code> \u7684\u5143\u7d20\u76f8\u540c\uff0c\u4f46\u5b83\u662f\u4e00\u4e2a\u72ec\u7acb\u7684\u5bf9\u8c61\u3002</li> <li>\u901a\u8fc7 <code>a = b[:]</code>\uff0c<code>a</code> \u548c <code>b</code> \u5c06\u6307\u5411\u4e0d\u540c\u7684\u5bf9\u8c61\uff0c\u5c3d\u7ba1\u5b83\u4eec\u5305\u542b\u7684\u5143\u7d20\u5728\u6d45\u62f7\u8d1d\u65f6\u662f\u76f8\u540c\u7684\u3002</li> </ul> <p>\u6ce8\u610f\uff1a - \u8fd9\u662f\u6d45\u62f7\u8d1d\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u5982\u679c <code>b</code> \u4e2d\u7684\u5143\u7d20\u662f\u53ef\u53d8\u5bf9\u8c61\uff08\u6bd4\u5982\u5217\u8868\u4e2d\u7684\u5217\u8868\uff09\uff0c<code>a</code> \u548c <code>b</code> \u5bf9\u8fd9\u4e9b\u5185\u90e8\u5bf9\u8c61\u7684\u4fee\u6539\u4ecd\u7136\u4f1a\u4e92\u76f8\u5f71\u54cd\u3002</p> <p>\u4f8b\u5982\uff1a</p> Python<pre><code>b = [1, 2, 3]\na = b[:]\na[0] = 9\n\nprint(b)  # \u8f93\u51fa: [1, 2, 3]\nprint(a)  # \u8f93\u51fa: [9, 2, 3]\n</code></pre> <p>\u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c<code>a</code> \u662f <code>b</code> \u7684\u6d45\u62f7\u8d1d\uff0c\u4fee\u6539 <code>a</code> \u7684\u5143\u7d20\u4e0d\u4f1a\u5f71\u54cd <code>b</code>\u3002</p> <p>\u4f46\u662f\uff0c\u5982\u679c\u5217\u8868\u5305\u542b\u53ef\u53d8\u5bf9\u8c61\uff1a</p> Python<pre><code>b = [[1, 2], [3, 4]]\na = b[:]\na[0][0] = 9\n\nprint(b)  # \u8f93\u51fa: [[9, 2], [3, 4]]\nprint(a)  # \u8f93\u51fa: [[9, 2], [3, 4]]\n</code></pre> <p>\u4fee\u6539 <code>a</code> \u4e2d\u7684\u5d4c\u5957\u5217\u8868\u4f1a\u5f71\u54cd <code>b</code>\uff0c\u56e0\u4e3a\u8fd9\u53ea\u662f\u6d45\u62f7\u8d1d\uff0c\u5d4c\u5957\u5217\u8868\u4ecd\u7136\u5171\u4eab\u5f15\u7528\u3002</p> <p>Note</p> <p>and \u62e5\u6709\u66f4\u9ad8\u4f18\u5148\u7ea7:</p> <p>\u5b9e\u4f8b Python<pre><code>x = True\ny = False\nz = False\n\nif x or y and z:\n    print(\"yes\")\nelse:\n    print(\"no\")\n</code></pre> \u4ee5\u4e0a\u5b9e\u4f8b\u5148\u8ba1\u7b97 y and z \u5e76\u8fd4\u56de False \uff0c\u7136\u540e x or False \u8fd4\u56de True\uff0c\u8f93\u51fa\u7ed3\u679c\uff1ayes</p> <p>Note</p> <p>**\u4f18\u5148\u7ea7\u9ad8\u4e8e*</p>"}, {"location": "yuyan/Python/5/5/", "title": "Python \u63a8\u5bfc\u5f0f", "text": "<p>Python \u63a8\u5bfc\u5f0f\u662f\u4e00\u79cd\u72ec\u7279\u7684\u6570\u636e\u5904\u7406\u65b9\u5f0f\uff0c\u53ef\u4ee5\u4ece\u4e00\u4e2a\u6570\u636e\u5e8f\u5217\u6784\u5efa\u53e6\u4e00\u4e2a\u65b0\u7684\u6570\u636e\u5e8f\u5217\u7684\u7ed3\u6784\u4f53\u3002</p> <p>Python \u63a8\u5bfc\u5f0f\u662f\u4e00\u79cd\u5f3a\u5927\u4e14\u7b80\u6d01\u7684\u8bed\u6cd5\uff0c\u9002\u7528\u4e8e\u751f\u6210\u5217\u8868\u3001\u5b57\u5178\u3001\u96c6\u5408\u548c\u751f\u6210\u5668\u3002</p> <p>\u5728\u4f7f\u7528\u63a8\u5bfc\u5f0f\u65f6\uff0c\u9700\u8981\u6ce8\u610f\u53ef\u8bfb\u6027\uff0c\u5c3d\u91cf\u4fdd\u6301\u8868\u8fbe\u5f0f\u7b80\u6d01\uff0c\u4ee5\u514d\u5f71\u54cd\u4ee3\u7801\u7684\u53ef\u8bfb\u6027\u548c\u53ef\u7ef4\u62a4\u6027\u3002</p> <p>Python \u652f\u6301\u5404\u79cd\u6570\u636e\u7ed3\u6784\u7684\u63a8\u5bfc\u5f0f\uff1a</p> <ul> <li>\u5217\u8868(list)\u63a8\u5bfc\u5f0f</li> <li>\u5b57\u5178(dict)\u63a8\u5bfc\u5f0f</li> <li>\u96c6\u5408(set)\u63a8\u5bfc\u5f0f</li> <li>\u5143\u7ec4(tuple)\u63a8\u5bfc\u5f0f</li> </ul>"}, {"location": "yuyan/Python/5/5/#_1", "title": "\u5217\u8868\u63a8\u5bfc\u5f0f", "text": "<p>\u5217\u8868\u63a8\u5bfc\u5f0f\u683c\u5f0f\u4e3a\uff1a Text Only<pre><code>[\u8868\u8fbe\u5f0f for \u53d8\u91cf in \u5217\u8868] \n[out_exp_res for out_exp in input_list]\n\n\u6216\u8005 \n\n[\u8868\u8fbe\u5f0f for \u53d8\u91cf in \u5217\u8868 if \u6761\u4ef6]\n[out_exp_res for out_exp in input_list if condition]\n</code></pre></p> <ul> <li>out_exp_res\uff1a\u5217\u8868\u751f\u6210\u5143\u7d20\u8868\u8fbe\u5f0f\uff0c\u53ef\u4ee5\u662f\u6709\u8fd4\u56de\u503c\u7684\u51fd\u6570\u3002</li> <li>for out_exp in input_list\uff1a\u8fed\u4ee3 input_list \u5c06 out_exp \u4f20\u5165\u5230 out_exp_res \u8868\u8fbe\u5f0f\u4e2d\u3002</li> <li>if condition\uff1a\u6761\u4ef6\u8bed\u53e5\uff0c\u53ef\u4ee5\u8fc7\u6ee4\u5217\u8868\u4e2d\u4e0d\u7b26\u5408\u6761\u4ef6\u7684\u503c\u3002</li> </ul> <p>\u8fc7\u6ee4\u6389\u957f\u5ea6\u5c0f\u4e8e\u6216\u7b49\u4e8e3\u7684\u5b57\u7b26\u4e32\u5217\u8868\uff0c\u5e76\u5c06\u5269\u4e0b\u7684\u8f6c\u6362\u6210\u5927\u5199\u5b57\u6bcd\uff1a</p> <p>\u5b9e\u4f8b Python<pre><code>&gt;&gt;&gt; names = ['Bob','Tom','alice','Jerry','Wendy','Smith']\n&gt;&gt;&gt; new_names = [name.upper()for name in names if len(name)&gt;3]\n&gt;&gt;&gt; print(new_names)\n['ALICE', 'JERRY', 'WENDY', 'SMITH']\n</code></pre> \u8ba1\u7b97 30 \u4ee5\u5185\u53ef\u4ee5\u88ab 3 \u6574\u9664\u7684\u6574\u6570\uff1a</p> <p>\u5b9e\u4f8b Python<pre><code>&gt;&gt;&gt; multiples = [i for i in range(30) if i % 3 == 0]\n&gt;&gt;&gt; print(multiples)\n[0, 3, 6, 9, 12, 15, 18, 21, 24, 27]\n</code></pre></p>"}, {"location": "yuyan/Python/5/5/#_2", "title": "\u5b57\u5178\u63a8\u5bfc\u5f0f", "text": "<p>\u5b57\u5178\u63a8\u5bfc\u57fa\u672c\u683c\u5f0f\uff1a Text Only<pre><code>{ key_expr: value_expr for value in collection }\n\u6216\n{ key_expr: value_expr for value in collection if condition }\n</code></pre> \u4f7f\u7528\u5b57\u7b26\u4e32\u53ca\u5176\u957f\u5ea6\u521b\u5efa\u5b57\u5178\uff1a</p> <p>\u5b9e\u4f8b Python<pre><code>listdemo = ['Google','Runoob', 'Taobao']\n\u5c06\u5217\u8868\u4e2d\u5404\u5b57\u7b26\u4e32\u503c\u4e3a\u952e\uff0c\u5404\u5b57\u7b26\u4e32\u7684\u957f\u5ea6\u4e3a\u503c\uff0c\u7ec4\u6210\u952e\u503c\u5bf9\n&gt;&gt;&gt; newdict = {key:len(key) for key in listdemo}\n&gt;&gt;&gt; newdict\n{'Google': 6, 'Runoob': 6, 'Taobao': 6}\n</code></pre> \u63d0\u4f9b\u4e09\u4e2a\u6570\u5b57\uff0c\u4ee5\u4e09\u4e2a\u6570\u5b57\u4e3a\u952e\uff0c\u4e09\u4e2a\u6570\u5b57\u7684\u5e73\u65b9\u4e3a\u503c\u6765\u521b\u5efa\u5b57\u5178\uff1a</p> <p>\u5b9e\u4f8b Python<pre><code>&gt;&gt;&gt; dic = {x: x**2 for x in (2, 4, 6)}\n&gt;&gt;&gt; dic\n{2: 4, 4: 16, 6: 36}\n&gt;&gt;&gt; type(dic)\n&lt;class 'dict'&gt;\n</code></pre></p>"}, {"location": "yuyan/Python/5/5/#_3", "title": "\u96c6\u5408\u63a8\u5bfc\u5f0f", "text": "<p>\u96c6\u5408\u63a8\u5bfc\u5f0f\u57fa\u672c\u683c\u5f0f\uff1a Text Only<pre><code>{ expression for item in Sequence }\n\u6216\n{ expression for item in Sequence if conditional }\n</code></pre> \u8ba1\u7b97\u6570\u5b57 1,2,3 \u7684\u5e73\u65b9\u6570\uff1a</p> <p>\u5b9e\u4f8b Python<pre><code>&gt;&gt;&gt; setnew = {i**2 for i in (1,2,3)}\n&gt;&gt;&gt; setnew\n{1, 4, 9}\n</code></pre> \u5224\u65ad\u4e0d\u662f abc \u7684\u5b57\u6bcd\u5e76\u8f93\u51fa\uff1a</p> <p>\u5b9e\u4f8b Python<pre><code>&gt;&gt;&gt; a = {x for x in 'abracadabra' if x not in 'abc'}\n&gt;&gt;&gt; a\n{'d', 'r'}\n&gt;&gt;&gt; type(a)\n&lt;class 'set'&gt;\n</code></pre></p>"}, {"location": "yuyan/Python/5/5/#_4", "title": "\u5143\u7ec4\u63a8\u5bfc\u5f0f\uff08\u751f\u6210\u5668\u8868\u8fbe\u5f0f\uff09", "text": "<p>\u5143\u7ec4\u63a8\u5bfc\u5f0f\u53ef\u4ee5\u5229\u7528 range \u533a\u95f4\u3001\u5143\u7ec4\u3001\u5217\u8868\u3001\u5b57\u5178\u548c\u96c6\u5408\u7b49\u6570\u636e\u7c7b\u578b\uff0c\u5feb\u901f\u751f\u6210\u4e00\u4e2a\u6ee1\u8db3\u6307\u5b9a\u9700\u6c42\u7684\u5143\u7ec4\u3002</p> <p>\u5143\u7ec4\u63a8\u5bfc\u5f0f\u57fa\u672c\u683c\u5f0f\uff1a Python<pre><code>(expression for item in Sequence )\n\u6216\n(expression for item in Sequence if conditional )\n</code></pre> \u5143\u7ec4\u63a8\u5bfc\u5f0f\u548c\u5217\u8868\u63a8\u5bfc\u5f0f\u7684\u7528\u6cd5\u4e5f\u5b8c\u5168\u76f8\u540c\uff0c\u53ea\u662f\u5143\u7ec4\u63a8\u5bfc\u5f0f\u662f\u7528 () \u5706\u62ec\u53f7\u5c06\u5404\u90e8\u5206\u62ec\u8d77\u6765\uff0c\u800c\u5217\u8868\u63a8\u5bfc\u5f0f\u7528\u7684\u662f\u4e2d\u62ec\u53f7 []\uff0c\u53e6\u5916\u5143\u7ec4\u63a8\u5bfc\u5f0f\u8fd4\u56de\u7684\u7ed3\u679c\u662f\u4e00\u4e2a\u751f\u6210\u5668\u5bf9\u8c61\u3002</p> <p>\u4f8b\u5982\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u4e0b\u9762\u7684\u4ee3\u7801\u751f\u6210\u4e00\u4e2a\u5305\u542b\u6570\u5b57 1~9 \u7684\u5143\u7ec4\uff1a</p> <p>\u5b9e\u4f8b Python<pre><code>&gt;&gt;&gt; a = (x for x in range(1,10))\n&gt;&gt;&gt; a\n&lt;generator object &lt;genexpr&gt; at 0x7faf6ee20a50&gt;  # \u8fd4\u56de\u7684\u662f\u751f\u6210\u5668\u5bf9\u8c61\n\n&gt;&gt;&gt; tuple(a)       # \u4f7f\u7528 tuple() \u51fd\u6570\uff0c\u53ef\u4ee5\u76f4\u63a5\u5c06\u751f\u6210\u5668\u5bf9\u8c61\u8f6c\u6362\u6210\u5143\u7ec4\n(1, 2, 3, 4, 5, 6, 7, 8, 9)\n</code></pre></p> <p></p>"}, {"location": "yuyan/Python/6/6/", "title": "Python \u8fed\u4ee3\u5668\u4e0e\u751f\u6210\u5668", "text": ""}, {"location": "yuyan/Python/6/6/#_1", "title": "\u8fed\u4ee3\u5668", "text": "<p>\u8fed\u4ee3\u662f Python \u6700\u5f3a\u5927\u7684\u529f\u80fd\u4e4b\u4e00\uff0c\u662f\u8bbf\u95ee\u96c6\u5408\u5143\u7d20\u7684\u4e00\u79cd\u65b9\u5f0f\u3002</p> <p>\u8fed\u4ee3\u5668\u662f\u4e00\u4e2a\u53ef\u4ee5\u8bb0\u4f4f\u904d\u5386\u7684\u4f4d\u7f6e\u7684\u5bf9\u8c61\u3002</p> <p>\u8fed\u4ee3\u5668\u5bf9\u8c61\u4ece\u96c6\u5408\u7684\u7b2c\u4e00\u4e2a\u5143\u7d20\u5f00\u59cb\u8bbf\u95ee\uff0c\u76f4\u5230\u6240\u6709\u7684\u5143\u7d20\u88ab\u8bbf\u95ee\u5b8c\u7ed3\u675f\u3002\u8fed\u4ee3\u5668\u53ea\u80fd\u5f80\u524d\u4e0d\u4f1a\u540e\u9000\u3002</p> <p>\u8fed\u4ee3\u5668\u6709\u4e24\u4e2a\u57fa\u672c\u7684\u65b9\u6cd5\uff1aiter() \u548c next()\u3002</p> <p>\u5b57\u7b26\u4e32\uff0c\u5217\u8868\u6216\u5143\u7ec4\u5bf9\u8c61\u90fd\u53ef\u7528\u4e8e\u521b\u5efa\u8fed\u4ee3\u5668\uff1a</p> Python<pre><code>&gt;&gt;&gt; list=[1,2,3,4]\n&gt;&gt;&gt; it = iter(list)    # \u521b\u5efa\u8fed\u4ee3\u5668\u5bf9\u8c61\n&gt;&gt;&gt; print (next(it))   # \u8f93\u51fa\u8fed\u4ee3\u5668\u7684\u4e0b\u4e00\u4e2a\u5143\u7d20\n1\n&gt;&gt;&gt; print (next(it))\n2\n&gt;&gt;&gt;\n</code></pre>"}, {"location": "yuyan/Python/6/6/#_2", "title": "\u751f\u6210\u5668", "text": "<p>\u5728 Python \u4e2d\uff0c\u4f7f\u7528\u4e86 yield \u7684\u51fd\u6570\u88ab\u79f0\u4e3a\u751f\u6210\u5668\uff08generator\uff09\u3002</p> <p>yield \u662f\u4e00\u4e2a\u5173\u952e\u5b57\uff0c\u7528\u4e8e\u5b9a\u4e49\u751f\u6210\u5668\u51fd\u6570\uff0c\u751f\u6210\u5668\u51fd\u6570\u662f\u4e00\u79cd\u7279\u6b8a\u7684\u51fd\u6570\uff0c\u53ef\u4ee5\u5728\u8fed\u4ee3\u8fc7\u7a0b\u4e2d\u9010\u6b65\u4ea7\u751f\u503c\uff0c\u800c\u4e0d\u662f\u4e00\u6b21\u6027\u8fd4\u56de\u6240\u6709\u7ed3\u679c\u3002</p> <p>\u8ddf\u666e\u901a\u51fd\u6570\u4e0d\u540c\u7684\u662f\uff0c\u751f\u6210\u5668\u662f\u4e00\u4e2a\u8fd4\u56de\u8fed\u4ee3\u5668\u7684\u51fd\u6570\uff0c\u53ea\u80fd\u7528\u4e8e\u8fed\u4ee3\u64cd\u4f5c\uff0c\u66f4\u7b80\u5355\u70b9\u7406\u89e3\u751f\u6210\u5668\u5c31\u662f\u4e00\u4e2a\u8fed\u4ee3\u5668\u3002</p> <p>\u5f53\u5728\u751f\u6210\u5668\u51fd\u6570\u4e2d\u4f7f\u7528 yield \u8bed\u53e5\u65f6\uff0c\u51fd\u6570\u7684\u6267\u884c\u5c06\u4f1a\u6682\u505c\uff0c\u5e76\u5c06 yield \u540e\u9762\u7684\u8868\u8fbe\u5f0f\u4f5c\u4e3a\u5f53\u524d\u8fed\u4ee3\u7684\u503c\u8fd4\u56de\u3002</p> <p>\u7136\u540e\uff0c\u6bcf\u6b21\u8c03\u7528\u751f\u6210\u5668\u7684 next() \u65b9\u6cd5\u6216\u4f7f\u7528 for \u5faa\u73af\u8fdb\u884c\u8fed\u4ee3\u65f6\uff0c\u51fd\u6570\u4f1a\u4ece\u4e0a\u6b21\u6682\u505c\u7684\u5730\u65b9\u7ee7\u7eed\u6267\u884c\uff0c\u76f4\u5230\u518d\u6b21\u9047\u5230 yield \u8bed\u53e5\u3002\u8fd9\u6837\uff0c\u751f\u6210\u5668\u51fd\u6570\u53ef\u4ee5\u9010\u6b65\u4ea7\u751f\u503c\uff0c\u800c\u4e0d\u9700\u8981\u4e00\u6b21\u6027\u8ba1\u7b97\u5e76\u8fd4\u56de\u6240\u6709\u7ed3\u679c\u3002</p> <p>\u8c03\u7528\u4e00\u4e2a\u751f\u6210\u5668\u51fd\u6570\uff0c\u8fd4\u56de\u7684\u662f\u4e00\u4e2a\u8fed\u4ee3\u5668\u5bf9\u8c61\u3002</p> <p>\u4e0b\u9762\u662f\u4e00\u4e2a\u7b80\u5355\u7684\u793a\u4f8b\uff0c\u5c55\u793a\u4e86\u751f\u6210\u5668\u51fd\u6570\u7684\u4f7f\u7528\uff1a</p> <p>\u5b9e\u4f8b Python<pre><code>def countdown(n):\n    while n &gt; 0:\n        yield n\n        n -= 1\n\n# \u521b\u5efa\u751f\u6210\u5668\u5bf9\u8c61\ngenerator = countdown(5)\n\n# \u901a\u8fc7\u8fed\u4ee3\u751f\u6210\u5668\u83b7\u53d6\u503c\nprint(next(generator))  # \u8f93\u51fa: 5\nprint(next(generator))  # \u8f93\u51fa: 4\nprint(next(generator))  # \u8f93\u51fa: 3\n\n# \u4f7f\u7528 for \u5faa\u73af\u8fed\u4ee3\u751f\u6210\u5668\nfor value in generator:\n    print(value)  # \u8f93\u51fa: 2 1\n</code></pre> \u4ee5\u4e0a\u5b9e\u4f8b\u4e2d\uff0ccountdown \u51fd\u6570\u662f\u4e00\u4e2a\u751f\u6210\u5668\u51fd\u6570\u3002\u5b83\u4f7f\u7528 yield \u8bed\u53e5\u9010\u6b65\u4ea7\u751f\u4ece n \u5230 1 \u7684\u5012\u6570\u6570\u5b57\u3002\u5728\u6bcf\u6b21\u8c03\u7528 yield \u8bed\u53e5\u65f6\uff0c\u51fd\u6570\u4f1a\u8fd4\u56de\u5f53\u524d\u7684\u5012\u6570\u503c\uff0c\u5e76\u5728\u4e0b\u4e00\u6b21\u8c03\u7528\u65f6\u4ece\u4e0a\u6b21\u6682\u505c\u7684\u5730\u65b9\u7ee7\u7eed\u6267\u884c\u3002</p> <p>\u901a\u8fc7\u521b\u5efa\u751f\u6210\u5668\u5bf9\u8c61\u5e76\u4f7f\u7528 next() \u51fd\u6570\u6216 for \u5faa\u73af\u8fed\u4ee3\u751f\u6210\u5668\uff0c\u6211\u4eec\u53ef\u4ee5\u9010\u6b65\u83b7\u53d6\u751f\u6210\u5668\u51fd\u6570\u4ea7\u751f\u7684\u503c\u3002\u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c\u6211\u4eec\u9996\u5148\u4f7f\u7528 next() \u51fd\u6570\u83b7\u53d6\u524d\u4e09\u4e2a\u5012\u6570\u503c\uff0c\u7136\u540e\u901a\u8fc7 for \u5faa\u73af\u83b7\u53d6\u5269\u4e0b\u7684\u4e24\u4e2a\u5012\u6570\u503c\u3002</p> <p>\u751f\u6210\u5668\u51fd\u6570\u7684\u4f18\u52bf\u662f\u5b83\u4eec\u53ef\u4ee5\u6309\u9700\u751f\u6210\u503c\uff0c\u907f\u514d\u4e00\u6b21\u6027\u751f\u6210\u5927\u91cf\u6570\u636e\u5e76\u5360\u7528\u5927\u91cf\u5185\u5b58\u3002\u6b64\u5916\uff0c\u751f\u6210\u5668\u8fd8\u53ef\u4ee5\u4e0e\u5176\u4ed6\u8fed\u4ee3\u5de5\u5177\uff08\u5982for\u5faa\u73af\uff09\u65e0\u7f1d\u914d\u5408\u4f7f\u7528\uff0c\u63d0\u4f9b\u7b80\u6d01\u548c\u9ad8\u6548\u7684\u8fed\u4ee3\u65b9\u5f0f\u3002</p> <p>\u6267\u884c\u4ee5\u4e0a\u7a0b\u5e8f\uff0c\u8f93\u51fa\u7ed3\u679c\u5982\u4e0b\uff1a Text Only<pre><code>5\n4\n3\n2\n1\n</code></pre> \u4ee5\u4e0b\u5b9e\u4f8b\u4f7f\u7528 yield \u5b9e\u73b0\u6590\u6ce2\u90a3\u5951\u6570\u5217\uff1a</p> <p>\u5b9e\u4f8b(Python 3.0+) Python<pre><code>#!/usr/bin/python3\n\nimport sys\n\ndef fibonacci(n): # \u751f\u6210\u5668\u51fd\u6570 - \u6590\u6ce2\u90a3\u5951\n    a, b, counter = 0, 1, 0\n    while True:\n        if (counter &gt; n): \n            return\n        yield a\n        a, b = b, a + b\n        counter += 1\nf = fibonacci(10) # f \u662f\u4e00\u4e2a\u8fed\u4ee3\u5668\uff0c\u7531\u751f\u6210\u5668\u8fd4\u56de\u751f\u6210\n\nwhile True:\n    try:\n        print (next(f), end=\" \")\n    except StopIteration:\n        sys.exit()\n</code></pre> \u6267\u884c\u4ee5\u4e0a\u7a0b\u5e8f\uff0c\u8f93\u51fa\u7ed3\u679c\u5982\u4e0b\uff1a Text Only<pre><code>0 1 1 2 3 5 8 13 21 34 55\n</code></pre></p>"}, {"location": "yuyan/Python/7/7/", "title": "Python \u51fd\u6570", "text": ""}, {"location": "yuyan/Python/7/7/#_1", "title": "\u5b9a\u4e49", "text": "<p>\u4f60\u53ef\u4ee5\u5b9a\u4e49\u4e00\u4e2a\u7531\u81ea\u5df1\u60f3\u8981\u529f\u80fd\u7684\u51fd\u6570\uff0c\u4ee5\u4e0b\u662f\u7b80\u5355\u7684\u89c4\u5219\uff1a</p> <ul> <li>\u51fd\u6570\u4ee3\u7801\u5757\u4ee5 def \u5173\u952e\u8bcd\u5f00\u5934\uff0c\u540e\u63a5\u51fd\u6570\u6807\u8bc6\u7b26\u540d\u79f0\u548c\u5706\u62ec\u53f7 ()\u3002</li> <li>\u4efb\u4f55\u4f20\u5165\u53c2\u6570\u548c\u81ea\u53d8\u91cf\u5fc5\u987b\u653e\u5728\u5706\u62ec\u53f7\u4e2d\u95f4\uff0c\u5706\u62ec\u53f7\u4e4b\u95f4\u53ef\u4ee5\u7528\u4e8e\u5b9a\u4e49\u53c2\u6570\u3002</li> <li>\u51fd\u6570\u7684\u7b2c\u4e00\u884c\u8bed\u53e5\u53ef\u4ee5\u9009\u62e9\u6027\u5730\u4f7f\u7528\u6587\u6863\u5b57\u7b26\u4e32\u2014\u7528\u4e8e\u5b58\u653e\u51fd\u6570\u8bf4\u660e\u3002</li> <li>\u51fd\u6570\u5185\u5bb9\u4ee5\u5192\u53f7 : \u8d77\u59cb\uff0c\u5e76\u4e14\u7f29\u8fdb\u3002</li> <li>return [\u8868\u8fbe\u5f0f] \u7ed3\u675f\u51fd\u6570\uff0c\u9009\u62e9\u6027\u5730\u8fd4\u56de\u4e00\u4e2a\u503c\u7ed9\u8c03\u7528\u65b9\uff0c\u4e0d\u5e26\u8868\u8fbe\u5f0f\u7684 return \u76f8\u5f53\u4e8e\u8fd4\u56de None\u3002</li> </ul>"}, {"location": "yuyan/Python/7/7/#_2", "title": "\u51fd\u6570\u8c03\u7528", "text": "<p>\u5b9a\u4e49\u4e00\u4e2a\u51fd\u6570\uff1a\u7ed9\u4e86\u51fd\u6570\u4e00\u4e2a\u540d\u79f0\uff0c\u6307\u5b9a\u4e86\u51fd\u6570\u91cc\u5305\u542b\u7684\u53c2\u6570\uff0c\u548c\u4ee3\u7801\u5757\u7ed3\u6784\u3002</p> <p>\u8fd9\u4e2a\u51fd\u6570\u7684\u57fa\u672c\u7ed3\u6784\u5b8c\u6210\u4ee5\u540e\uff0c\u4f60\u53ef\u4ee5\u901a\u8fc7\u53e6\u4e00\u4e2a\u51fd\u6570\u8c03\u7528\u6267\u884c\uff0c\u4e5f\u53ef\u4ee5\u76f4\u63a5\u4ece Python \u547d\u4ee4\u63d0\u793a\u7b26\u6267\u884c\u3002</p>"}, {"location": "yuyan/Python/7/7/#_3", "title": "\u53c2\u6570\u4f20\u9012", "text": "<p>\u5728 python \u4e2d\uff0c\u7c7b\u578b\u5c5e\u4e8e\u5bf9\u8c61\uff0c\u5bf9\u8c61\u6709\u4e0d\u540c\u7c7b\u578b\u7684\u533a\u5206\uff0c\u53d8\u91cf\u662f\u6ca1\u6709\u7c7b\u578b\u7684\uff1a Python<pre><code>a=[1,2,3]\n\na=\"Runoob\"\n</code></pre> \u4ee5\u4e0a\u4ee3\u7801\u4e2d\uff0c[1,2,3] \u662f List \u7c7b\u578b\uff0c\"Runoob\" \u662f String \u7c7b\u578b\uff0c\u800c\u53d8\u91cf a \u662f\u6ca1\u6709\u7c7b\u578b\uff0c\u5b83\u4ec5\u4ec5\u662f\u4e00\u4e2a\u5bf9\u8c61\u7684\u5f15\u7528\uff08\u4e00\u4e2a\u6307\u9488\uff09\uff0c\u53ef\u4ee5\u662f\u6307\u5411 List \u7c7b\u578b\u5bf9\u8c61\uff0c\u4e5f\u53ef\u4ee5\u662f\u6307\u5411 String \u7c7b\u578b\u5bf9\u8c61\u3002</p>"}, {"location": "yuyan/Python/7/7/#mutableimmutable", "title": "\u53ef\u66f4\u6539(mutable)\u4e0e\u4e0d\u53ef\u66f4\u6539(immutable)\u5bf9\u8c61", "text": "<p>\u5728 python \u4e2d\uff0cstrings, tuples, \u548c numbers \u662f\u4e0d\u53ef\u66f4\u6539\u7684\u5bf9\u8c61\uff0c\u800c list,dict \u7b49\u5219\u662f\u53ef\u4ee5\u4fee\u6539\u7684\u5bf9\u8c61\u3002</p> <ul> <li> <p>\u4e0d\u53ef\u53d8\u7c7b\u578b\uff1a\u53d8\u91cf\u8d4b\u503c a=5 \u540e\u518d\u8d4b\u503c a=10\uff0c\u8fd9\u91cc\u5b9e\u9645\u662f\u65b0\u751f\u6210\u4e00\u4e2a int \u503c\u5bf9\u8c61 10\uff0c\u518d\u8ba9 a \u6307\u5411\u5b83\uff0c\u800c 5 \u88ab\u4e22\u5f03\uff0c\u4e0d\u662f\u6539\u53d8 a \u7684\u503c\uff0c\u76f8\u5f53\u4e8e\u65b0\u751f\u6210\u4e86 a\u3002</p> </li> <li> <p>\u53ef\u53d8\u7c7b\u578b\uff1a\u53d8\u91cf\u8d4b\u503c la=[1,2,3,4] \u540e\u518d\u8d4b\u503c la[2]=5 \u5219\u662f\u5c06 list la \u7684\u7b2c\u4e09\u4e2a\u5143\u7d20\u503c\u66f4\u6539\uff0c\u672c\u8eabla\u6ca1\u6709\u52a8\uff0c\u53ea\u662f\u5176\u5185\u90e8\u7684\u4e00\u90e8\u5206\u503c\u88ab\u4fee\u6539\u4e86\u3002</p> </li> </ul> <p>python \u51fd\u6570\u7684\u53c2\u6570\u4f20\u9012\uff1a</p> <ul> <li> <p>\u4e0d\u53ef\u53d8\u7c7b\u578b\uff1a\u7c7b\u4f3c C++ \u7684\u503c\u4f20\u9012\uff0c\u5982\u6574\u6570\u3001\u5b57\u7b26\u4e32\u3001\u5143\u7ec4\u3002\u5982 fun(a)\uff0c\u4f20\u9012\u7684\u53ea\u662f a \u7684\u503c\uff0c\u6ca1\u6709\u5f71\u54cd a \u5bf9\u8c61\u672c\u8eab\u3002\u5982\u679c\u5728 fun(a) \u5185\u90e8\u4fee\u6539 a \u7684\u503c\uff0c\u5219\u662f\u65b0\u751f\u6210\u4e00\u4e2a a \u7684\u5bf9\u8c61\u3002</p> </li> <li> <p>\u53ef\u53d8\u7c7b\u578b\uff1a\u7c7b\u4f3c C++ \u7684\u5f15\u7528\u4f20\u9012\uff0c\u5982 \u5217\u8868\uff0c\u5b57\u5178\u3002\u5982 fun(la)\uff0c\u5219\u662f\u5c06 la \u771f\u6b63\u7684\u4f20\u8fc7\u53bb\uff0c\u4fee\u6539\u540e fun \u5916\u90e8\u7684 la \u4e5f\u4f1a\u53d7\u5f71\u54cd</p> </li> </ul> <p>python \u4e2d\u4e00\u5207\u90fd\u662f\u5bf9\u8c61\uff0c\u4e25\u683c\u610f\u4e49\u6211\u4eec\u4e0d\u80fd\u8bf4\u503c\u4f20\u9012\u8fd8\u662f\u5f15\u7528\u4f20\u9012\uff0c\u6211\u4eec\u5e94\u8be5\u8bf4\u4f20\u4e0d\u53ef\u53d8\u5bf9\u8c61\u548c\u4f20\u53ef\u53d8\u5bf9\u8c61\u3002</p> Python<pre><code>def change(a):\n    print(id(a))   # \u6307\u5411\u7684\u662f\u540c\u4e00\u4e2a\u5bf9\u8c61\n    a=10\n    print(id(a))   # \u4e00\u4e2a\u65b0\u5bf9\u8c61\n\na=1\nprint(id(a))\nchange(a)\n</code></pre>"}, {"location": "yuyan/Python/7/7/#_4", "title": "\u9ed8\u8ba4\u53c2\u6570", "text": "<p>\u8c03\u7528\u51fd\u6570\u65f6\uff0c\u5982\u679c\u6ca1\u6709\u4f20\u9012\u53c2\u6570\uff0c\u5219\u4f1a\u4f7f\u7528\u9ed8\u8ba4\u53c2\u6570\u3002\u4ee5\u4e0b\u5b9e\u4f8b\u4e2d\u5982\u679c\u6ca1\u6709\u4f20\u5165 age \u53c2\u6570\uff0c\u5219\u4f7f\u7528\u9ed8\u8ba4\u503c\uff1a Python<pre><code>#!/usr/bin/python3\n\n#\u53ef\u5199\u51fd\u6570\u8bf4\u660e\ndef printinfo( name, age = 15 ):\n   \"\u6253\u5370\u4efb\u4f55\u4f20\u5165\u7684\u5b57\u7b26\u4e32\"\n   print (\"\u540d\u5b57: \", name)\n   print (\"\u5e74\u9f84: \", age)\n   return\n\n#\u8c03\u7528printinfo\u51fd\u6570\nprintinfo( age=20, name=\"xiu1\" )\nprint (\"------------------------\")\nprintinfo( name=\"xiu2\" )\n</code></pre></p>"}, {"location": "yuyan/Python/7/7/#_5", "title": "\u4e0d\u5b9a\u957f\u53c2\u6570", "text": "<p>\u4f60\u53ef\u80fd\u9700\u8981\u4e00\u4e2a\u51fd\u6570\u80fd\u5904\u7406\u6bd4\u5f53\u521d\u58f0\u660e\u65f6\u66f4\u591a\u7684\u53c2\u6570\u3002\u8fd9\u4e9b\u53c2\u6570\u53eb\u505a\u4e0d\u5b9a\u957f\u53c2\u6570\uff0c\u548c\u4e0a\u8ff0 2 \u79cd\u53c2\u6570\u4e0d\u540c\uff0c\u58f0\u660e\u65f6\u4e0d\u4f1a\u547d\u540d\u3002\u57fa\u672c\u8bed\u6cd5\u5982\u4e0b\uff1a Python<pre><code>def functionname([formal_args,] *var_args_tuple ):\n   \"\u51fd\u6570_\u6587\u6863\u5b57\u7b26\u4e32\"\n   function_suite\n   return [expression]\n</code></pre> \u52a0\u4e86\u661f\u53f7 * \u7684\u53c2\u6570\u4f1a\u4ee5\u5143\u7ec4(tuple)\u7684\u5f62\u5f0f\u5bfc\u5165\uff0c\u5b58\u653e\u6240\u6709\u672a\u547d\u540d\u7684\u53d8\u91cf\u53c2\u6570\u3002</p> <p>\u5b9e\u4f8b(Python 3.0+) Python<pre><code>#!/usr/bin/python3\n\n# \u53ef\u5199\u51fd\u6570\u8bf4\u660e\ndef printinfo( arg1, *vartuple ):\n   \"\u6253\u5370\u4efb\u4f55\u4f20\u5165\u7684\u53c2\u6570\"\n   print (\"\u8f93\u51fa: \")\n   print (arg1)\n   print (vartuple)\n\n# \u8c03\u7528printinfo \u51fd\u6570\nprintinfo( 70, 60, 50 )\n</code></pre> \u4ee5\u4e0a\u5b9e\u4f8b\u8f93\u51fa\u7ed3\u679c\uff1a</p> <p>\u8f93\u51fa:  Text Only<pre><code>70\n(60, 50)\n</code></pre></p> <p>\u5982\u679c\u5728\u51fd\u6570\u8c03\u7528\u65f6\u6ca1\u6709\u6307\u5b9a\u53c2\u6570\uff0c\u5b83\u5c31\u662f\u4e00\u4e2a\u7a7a\u5143\u7ec4\u3002\u6211\u4eec\u4e5f\u53ef\u4ee5\u4e0d\u5411\u51fd\u6570\u4f20\u9012\u672a\u547d\u540d\u7684\u53d8\u91cf\u3002\u5982\u4e0b\u5b9e\u4f8b\uff1a</p> <p>Python<pre><code>#!/usr/bin/python3\n\n# \u53ef\u5199\u51fd\u6570\u8bf4\u660e\ndef printinfo( arg1, *vartuple ):\n   \"\u6253\u5370\u4efb\u4f55\u4f20\u5165\u7684\u53c2\u6570\"\n   print (\"\u8f93\u51fa: \")\n   print (arg1)\n   for var in vartuple:\n      print (var)\n   return\n\n# \u8c03\u7528printinfo \u51fd\u6570\nprintinfo( 10 )\nprintinfo( 70, 60, 50 )\n</code></pre> \u4ee5\u4e0a\u5b9e\u4f8b\u8f93\u51fa\u7ed3\u679c\uff1a</p> <p>\u8f93\u51fa: Text Only<pre><code>10\n</code></pre> \u8f93\u51fa: Text Only<pre><code>70\n60\n50\n</code></pre></p> <p>**\u5219\u662f\u4f20\u5165\u5b57\u5178 Python<pre><code>printinfo(1, a=2,b=3)\n</code></pre></p>"}, {"location": "yuyan/Python/7/7/#_6", "title": "\u533f\u540d\u51fd\u6570", "text": "<p>Python \u4f7f\u7528 lambda \u6765\u521b\u5efa\u533f\u540d\u51fd\u6570\u3002</p> <p>\u6240\u8c13\u533f\u540d\uff0c\u610f\u5373\u4e0d\u518d\u4f7f\u7528 def \u8bed\u53e5\u8fd9\u6837\u6807\u51c6\u7684\u5f62\u5f0f\u5b9a\u4e49\u4e00\u4e2a\u51fd\u6570\u3002</p> <ul> <li>lambda \u53ea\u662f\u4e00\u4e2a\u8868\u8fbe\u5f0f\uff0c\u51fd\u6570\u4f53\u6bd4 def \u7b80\u5355\u5f88\u591a\u3002</li> <li>lambda \u7684\u4e3b\u4f53\u662f\u4e00\u4e2a\u8868\u8fbe\u5f0f\uff0c\u800c\u4e0d\u662f\u4e00\u4e2a\u4ee3\u7801\u5757\u3002\u4ec5\u4ec5\u80fd\u5728 lambda \u8868\u8fbe\u5f0f\u4e2d\u5c01\u88c5\u6709\u9650\u7684\u903b\u8f91\u8fdb\u53bb\u3002</li> <li>lambda \u51fd\u6570\u62e5\u6709\u81ea\u5df1\u7684\u547d\u540d\u7a7a\u95f4\uff0c\u4e14\u4e0d\u80fd\u8bbf\u95ee\u81ea\u5df1\u53c2\u6570\u5217\u8868\u4e4b\u5916\u6216\u5168\u5c40\u547d\u540d\u7a7a\u95f4\u91cc\u7684\u53c2\u6570\u3002</li> <li>\u867d\u7136 lambda \u51fd\u6570\u770b\u8d77\u6765\u53ea\u80fd\u5199\u4e00\u884c\uff0c\u5374\u4e0d\u7b49\u540c\u4e8e C \u6216 C++ \u7684\u5185\u8054\u51fd\u6570\uff0c\u5185\u8054\u51fd\u6570\u7684\u76ee\u7684\u662f\u8c03\u7528\u5c0f\u51fd\u6570\u65f6\u4e0d\u5360\u7528\u6808\u5185\u5b58\u4ece\u800c\u51cf\u5c11\u51fd\u6570\u8c03\u7528\u7684\u5f00\u9500\uff0c\u63d0\u9ad8\u4ee3\u7801\u7684\u6267\u884c\u901f\u5ea6\u3002 \u8bed\u6cd5</li> <li>lambda \u51fd\u6570\u7684\u8bed\u6cd5\u53ea\u5305\u542b\u4e00\u4e2a\u8bed\u53e5\uff0c\u5982\u4e0b\uff1a Python<pre><code>lambda [arg1 [,arg2,.....argn]]:expression\n</code></pre> \u8bbe\u7f6e\u53c2\u6570 a \u52a0\u4e0a 10:</li> </ul> <p>\u5b9e\u4f8b Python<pre><code>x = lambda a : a + 10\nprint(x(5))\n</code></pre> \u4ee5\u4e0a\u5b9e\u4f8b\u8f93\u51fa\u7ed3\u679c\uff1a Text Only<pre><code>15\n</code></pre> \u4ee5\u4e0b\u5b9e\u4f8b\u533f\u540d\u51fd\u6570\u8bbe\u7f6e\u4e24\u4e2a\u53c2\u6570\uff1a</p> <p>Python<pre><code>#!/usr/bin/python3\n\n# \u53ef\u5199\u51fd\u6570\u8bf4\u660e\nsum = lambda arg1, arg2: arg1 + arg2\n\n# \u8c03\u7528sum\u51fd\u6570\nprint (\"\u76f8\u52a0\u540e\u7684\u503c\u4e3a : \", sum( 10, 20 ))\nprint (\"\u76f8\u52a0\u540e\u7684\u503c\u4e3a : \", sum( 20, 20 ))\n</code></pre> \u4ee5\u4e0a\u5b9e\u4f8b\u8f93\u51fa\u7ed3\u679c\uff1a Text Only<pre><code>\u76f8\u52a0\u540e\u7684\u503c\u4e3a :  30\n\u76f8\u52a0\u540e\u7684\u503c\u4e3a :  40\n</code></pre> \u6211\u4eec\u53ef\u4ee5\u5c06\u533f\u540d\u51fd\u6570\u5c01\u88c5\u5728\u4e00\u4e2a\u51fd\u6570\u5185\uff0c\u8fd9\u6837\u53ef\u4ee5\u4f7f\u7528\u540c\u6837\u7684\u4ee3\u7801\u6765\u521b\u5efa\u591a\u4e2a\u533f\u540d\u51fd\u6570\u3002</p> <p>\u4ee5\u4e0b\u5b9e\u4f8b\u5c06\u533f\u540d\u51fd\u6570\u5c01\u88c5\u5728 myfunc \u51fd\u6570\u4e2d\uff0c\u901a\u8fc7\u4f20\u5165\u4e0d\u540c\u7684\u53c2\u6570\u6765\u521b\u5efa\u4e0d\u540c\u7684\u533f\u540d\u51fd\u6570\uff1a</p> <p>Python<pre><code>def myfunc(n):\n  return lambda a : a * n\n\nmydoubler = myfunc(2)\nmytripler = myfunc(3)\n\nprint(mydoubler(11))\nprint(mytripler(11))\n</code></pre> \u4ee5\u4e0a\u5b9e\u4f8b\u8f93\u51fa\u7ed3\u679c\uff1a Text Only<pre><code>22\n33\n</code></pre></p> <p>\u53ef\u4ee5\u548c\u5176\u4ed6\u51fd\u6570\u7ec4\u5408\u4f7f\u7528\u3002 Python<pre><code>numbers = [1, 2, 3, 4, 5, 6, 7, 8]\neven_numbers = list(filter(lambda x: x % 2 == 0, numbers))\nprint(even_numbers)  # \u8f93\u51fa\uff1a[2, 4, 6, 8]\n</code></pre></p> <p>Warning</p> <p>\u5728 Python \u4e2d\uff0clambda \u548c C \u4e2d\u7684 #define \u5e76\u4e0d\u662f\u7b49\u4ef7\u7684\uff0c\u5c3d\u7ba1\u5b83\u4eec\u90fd\u53ef\u4ee5\u7528\u6765\u7b80\u5316\u4ee3\u7801\u3002</p> <ul> <li> <p>lambda\uff08Python\uff09\uff1alambda \u8868\u8fbe\u5f0f\u7528\u4e8e\u521b\u5efa\u533f\u540d\u51fd\u6570\uff0c\u4e5f\u5c31\u662f\u6ca1\u6709\u540d\u79f0\u7684\u7b80\u77ed\u51fd\u6570\u3002\u5b83\u53ef\u4ee5\u63a5\u53d7\u591a\u4e2a\u53c2\u6570\u5e76\u8fd4\u56de\u4e00\u4e2a\u5355\u4e00\u7684\u8868\u8fbe\u5f0f\u7ed3\u679c\u3002\u5176\u5178\u578b\u7528\u9014\u662f\u4e3a\u4e86\u5728\u9700\u8981\u7b80\u5355\u51fd\u6570\u65f6\u5185\u8054\u5b9a\u4e49\uff0c\u800c\u4e0d\u9700\u8981\u5355\u72ec\u7528 def \u6765\u5b9a\u4e49\u51fd\u6570\u3002 Python<pre><code># Python\u4e2d\u7684lambda\nsquare = lambda x: x * x\nprint(square(5))  # \u8f93\u51fa 25\n</code></pre></p> </li> <li> <p>#define\uff08C\uff09\uff1a#define \u662f\u4e00\u79cd\u9884\u5904\u7406\u5668\u6307\u4ee4\uff0c\u7528\u4e8e\u5b9a\u4e49\u5b8f\u3002\u5b8f\u53ef\u4ee5\u662f\u7b80\u5355\u7684\u5e38\u91cf\u66ff\u6362\uff08\u6bd4\u5982\u5b9a\u4e49\u4e00\u4e2a\u5e38\u91cf\u503c\uff09\uff0c\u4e5f\u53ef\u4ee5\u662f\u5e26\u53c2\u6570\u7684\u6587\u672c\u66ff\u6362\u3002\u9884\u5904\u7406\u5668\u4f1a\u5728\u7f16\u8bd1\u524d\u5c06 #define \u66ff\u6362\u6210\u5bf9\u5e94\u7684\u6587\u672c\uff0c\u56e0\u800c\u5b83\u5e76\u4e0d\u662f\u771f\u6b63\u7684\u51fd\u6570\u8c03\u7528\u3002 Python<pre><code>// C\u4e2d\u7684#define\n#define SQUARE(x) ((x) * (x))\nprintf(\"%d\\n\", SQUARE(5));  // \u8f93\u51fa 25\n</code></pre></p> </li> </ul> <p>\u4e3b\u8981\u533a\u522b</p> Text Only<pre><code>- \u51fd\u6570\u548c\u6587\u672c\u66ff\u6362\uff1alambda \u662f\u521b\u5efa\u533f\u540d\u51fd\u6570\uff0c\u800c #define \u4ec5\u662f\u7b80\u5355\u7684\u6587\u672c\u66ff\u6362\u3002\n- \u4f5c\u7528\u8303\u56f4\uff1alambda \u5728\u8fd0\u884c\u65f6\u5b9a\u4e49\u5e76\u6267\u884c\uff0c\u800c #define \u5728\u7f16\u8bd1\u65f6\u66ff\u6362\u3002\n- \u7c7b\u578b\u5b89\u5168\uff1alambda \u652f\u6301 Python \u7684\u7c7b\u578b\u7cfb\u7edf\uff0c\u800c #define \u4e0d\u8fdb\u884c\u7c7b\u578b\u68c0\u67e5\u3002\n</code></pre> <p>\u56e0\u6b64\uff0c\u53ef\u4ee5\u8bf4 lambda \u66f4\u7c7b\u4f3c\u4e8e\u51fd\u6570\uff0c\u800c\u4e0d\u662f #define\u3002</p>"}, {"location": "yuyan/Python/7/7/#_7", "title": "\u5f3a\u5236\u4f4d\u7f6e\u53c2\u6570", "text": "<p>Python3.8 \u65b0\u589e\u4e86\u4e00\u4e2a\u51fd\u6570\u5f62\u53c2\u8bed\u6cd5 / \u7528\u6765\u6307\u660e\u51fd\u6570\u5f62\u53c2\u5fc5\u987b\u4f7f\u7528\u6307\u5b9a\u4f4d\u7f6e\u53c2\u6570\uff0c\u4e0d\u80fd\u4f7f\u7528\u5173\u952e\u5b57\u53c2\u6570\u7684\u5f62\u5f0f\u3002</p> <p>\u5728\u4ee5\u4e0b\u7684\u4f8b\u5b50\u4e2d\uff0c\u5f62\u53c2 a \u548c b \u5fc5\u987b\u4f7f\u7528\u6307\u5b9a\u4f4d\u7f6e\u53c2\u6570\uff0cc \u6216 d \u53ef\u4ee5\u662f\u4f4d\u7f6e\u5f62\u53c2\u6216\u5173\u952e\u5b57\u5f62\u53c2\uff0c\u800c e \u548c f \u8981\u6c42\u4e3a\u5173\u952e\u5b57\u5f62\u53c2: Python<pre><code>def f(a, b, /, c, d, *, e, f):\n    print(a, b, c, d, e, f)\n</code></pre> \u4ee5\u4e0b\u4f7f\u7528\u65b9\u6cd5\u662f\u6b63\u786e\u7684: Python<pre><code>f(10, 20, 30, d=40, e=50, f=60)\n</code></pre> \u4ee5\u4e0b\u4f7f\u7528\u65b9\u6cd5\u4f1a\u53d1\u751f\u9519\u8bef: Python<pre><code>f(10, b=20, c=30, d=40, e=50, f=60)   # b \u4e0d\u80fd\u4f7f\u7528\u5173\u952e\u5b57\u53c2\u6570\u7684\u5f62\u5f0f\nf(10, 20, 30, 40, 50, f=60)           # e \u5fc5\u987b\u4f7f\u7528\u5173\u952e\u5b57\u53c2\u6570\u7684\u5f62\u5f0f\n</code></pre></p>"}, {"location": "yuyan/Python/8/8/", "title": "Python \u88c5\u9970\u5668", "text": ""}, {"location": "yuyan/Verilog/", "title": "Index", "text": "<p>Note</p> <p>\u8fd9\u662f\u5728\u505a\u9898\u4e2d\u603b\u7ed3\u51fa\u7684\u5c0f\u77e5\u8bc6\u70b9\u3002</p>"}, {"location": "yuyan/Verilog/1/", "title": "Verilog language", "text": ""}, {"location": "yuyan/Verilog/1/#implicit-nets", "title": "Implicit nets", "text": "<p>Implicit nets are often a source of hard-to-detect bugs. In Verilog, net-type signals can be implicitly created by an assign statement or by attaching something undeclared to a module port. Implicit nets are always one-bit wires and causes bugs if you had intended to use a vector. Disabling creation of implicit nets can be done using the `default_nettype none directive.</p> Verilog<pre><code>wire [2:0] a, c;   // Two vectors\nassign a = 3'b101;  // a = 101\nassign b = a;       // b =   1  implicitly-created wire\nassign c = b;       // c = 001  &lt;-- bug\nmy_module i1 (d,e); // d and e are implicitly one-bit wide if not declared.\n                    // This could be a bug if the port was intended to be a vector.\n</code></pre> <p>Adding `default_nettype none would make the second line of code an error, which makes the bug more visible.</p>"}, {"location": "yuyan/Verilog/1/#unpacked-vs-packed-arrays", "title": "Unpacked vs. Packed Arrays", "text": "<p>You may have noticed that in declarations, the vector indices are written before the vector name. This declares the \"packed\" dimensions of the array, where the bits are \"packed\" together into a blob (this is relevant in a simulator, but not in hardware). The unpacked dimensions are declared after the name. They are generally used to declare memory arrays. Since ECE253 didn't cover memory arrays, we have not used packed arrays in this course. See http://www.asic-world.com/systemverilog/data_types10.html for more details.</p> Verilog<pre><code>reg [7:0] mem [255:0];   // 256 unpacked elements, each of which is a 8-bit packed vector of reg.\nreg mem2 [28:0];         // 29 unpacked elements, each of which is a 1-bit reg.\n</code></pre>"}, {"location": "yuyan/Verilog/1/#and", "title": "| and ||", "text": "<p> Verilog<pre><code>module top_module(\n    input [2:0] a, \n    input [2:0] b, \n    output [2:0] out_or_bitwise,\n    output out_or_logical,\n    output [5:0] out_not\n);\n\n    assign out_or_bitwise = a | b;\n    assign out_or_logical = a || b;\n\n    assign out_not[2:0] = ~a;   // Part-select on left side is o.\n    assign out_not[5:3] = ~b;   //Assigning to [5:3] does not conflict with [2:0]\n\nendmodule\n</code></pre></p>"}, {"location": "yuyan/Verilog/1/#the-concatenation-operator", "title": "The concatenation operator", "text": "<p>The concatenation operator allowed concatenating together vectors to form a larger vector. But sometimes you want the same thing concatenated together many times, and it is still tedious to do something like assign a = {b,b,b,b,b,b};. The replication operator allows repeating a vector and concatenating them together:</p> <p>{num{vector}} This replicates vector by num times. num must be a constant. Both sets of braces are required.</p> <p>Examples: Verilog<pre><code>{5{1'b1}}           // 5'b11111 (or 5'd31 or 5'h1f)\n{2{a,b,c}}          // The same as {a,b,c,a,b,c}\n{3'd5, {2{3'd6}}}   // 9'b101_110_110. It's a concatenation of 101 with\n                    // the second vector, which is two copies of 3'b110.\n</code></pre> One common place to see a replication operator is when sign-extending a smaller number to a larger one, while preserving its signed value. This is done by replicating the sign bit (the most significant bit) of the smaller number to the left. For example, sign-extending 4'b0101 (5) to 8 bits results in 8'b00000101 (5), while sign-extending 4'b1101 (-3) to 8 bits results in 8'b11111101 (-3).</p>"}, {"location": "yuyan/Verilog/1/#module-pos-module-name", "title": "Module pos &amp; Module name", "text": ""}, {"location": "yuyan/Verilog/1/#pos", "title": "pos", "text": "<p> Verilog<pre><code>module top_module ( \n    input a, \n    input b, \n    input c,\n    input d,\n    output out1,\n    output out2\n);\n    mod_a mod_a(out1,out2,a,b,c,d);\nendmodule\n</code></pre></p>"}, {"location": "yuyan/Verilog/1/#name", "title": "name", "text": "<p> Verilog<pre><code>module top_module ( \n    input a, \n    input b, \n    input c,\n    input d,\n    output out1,\n    output out2\n);\n    mod_a aaa (.out1(out1),.out2(out2),.in1(a),.in2(b),.in3(c),.in4(d));\nendmodule\n</code></pre></p>"}, {"location": "yuyan/Verilog/1/#substractor", "title": "Substractor", "text": "<p>An adder-subtractor can be built from an adder by optionally negating one of the inputs, which is equivalent to inverting the input then adding 1. The net result is a circuit that can do two operations: (a + b + 0) and (a + ~b + 1). See Wikipedia if you want a more detailed explanation of how this circuit works.</p> <p>Use a 32-bit wide XOR gate to invert the b input whenever sub is 1.  Verilog<pre><code>module top_module(\n    input [31:0] a,\n    input [31:0] b,\n    input sub,\n    output [31:0] sum\n);\n    wire c1;\n    wire [31:0] b1;\n    assign b1 = b ^ {32{sub}}; //Bitwise inversion\n    add16 add1 (.a(a[15:0]),.b(b1[15:0]),.cin(sub),.sum(sum[15:0]),.cout(c1));\n    add16 add2 (.a(a[31:16]),.b(b1[31:16]),.cin(c1),.sum(sum[31:16]));\nendmodule\n</code></pre> An XOR gate can also be viewed as a programmable inverter, where one input controls whether the other should be inverted. The following two circuits are both XOR gates: </p>"}, {"location": "yuyan/Verilog/1/#wire-and-reg", "title": "wire and reg", "text": "<p>A note on wire vs. reg: The left-hand-side of an assign statement must be a net type (e.g., wire), while the left-hand-side of a procedural assignment (in an always block) must be a variable type (e.g., reg). These types (wire vs. reg) have nothing to do with what hardware is synthesized, and is just syntax left over from Verilog's use as a hardware simulation language.</p>"}, {"location": "yuyan/Verilog/1/#blocking-vs-non-blocking-assignment", "title": "Blocking vs. Non-Blocking Assignment", "text": "<p>There are three types of assignments in Verilog:</p> <ul> <li>Continuous assignments (assign x = y;). Can only be used when not inside a procedure (\"always block\").</li> <li>Procedural blocking assignment: (x = y;). Can only be used inside a procedure.</li> <li>Procedural non-blocking assignment: (x &lt;= y;). Can only be used inside a procedure.</li> </ul> <p>In a combinational always block, use blocking assignments. In a clocked always block, use non-blocking assignments. A full understanding of why is not particularly useful for hardware design and requires a good understanding of how Verilog simulators keep track of events. Not following this rule results in extremely hard to find errors that are both non-deterministic and differ between simulation and synthesized hardware.</p>"}, {"location": "yuyan/Verilog/1/#always-if", "title": "Always if", "text": "<p>An if statement usually creates a 2-to-1 multiplexer, selecting one input if the condition is true, and the other input if the condition is false. </p> <p>Verilog<pre><code>always @(*) begin\n    if (condition) begin\n        out = x;\n    end\n    else begin\n        out = y;\n    end\nend\n</code></pre> This is equivalent to using a continuous assignment with a conditional operator: Verilog<pre><code>assign out = (condition) ? x : y;\n</code></pre> However, the procedural if statement provides a new way to make mistakes. The circuit is combinational only if out is always assigned a value.</p>"}, {"location": "yuyan/Verilog/1/#how-to-avoid-making-latches", "title": "How to avoid making latches", "text": "<p>Syntactically-correct code does not necessarily result in a reasonable circuit (combinational logic + flip-flops). The usual reason is: \"What happens in the cases other than those you specified?\". Verilog's answer is: Keep the outputs unchanged.</p> <p>This behaviour of \"keep outputs unchanged\" means the current state needs to be remembered, and thus produces a latch. Combinational logic (e.g., logic gates) cannot remember any state. Watch out for Warning (10240): ... inferring latch(es)\" messages. Unless the latch was intentional, it almost always indicates a bug. Combinational circuits must have a value assigned to all outputs under all conditions. This usually means you always need else clauses or a default value assigned to the outputs.</p>"}, {"location": "yuyan/Verilog/1/#always-case", "title": "Always case", "text": "<p>Case statements in Verilog are nearly equivalent to a sequence of if-elseif-else that compares one expression to a list of others. Its syntax and functionality differs from the switch statement in C. Verilog<pre><code>always @(*) begin     // This is a combinational circuit\n    case (in)\n      1'b1: begin \n               out = 1'b1;  // begin-end if &gt;1 statement\n            end\n      1'b0: out = 1'b0;\n      default: out = 1'bx;\n    endcase\nend\n</code></pre> - The case statement begins with case and each \"case item\" ends with a colon. There is no \"switch\". - Each case item can execute exactly one statement. This makes the \"break\" used in C unnecessary. But this means that if you need more than one statement, you must use begin ... end. - Duplicate (and partially overlapping) case items are permitted. The first one that matches is used. C does not allow duplicate case items.</p>"}, {"location": "yuyan/Verilog/1/#always-casez", "title": "Always casez", "text": "Verilog<pre><code>always @(*) begin\n    casez (in[3:0])\n        4'bzzz1: out = 0;   // in[3:1] can be anything\n        4'bzz1z: out = 1;\n        4'bz1zz: out = 2;\n        4'b1zzz: out = 3;\n        default: out = 0;\n    endcase\nend\n</code></pre>"}, {"location": "yuyan/Verilog/1/#reduction", "title": "Reduction", "text": "<p>You're already familiar with bitwise operations between two values, e.g., a &amp; b or a ^ b. Sometimes, you want to create a wide gate that operates on all of the bits of one vector, like (a[0] &amp; a[1] &amp; a[2] &amp; a[3] ... ), which gets tedious if the vector is long.</p> <p>The reduction operators can do AND, OR, and XOR of the bits of a vector, producing one bit of output:</p> <p>&amp; a[3:0]     // AND: a[3]&amp;a[2]&amp;a[1]&amp;a[0]. Equivalent to (a[3:0] == 4'hf) | b[3:0]     // OR:  b[3]|b[2]|b[1]|b[0]. Equivalent to (b[3:0] != 4'h0) ^ c[2:0]     // XOR: c[2]^c[1]^c[0] These are unary operators that have only one operand (similar to the NOT operators ! and ~). You can also invert the outputs of these to create NAND, NOR, and XNOR gates, e.g., (~&amp; d[7:0]).</p>"}, {"location": "yuyan/Verilog/1/#error-prone-points", "title": "Error-prone points", "text": "Verilog<pre><code>module top_module( \n    input [254:0] in,\n    output [7:0] out );\n    integer i;\n    always @(*) begin\n        out = 0;\n        for(i = 0; i &lt; 255; i = i + 1) begin\n            if(in[i] == 1) out=out+ 1;\n        end\n    end\nendmodule\n</code></pre> <ul> <li>for\u5faa\u73af\u5fc5\u987b\u5728always\u5757\u6216\u8005initial\u91cc\u9762</li> <li>out = 0;</li> </ul>"}, {"location": "yuyan/Verilog/1/#generate", "title": "generate", "text": "Verilog<pre><code>module top_module( \n    input [399:0] a, b,\n    input cin,\n    output cout,\n    output [399:0] sum \n);\n    wire [99:0] c;\n\n    // \u5b9e\u4f8b\u5316\u7b2c\u4e00\u4e2aBCD\u52a0\u6cd5\u5668\n    bcd_fadd bcd0 (\n        .a(a[3:0]),\n        .b(b[3:0]),\n        .cin(cin),\n        .cout(c[0]),\n        .sum(sum[3:0])\n    );\n\n    // \u4f7f\u7528generate\u8bed\u53e5\u6765\u5b9e\u4f8b\u5316\u5269\u4e0b\u768499\u4e2aBCD\u52a0\u6cd5\u5668\n    genvar i;\n    generate\n        for (i = 1; i &lt; 100; i = i + 1) begin : bcd_fadd_block\n            bcd_fadd bcd1 (\n                .a(a[4*i+3:4*i]),\n                .b(b[4*i+3:4*i]),\n                .cin(c[i-1]),\n                .cout(c[i]),\n                .sum(sum[4*i+3:4*i])\n            );\n        end\n    endgenerate\n\n    assign cout = c[99];\n\nendmodule\n</code></pre>"}, {"location": "yuyan/Verilog/circuit/2/", "title": "Multiplexers", "text": ""}, {"location": "yuyan/Verilog/circuit/2/#popcount3", "title": "Popcount3", "text": "<p>A \"population count\" circuit counts the number of '1's in an input vector. Build a population count circuit for a 3-bit input vector.</p> Verilog<pre><code>module top_module (\n    input [2:0] in,\n    output [1:0] out\n);\n\n    // This is a function of 3 inputs. One method is to use a 8-entry truth table:\n    // in[2:0] out[1:0]\n    // 000      00\n    // 001      01\n    // 010      01\n    // 011      10\n    // 100      01\n    // 101      10\n    // 110      10\n    // 111      11\n    assign out[0] = (~in[2] &amp; ~in[1] &amp; in[0]) | (~in[2] &amp; in[1] &amp; ~in[0]) | (in[2] &amp; ~in[1] &amp; ~in[0]) | (in[2] &amp; in[1] &amp; in[0]);\n    assign out[1] = (in[1] &amp; in[0]) | (in[2] &amp; in[0]) | (in[2] &amp; in[1]);\n\n    // Using the addition operator works too:\n    assign out = in[0]+in[1]+in[2];\n\n    // Yet another method uses behavioural code inside a procedure (combinational always block)\n    // to directly implement the truth table:\n\n    always @(*) begin\n        case (in)\n            3'd0: out = 2'd0;\n            3'd1: out = 2'd1;\n            3'd2: out = 2'd1;\n            3'd3: out = 2'd2;\n            3'd4: out = 2'd1;\n            3'd5: out = 2'd2;\n            3'd6: out = 2'd2;\n            3'd7: out = 2'd3;\n        endcase\n    end\n\nendmodule\n</code></pre>"}, {"location": "yuyan/Verilog/circuit/2/#gatesv", "title": "Gatesv", "text": "<p>You are given a four-bit input vector in[3:0]. We want to know some relationships between each bit and its neighbour:</p> <ul> <li>out_both: Each bit of this output vector should indicate whether both the corresponding input bit and its neighbour to the left (higher index) are '1'. For example, out_both[2] should indicate if in[2] and in[3] are both 1. Since in[3] has no neighbour to the left, the answer is obvious so we don't need to know out_both[3].</li> <li>out_any: Each bit of this output vector should indicate whether any of the corresponding input bit and its neighbour to the right are '1'. For example, out_any[2] should indicate if either in[2] or in[1] are 1. Since in[0] has no neighbour to the right, the answer is obvious so we don't need to know out_any[0].</li> <li>out_different: Each bit of this output vector should indicate whether the corresponding input bit is different from its neighbour to the left. For example, out_different[2] should indicate if in[2] is different from in[3]. For this part, treat the vector as wrapping around, so in[3]'s neighbour to the left is in[0].</li> </ul> Verilog<pre><code>module top_module (\n    input [3:0] in,\n    output [2:0] out_both,\n    output [3:1] out_any,\n    output [3:0] out_different\n);\n\n    // Use bitwise operators and part-select to do the entire calculation in one line of code\n    // in[3:1] is this vector:                       in[3]  in[2]  in[1]\n    // in[2:0] is this vector:                       in[2]  in[1]  in[0]\n    // Bitwise-OR produces a 3 bit vector.             |      |      |\n    // Assign this 3-bit result to out_any[3:1]:    o_a[3] o_a[2] o_a[1]\n\n    // Thus, each output bit is the OR of the input bit and its neighbour to the right:\n    // e.g., out_any[1] = in[1] | in[0];    \n    // Notice how this works even for long vectors.\n    assign out_any = in[3:1] | in[2:0];\n\n    assign out_both = in[2:0] &amp; in[3:1];\n\n    // XOR 'in' with a vector that is 'in' rotated to the right by 1 position: {in[0], in[3:1]}\n    // The rotation is accomplished by using part selects[] and the concatenation operator{}.\n    assign out_different = in ^ {in[0], in[3:1]};\n\nendmodule\n</code></pre>"}, {"location": "yuyan/Verilog/circuit/2/#mux256to1v", "title": "Mux256to1v", "text": "<p>Create a 4-bit wide, 256-to-1 multiplexer. The 256 4-bit inputs are all packed into a single 1024-bit input vector. sel=0 should select bits in[3:0], sel=1 selects bits in[7:4], sel=2 selects bits in[11:8], etc.</p> <p>Hints: - With this many options, a case statement isn't so useful. - Vector indices can be variable, as long as the synthesizer can figure out that the width of the bits being selected is constant. It's not always good at this. An error saying \"... is not a constant\" means it couldn't prove that the select width is constant. In particular, in[ sel4+3 : sel4 ] does not work. - Bit slicing (\"Indexed vector part select\", since Verilog-2001) has an even more compact syntax.</p> Verilog<pre><code>module top_module (\n    input [1023:0] in,\n    input [7:0] sel,\n    output [3:0] out\n);\n\n    // We can't part-select multiple bits without an error, but we can select one bit at a time,\n    // four times, then concatenate them together.\n    assign out = {in[sel*4+3], in[sel*4+2], in[sel*4+1], in[sel*4+0]};\n\n    // Alternatively, \"indexed vector part select\" works better, but has an unfamiliar syntax:\n    assign out = in[sel*4 +: 4];        // Select starting at index \"sel*4\", then select a total width of 4 bits with increasing (+:) index number.\n    assign out = in[sel*4+3 -: 4];  // Select starting at index \"sel*4+3\", then select a total width of 4 bits with decreasing (-:) index number.\n    // Note: The width (4 in this case) must be constant.\n\nendmodule\n</code></pre>"}, {"location": "yuyan/Verilog/circuit/3/", "title": "Arithmetic circuits", "text": ""}, {"location": "yuyan/Verilog/circuit/3/#half-adder", "title": "Half Adder", "text": "Verilog<pre><code>module half_adder( \n    input a, b,\n    output cout, sum );\n    assign cout = a &amp; b;\n    assign sum = a ^ b;\nendmodule\n</code></pre> <p>Note</p> <p>sum = a ^ b      cout = a &amp; b</p>"}, {"location": "yuyan/Verilog/circuit/3/#full-adder", "title": "Full Adder", "text": "Verilog<pre><code>module full_adder( \n    input a, b, cin,\n    output cout, sum );\n    assign sum = a ^ b ^ cin;\n    assign cout = a &amp; b | b &amp; cin | cin &amp; a;\nendmodule\n</code></pre> <p>Note</p> <p>sum = a ^ b ^ cin      cout = a &amp; b | a &amp; cin | b &amp; cin = (a &amp; b) | (cin &amp; (a ^ b))</p> <p>Verilog<pre><code>module top_module( \n    input a, b, cin,\n    output cout, sum );\n    assign {cout,sum} = a + b + cin;\nendmodule\n</code></pre> \u91cd\u70b9\u5173\u6ce8\u4e0b<code>assign {cout,sum} = a + b + cin;</code>\u8fd9\u4e00\u884c\u3002</p>"}, {"location": "yuyan/Verilog/circuit/3/#adder3", "title": "Adder3", "text": "<p>Now that you know how to build a full adder, make 3 instances of it to create a 3-bit binary ripple-carry adder. The adder adds two 3-bit numbers and a carry-in to produce a 3-bit sum and carry out. To encourage you to actually instantiate full adders, also output the carry-out from each full adder in the ripple-carry adder. cout[2] is the final carry-out from the last full adder, and is the carry-out you usually see. Verilog<pre><code>module top_module( \n    input [2:0] a, b,\n    input cin,\n    output [2:0] cout,\n    output [2:0] sum );\n    assign sum[0] = a[0] ^ b[0] ^ cin;\n    assign cout[0] = a[0] &amp; b[0] | b[0] &amp; cin | cin &amp; a[0];\n    assign sum[1] = a[1] ^ b[1] ^ cout[0];\n    assign cout[1] = a[1] &amp; b[1] | b[1] &amp; cout[0] | cout[0] &amp; a[1];\n    assign sum[2] = a[2] ^ b[2] ^ cout[1];\n    assign cout[2] = a[2] &amp; b[2] | b[2] &amp; cout[1] | cout[1] &amp; a[2];\nendmodule\n</code></pre> Verilog<pre><code>module top_module( \n    input [2:0] a, b,\n    input cin,\n    output [2:0] cout,\n    output [2:0] sum );\n    fadd U1(a[0],b[0],cin,cout[0],sum[0]);\n    fadd U2(a[1],b[1],cout[0],cout[1],sum[1]);\n    fadd U3(a[2],b[2],cout[1],cout[2],sum[2]);\nendmodule\n\nmodule fadd( \n    input a, b, cin,\n    output cout, sum );\n    assign {cout,sum} = a + b + cin;\nendmodule\n</code></pre></p>"}, {"location": "yuyan/Verilog/circuit/3/#examsm2014-q4j", "title": "Exams/m2014 q4j", "text": "<p>Implement the following circuit:  Verilog<pre><code>module top_module (\n    input [3:0] x,\n    input [3:0] y,\n    output [4:0] sum\n);\n\n    // This circuit is a 4-bit ripple-carry adder with carry-out.\n    assign sum = x+y;   // Verilog addition automatically produces the carry-out bit.\n\n    // Verilog quirk: Even though the value of (x+y) includes the carry-out, (x+y) is still considered to be a 4-bit number (The max width of the two operands).\n    // This is correct:\n    assign sum = (x+y);\n    // But this is incorrect:\n    assign sum = {x+y}; // Concatenation operator: This discards the carry-out!\nendmodule\n</code></pre></p>"}, {"location": "yuyan/Verilog/circuit/3/#overflow", "title": "Overflow", "text": "<p>Assume that you have two 8-bit 2's complement numbers, a[7:0] and b[7:0]. These numbers are added to produce s[7:0]. Also compute whether a (signed) overflow has occurred.</p> <p>Hint: A signed overflow occurs when adding two positive numbers produces a negative result, or adding two negative numbers produces a positive result. There are several methods to detect overflow: It could be computed by comparing the signs of the input and output numbers, or derived from the carry-out of bit n and n-1.</p> Verilog<pre><code>module top_module (\n    input [7:0] a,\n    input [7:0] b,\n    output [7:0] s,\n    output overflow\n); \n    assign s = a + b;\n    // \u6ea2\u51fa\u53d1\u751f\u6761\u4ef6\uff1a\u4e24\u4e2a\u64cd\u4f5c\u6570\u7b26\u53f7\u4f4d\u76f8\u540c\uff0c\u4f46\u7ed3\u679c\u7b26\u53f7\u4f4d\u4e0d\u540c\n    assign overflow = (a[7] == b[7]) &amp;&amp; (s[7] != a[7]);\nendmodule\n</code></pre>"}, {"location": "yuyan/Verilog/circuit/3/#adder100", "title": "Adder100", "text": "Verilog<pre><code>module top_module (\n    input [99:0] a,\n    input [99:0] b,\n    input cin,\n    output cout,\n    output [99:0] sum\n);\n\n    // The concatenation {cout, sum} is a 101-bit vector.\n    assign {cout, sum} = a+b+cin;\n\nendmodule\n</code></pre>"}, {"location": "yuyan/Verilog/circuit/4/", "title": "Karnaugh Map", "text": ""}, {"location": "yuyan/Verilog/circuit/4/#kmap4", "title": "Kmap4", "text": "<p>Implement the circuit described by the Karnaugh map below.</p> <p></p> <p>Hint:</p> <p>For this function, changing the value of any one input always inverts the output. It is a simple logic function, but one that can't be easily expressed as SOP nor POS forms. Verilog<pre><code>module top_module(\n    input a,\n    input b,\n    input c,\n    input d,\n    output out  ); \n    assign out = (a^b)^(c^d);\nendmodule\n</code></pre></p>"}, {"location": "yuyan/Verilog/circuit/5/", "title": "Latches and Flipflops", "text": ""}, {"location": "yuyan/Verilog/circuit/5/#d-flipflop", "title": "D-flipflop", "text": "<p>A D flip-flop is a circuit that stores a bit and is updated periodically, at the (usually) positive edge of a clock signal.</p> <p></p> <p>D flip-flops are created by the logic synthesizer when a clocked always block is used (See alwaysblock2). A D flip-flop is the simplest form of \"blob of combinational logic followed by a flip-flop\" where the combinational logic portion is just a wire.</p> <p>Create a single D flip-flop.</p> Verilog<pre><code>module top_module (\n    input clk,    // Clocks are used in sequential circuits\n    input d,\n    output reg q );//\n\n    // Use a clocked always block\n    //   copy d to q at every positive edge of clk\n    //   Clocked always blocks should use non-blocking assignments\n    always @(posedge clk) begin\n        q &lt;= d;\n    end\n\nendmodule\n</code></pre>"}, {"location": "yuyan/Verilog/circuit/5/#synchronous-and-asynchronous-reset-flip-flops", "title": "synchronous and asynchronous reset flip-flops", "text": "<p>\u5728\u6570\u5b57\u7535\u8def\u8bbe\u8ba1\u4e2d\uff0c<code>\u540c\u6b65\u590d\u4f4d</code>\uff08Synchronous Reset\uff09\u548c<code>\u5f02\u6b65\u590d\u4f4d</code>\uff08Asynchronous Reset\uff09\u662f\u4e24\u79cd\u7528\u4e8e\u63a7\u5236\u89e6\u53d1\u5668\uff08flip-flop\uff09\u590d\u4f4d\u7684\u65b9\u5f0f\u3002\u8fd9\u4e24\u8005\u7684\u533a\u522b\u4e3b\u8981\u5728\u4e8e\u590d\u4f4d\u4fe1\u53f7\u5982\u4f55\u5f71\u54cd\u89e6\u53d1\u5668\u7684\u8f93\u51fa\u3002\u4ee5\u4e0b\u662f\u5bf9\u8fd9\u4e24\u8005\u7684\u8be6\u7ec6\u89e3\u91ca\uff1a</p>"}, {"location": "yuyan/Verilog/circuit/5/#synchronous-reset", "title": "\u540c\u6b65\u590d\u4f4d (Synchronous Reset)", "text": "<p>\u5b9a\u4e49\uff1a\u540c\u6b65\u590d\u4f4d\u662f\u6307\u590d\u4f4d\u4fe1\u53f7\u4e0e\u65f6\u949f\u4fe1\u53f7\u540c\u6b65\uff0c\u5373\u590d\u4f4d\u4fe1\u53f7\u7684\u4f5c\u7528\u53ea\u4f1a\u5728\u65f6\u949f\u8fb9\u6cbf\uff08\u901a\u5e38\u662f\u4e0a\u5347\u6cbf\u6216\u4e0b\u964d\u6cbf\uff09\u5230\u6765\u65f6\u624d\u4f1a\u88ab\u68c0\u6d4b\u548c\u6267\u884c\u3002</p> <p>\u5de5\u4f5c\u539f\u7406\uff1a - \u5f53\u590d\u4f4d\u4fe1\u53f7\u88ab\u7f6e\u4e3a\u6709\u6548\uff08\u901a\u5e38\u662f\u4f4e\u7535\u5e73\u6216\u9ad8\u7535\u5e73\uff0c\u53d6\u51b3\u4e8e\u8bbe\u8ba1\uff09\uff0c\u5728\u4e0b\u4e00\u4e2a\u65f6\u949f\u8fb9\u6cbf\u5230\u6765\u65f6\uff0c\u89e6\u53d1\u5668\u7684\u8f93\u51fa\u4f1a\u88ab\u590d\u4f4d\u5230\u4e00\u4e2a\u9884\u5b9a\u7684\u72b6\u6001\uff08\u901a\u5e38\u662f0\uff09\u3002 - \u5982\u679c\u590d\u4f4d\u4fe1\u53f7\u5728\u975e\u65f6\u949f\u8fb9\u6cbf\u671f\u95f4\u53d8\u5316\uff0c\u89e6\u53d1\u5668\u7684\u8f93\u51fa\u4e0d\u4f1a\u7acb\u5373\u54cd\u5e94\uff0c\u800c\u662f\u8981\u7b49\u5230\u4e0b\u4e00\u4e2a\u65f6\u949f\u8fb9\u6cbf\u6765\u4e34\u65f6\u624d\u4f1a\u6267\u884c\u590d\u4f4d\u64cd\u4f5c\u3002</p> <p>\u4f18\u70b9\uff1a - \u6613\u4e8e\u7efc\u5408\uff08synthesis\uff09\uff0c\u56e0\u4e3a\u590d\u4f4d\u4fe1\u53f7\u4e0e\u65f6\u949f\u540c\u6b65\uff0c\u53ef\u4ee5\u786e\u4fdd\u6240\u6709\u7684\u89e6\u53d1\u5668\u5728\u540c\u4e00\u65f6\u523b\u590d\u4f4d\uff0c\u51cf\u5c11\u4e86\u7ade\u4e89\u5192\u9669\uff08race conditions\uff09\u7684\u53ef\u80fd\u6027\u3002 - \u590d\u4f4d\u65f6\u4e0d\u4f1a\u4ea7\u751f\u6bdb\u523a\uff08glitch\uff09\uff0c\u56e0\u4e3a\u590d\u4f4d\u4fe1\u53f7\u5728\u65f6\u949f\u8fb9\u6cbf\u624d\u4f1a\u88ab\u91c7\u6837\u3002</p> <p>\u7f3a\u70b9\uff1a - \u5728\u9700\u8981\u5feb\u901f\u590d\u4f4d\u7684\u60c5\u51b5\u4e0b\uff0c\u54cd\u5e94\u901f\u5ea6\u8f83\u6162\uff0c\u56e0\u4e3a\u5fc5\u987b\u7b49\u5f85\u4e0b\u4e00\u4e2a\u65f6\u949f\u8fb9\u6cbf\u3002 - \u9700\u8981\u989d\u5916\u7684\u903b\u8f91\u6765\u5b9e\u73b0\u540c\u6b65\u590d\u4f4d\uff0c\u8fd9\u53ef\u80fd\u4f1a\u589e\u52a0\u7535\u8def\u7684\u590d\u6742\u6027\u3002</p>"}, {"location": "yuyan/Verilog/circuit/5/#asynchronous-reset", "title": "\u5f02\u6b65\u590d\u4f4d (Asynchronous Reset)", "text": "<p>\u5b9a\u4e49\uff1a\u5f02\u6b65\u590d\u4f4d\u662f\u6307\u590d\u4f4d\u4fe1\u53f7\u4e0e\u65f6\u949f\u4fe1\u53f7\u5f02\u6b65\uff0c\u5373\u590d\u4f4d\u4fe1\u53f7\u4e0d\u4f9d\u8d56\u4e8e\u65f6\u949f\u4fe1\u53f7\uff0c\u53ef\u4ee5\u5728\u4efb\u4f55\u65f6\u5019\u7acb\u5373\u89e6\u53d1\u590d\u4f4d\u52a8\u4f5c\u3002</p> <p>\u5de5\u4f5c\u539f\u7406\uff1a - \u5f53\u590d\u4f4d\u4fe1\u53f7\u88ab\u7f6e\u4e3a\u6709\u6548\u65f6\uff0c\u65e0\u8bba\u65f6\u949f\u4fe1\u53f7\u5904\u4e8e\u4ec0\u4e48\u72b6\u6001\uff0c\u89e6\u53d1\u5668\u7684\u8f93\u51fa\u90fd\u4f1a\u7acb\u5373\u88ab\u590d\u4f4d\u5230\u4e00\u4e2a\u9884\u5b9a\u7684\u72b6\u6001\u3002 - \u5f53\u590d\u4f4d\u4fe1\u53f7\u65e0\u6548\u65f6\uff0c\u89e6\u53d1\u5668\u91cd\u65b0\u56de\u5230\u6b63\u5e38\u5de5\u4f5c\u72b6\u6001\uff0c\u7ee7\u7eed\u54cd\u5e94\u65f6\u949f\u4fe1\u53f7\u7684\u8f93\u5165\u3002</p> <p>\u4f18\u70b9\uff1a - \u54cd\u5e94\u901f\u5ea6\u5feb\uff0c\u80fd\u591f\u7acb\u5373\u590d\u4f4d\uff0c\u4e0d\u9700\u8981\u7b49\u5f85\u65f6\u949f\u8fb9\u6cbf\u3002 - \u7535\u8def\u5b9e\u73b0\u76f8\u5bf9\u7b80\u5355\uff0c\u4e0d\u9700\u8981\u989d\u5916\u7684\u903b\u8f91\u6765\u540c\u6b65\u590d\u4f4d\u4fe1\u53f7\u3002</p> <p>\u7f3a\u70b9\uff1a - \u5bb9\u6613\u4ea7\u751f\u6bdb\u523a\uff0c\u5c24\u5176\u662f\u5728\u590d\u4f4d\u4fe1\u53f7\u89e3\u9664\u65f6\uff0c\u56e0\u4e3a\u590d\u4f4d\u4fe1\u53f7\u7684\u8fb9\u6cbf\u53ef\u80fd\u4f1a\u5f15\u53d1\u89e6\u53d1\u5668\u7684\u8bef\u52a8\u4f5c\u3002 - \u53ef\u80fd\u5f15\u5165\u7ade\u4e89\u5192\u9669\u95ee\u9898\uff0c\u5c24\u5176\u662f\u5728\u4e0d\u540c\u590d\u4f4d\u8def\u5f84\u4e0a\u5b58\u5728\u65f6\u5ef6\u5dee\u5f02\u65f6\uff0c\u5bfc\u81f4\u590d\u4f4d\u4e0d\u4e00\u81f4\u3002</p>"}, {"location": "yuyan/Verilog/circuit/5/#_1", "title": "\u5e94\u7528\u573a\u666f", "text": "<ul> <li>\u540c\u6b65\u590d\u4f4d\u5e38\u7528\u4e8e\u5bf9\u65f6\u5e8f\u8981\u6c42\u4e25\u683c\u7684\u7cfb\u7edf\u4e2d\uff0c\u5982\u540c\u6b65\u6570\u5b57\u7535\u8def\u548c\u72b6\u6001\u673a\u8bbe\u8ba1\u4e2d\uff0c\u56e0\u4e3a\u5b83\u80fd\u786e\u4fdd\u6240\u6709\u89e6\u53d1\u5668\u7684\u590d\u4f4d\u53d1\u751f\u5728\u540c\u4e00\u4e2a\u65f6\u949f\u5468\u671f\u5185\u3002</li> <li>\u5f02\u6b65\u590d\u4f4d\u5e38\u7528\u4e8e\u5bf9\u590d\u4f4d\u54cd\u5e94\u901f\u5ea6\u8981\u6c42\u9ad8\u7684\u573a\u5408\uff0c\u5982\u9700\u8981\u5728\u7535\u6e90\u4e0a\u7535\u6216\u7cfb\u7edf\u6545\u969c\u65f6\u7acb\u5373\u590d\u4f4d\u7684\u7cfb\u7edf\u3002</li> </ul> Verilog<pre><code>module top_module(\n    input clk,\n    input [7:0] d,\n    input areset,\n    output reg [7:0] q);\n\n    // The only difference in code compared to synchronous reset is in the sensitivity list.\n    always @(posedge clk, posedge areset)\n        if (areset)\n            q &lt;= 0;\n        else\n            q &lt;= d;\n\n\n    // In Verilog, the sensitivity list looks strange. The FF's reset is sensitive to the\n    // *level* of areset, so why does using \"posedge areset\" work?\n    // To see why it works, consider the truth table for all events that change the input \n    // signals, assuming clk and areset do not switch at precisely the same time:\n\n    //  clk     areset      output\n    //   x       0-&gt;1       q &lt;= 0; (because areset = 1)\n    //   x       1-&gt;0       no change (always block not triggered)\n    //  0-&gt;1       0        q &lt;= d; (not resetting)\n    //  0-&gt;1       1        q &lt;= 0; (still resetting, q was 0 before too)\n    //  1-&gt;0       x        no change (always block not triggered)\n\nendmodule\n</code></pre>"}, {"location": "yuyan/Verilog/circuit/5/#dff-gate", "title": "DFF + gate", "text": "<p> Verilog<pre><code>module top_module (\n    input clk,\n    input in, \n    output out);\n    always @(posedge clk) begin\n        out &lt;= in ^ out;\n    end\nendmodule\n</code></pre></p>"}, {"location": "yuyan/Verilog/circuit/5/#jk-flip-flop", "title": "JK flip-flop", "text": "<p>A JK flip-flop has the below truth table. Implement a JK flip-flop with only a D-type flip-flop and gates. Note: Qold is the output of the D flip-flop before the positive clock edge.</p> J K Q 0 0 Qold 0 1 0 1 0 1 1 1 ~Qold Verilog<pre><code>module top_module (\n    input clk,\n    input j,\n    input k,\n    output Q); \n    always @(posedge clk) begin\n        if(j&amp;&amp;k)\n            Q &lt;= ~Q;\n        else if(j&amp;&amp;~k)\n            Q &lt;= 1;\n        else if(~j&amp;&amp;k)\n            Q &lt;= 0;\n        else\n            Q &lt;= Q;\n    end\nendmodule\n</code></pre>"}, {"location": "yuyan/Verilog/circuit/5/#edgedetect", "title": "Edgedetect", "text": "<p>For each bit in an 8-bit vector, detect when the input signal changes from 0 in one clock cycle to 1 the next (similar to positive edge detection). The output bit should be set the cycle after a 0 to 1 transition occurs.</p> <p>Here are some examples. For clarity, in[1] and pedge[1] are shown separately.</p> <p></p> Verilog<pre><code>module top_module(\n    input clk,\n    input [7:0] in,\n    output reg [7:0] pedge);\n\n    reg [7:0] d_last;   \n\n    always @(posedge clk) begin\n        d_last &lt;= in;           // Remember the state of the previous cycle\n        pedge &lt;= in &amp; ~d_last;  // A positive edge occurred if input was 0 and is now 1.\n    end\n\nendmodule\n</code></pre>"}, {"location": "yuyan/Verilog/circuit/5/#edgedetect2", "title": "Edgedetect2", "text": "<p>For each bit in an 8-bit vector, detect when the input signal changes from one clock cycle to the next (detect any edge). The output bit should be set the cycle after a 0 to 1 transition occurs.</p> <p>Here are some examples. For clarity, in[1] and anyedge[1] are shown separately.</p> <p></p> Verilog<pre><code>module top_module (\n    input clk,\n    input [7:0] in,\n    output [7:0] anyedge\n);\n    reg [7:0] d_last;   \n    wire [7:0] tmp1, tmp2;\n    assign anyedge = tmp1 | tmp2;\n    always @(posedge clk) begin\n        d_last &lt;= in;           \n        tmp1 &lt;= in &amp; ~d_last;   \n        tmp2 &lt;= ~(in | ~d_last);\n    end\nendmodule\n</code></pre> Verilog<pre><code>module top_module (\n    input clk,\n    input [7:0] in,\n    output [7:0] anyedge\n);\n    reg [7:0] d_last = 8'h00;\n    always@(posedge clk)\n        begin\n            d_last &lt;= in;\n            anyedge &lt;= in ^ d_last;\n        end\nendmodule\n</code></pre>"}, {"location": "yuyan/Verilog/circuit/5/#edgecapture", "title": "Edgecapture", "text": "<p>For each bit in a 32-bit vector, capture when the input signal changes from 1 in one clock cycle to 0 the next. \"Capture\" means that the output will remain 1 until the register is reset (synchronous reset).</p> <p>Each output bit behaves like a SR flip-flop: The output bit should be set (to 1) the cycle after a 1 to 0 transition occurs. The output bit should be reset (to 0) at the positive clock edge when reset is high. If both of the above events occur at the same time, reset has precedence. In the last 4 cycles of the example waveform below, the 'reset' event occurs one cycle earlier than the 'set' event, so there is no conflict here.</p> <p>In the example waveform below, reset, in[1] and out[1] are shown again separately for clarity.</p> <p> Verilog<pre><code>module top_module (\n    input clk,\n    input reset,\n    input [31:0] in,\n    output [31:0] out\n);\n    reg [31:0] in1;\n\n    always @(posedge clk) \n      in1 &lt;= in; \n    // in1 \u59cb\u7ec8\u4e3a in \u7684\u4e0a\u4e00\u9636\u6bb5\n    always @(posedge clk) begin\n        if (reset)\n             out &lt;= 0;\n        else          \n             out&lt;= ~in &amp; in1 | out;\n    end \nendmodule\n</code></pre></p>"}, {"location": "yuyan/Verilog/circuit/5/#dualedge", "title": "Dualedge", "text": "<p>You're familiar with flip-flops that are triggered on the positive edge of the clock, or negative edge of the clock. A dual-edge triggered flip-flop is triggered on both edges of the clock. However, FPGAs don't have dual-edge triggered flip-flops, and always @(posedge clk or negedge clk) is not accepted as a legal sensitivity list.</p> <p>Hint: - You can't create a dual-edge triggered flip-flop on an FPGA. But you can create both positive-edge triggered and negative-edge triggered flip-flops. - This problem is a moderately difficult circuit design problem, but requires only basic Verilog language features. (This is a circuit design problem, not a coding problem.) It may help to first sketch a circuit by hand before attempting to code it.</p> <p>```verilog module top_module(     input clk,     input d,     output q);</p> Text Only<pre><code>reg p, n;\n\n// A positive-edge triggered flip-flop\nalways @(posedge clk)\n    p &lt;= d ^ n;\n\n// A negative-edge triggered flip-flop\nalways @(negedge clk)\n    n &lt;= d ^ p;\n\n// Why does this work? \n// After posedge clk, p changes to d^n. Thus q = (p^n) = (d^n^n) = d.\n// After negedge clk, n changes to d^p. Thus q = (p^n) = (p^d^p) = d.\n// At each (positive or negative) clock edge, p and n FFs alternately\n// load a value that will cancel out the other and cause the new value of d to remain.\nassign q = p ^ n;\n\n\n// Can't synthesize this.\n/*always @(posedge clk, negedge clk) begin\n    q &lt;= d;\nend*/\n</code></pre> <p>endmodule Verilog\u6a21\u5757\u5c1d\u8bd5\u5b9e\u73b0\u4e00\u4e2a\u53cc\u6cbf\u89e6\u53d1\u7684\u89e6\u53d1\u5668\uff0c\u4e5f\u5c31\u662f\u5728\u65f6\u949f\u4fe1\u53f7\u7684\u6b63\u6cbf\uff08posedge clk\uff09\u548c\u8d1f\u6cbf\uff08negedge clk\uff09\u90fd\u53ef\u4ee5\u6355\u6349\u6570\u636e\u3002</p>"}, {"location": "yuyan/Verilog/circuit/5/#_2", "title": "\u8bbe\u8ba1\u539f\u7406\uff1a", "text": "<p>\u8fd9\u4f7f\u7528\u4e86\u4e24\u4e2a\u5bc4\u5b58\u5668 <code>p</code> \u548c <code>n</code>\uff0c\u5206\u522b\u5728\u6b63\u6cbf\u548c\u8d1f\u6cbf\u65f6\u66f4\u65b0\u5b83\u4eec\u7684\u503c\u3002\u901a\u8fc7 <code>p</code> \u548c <code>n</code> \u7684\u4ea4\u66ff\u66f4\u65b0\u548c\u5f02\u6216\u8fd0\u7b97\uff08<code>p ^ n</code>\uff09\uff0c\u5b9e\u73b0\u4e86\u6bcf\u4e2a\u65f6\u949f\u6cbf\u66f4\u65b0\u8f93\u51fa <code>q</code> \u7684\u6548\u679c\u3002</p> <p>\u5177\u4f53\u7684\u5b9e\u73b0\u6b65\u9aa4\u5982\u4e0b\uff1a</p> <ol> <li> <p>\u6b63\u6cbf\u89e6\u53d1\uff1a <code>verilog     always @(posedge clk)         p &lt;= d ^ n;</code>     \u8fd9\u91cc\uff0c<code>p</code> \u5728\u65f6\u949f\u6b63\u6cbf\u65f6\u88ab\u8d4b\u503c\u4e3a <code>d ^ n</code>\uff0c\u5373 <code>d</code> \u548c <code>n</code> \u7684\u5f02\u6216\u503c\u3002</p> </li> <li> <p>\u8d1f\u6cbf\u89e6\u53d1\uff1a <code>verilog     always @(negedge clk)         n &lt;= d ^ p;</code>     \u5728\u65f6\u949f\u7684\u8d1f\u6cbf\uff0c<code>n</code> \u88ab\u8d4b\u503c\u4e3a <code>d ^ p</code>\uff0c\u5373 <code>d</code> \u548c <code>p</code> \u7684\u5f02\u6216\u503c\u3002</p> </li> <li> <p>\u8f93\u51fa\u903b\u8f91\uff1a <code>verilog     assign q = p ^ n;</code> <code>q</code> \u662f <code>p</code> \u548c <code>n</code> \u7684\u5f02\u6216\u7ed3\u679c\u3002\u6839\u636e\u8bbe\u8ba1\uff0c\u6bcf\u4e2a\u65f6\u949f\u6cbf\u90fd\u4f1a\u4f7f <code>p</code> \u548c <code>n</code> \u4ea4\u66ff\u52a0\u8f7d\u4e00\u4e2a\u4e0e\u5f53\u524d\u8f93\u5165 <code>d</code> \u76f8\u5173\u7684\u503c\uff0c\u800c\u6700\u7ec8 <code>q</code> \u603b\u662f\u4f1a\u7a33\u5b9a\u5728\u5f53\u524d <code>d</code> \u7684\u503c\u3002</p> </li> </ol>"}, {"location": "yuyan/Verilog/circuit/5/#_3", "title": "\u4e3a\u4ec0\u4e48\u8fd9\u4e2a\u65b9\u6cd5\u6709\u6548\uff1f", "text": "<ul> <li>\u5f53\u65f6\u949f\u5904\u4e8e\u6b63\u6cbf\u65f6\uff0c<code>p</code> \u88ab\u8d4b\u503c\u4e3a <code>d ^ n</code>\uff0c\u6b64\u65f6\u8f93\u51fa <code>q = p ^ n = (d ^ n) ^ n = d</code>\uff0c\u56e0\u4e3a <code>n ^ n = 0</code>\u3002</li> <li>\u5f53\u65f6\u949f\u5904\u4e8e\u8d1f\u6cbf\u65f6\uff0c<code>n</code> \u88ab\u8d4b\u503c\u4e3a <code>d ^ p</code>\uff0c\u6b64\u65f6\u8f93\u51fa <code>q = p ^ n = p ^ (d ^ p) = d</code>\uff0c\u56e0\u4e3a <code>p ^ p = 0</code>\u3002</li> <li>\u901a\u8fc7\u8fd9\u79cd\u4ea4\u66ff\u7684\u66f4\u65b0\u673a\u5236\uff0c\u4fdd\u8bc1\u4e86\u6bcf\u6b21\u65f6\u949f\u7684\u6b63\u6cbf\u548c\u8d1f\u6cbf\u90fd\u80fd\u591f\u6b63\u786e\u5730\u66f4\u65b0\u8f93\u51fa <code>q</code>\uff0c\u4f7f\u5f97 <code>q</code> \u5728\u6bcf\u4e2a\u65f6\u949f\u6cbf\u90fd\u8ddf\u8e2a\u8f93\u5165 <code>d</code>\u3002</li> </ul>"}, {"location": "yuyan/Verilog/circuit/6/", "title": "SHift registers", "text": ""}, {"location": "yuyan/Verilog/circuit/6/#shift-4", "title": "Shift 4", "text": "<p>Verilog<pre><code>module top_module(\n    input clk,\n    input areset,  // async active-high reset to zero\n    input load,\n    input ena,\n    input [3:0] data,\n    output reg [3:0] q); \n    always @(posedge clk or posedge areset) begin\n        if (areset) begin\n            q &lt;= 4'b0000;  // Reset q to 0\n        end else if (load) begin\n            q &lt;= data;  // Load the data into q\n        end else if (ena) begin\n            q &lt;= q &gt;&gt; 1;  // Shift q right by 1 when enabled\n        end\n    end\nendmodule\n</code></pre> How dose it work when both ena and load are 1? In the Verilog code you provided, the condition where both <code>load</code> and <code>ena</code> are high is handled by the sequential priority of the <code>if-else</code> statements. Here's how it works:</p> <ol> <li> <p><code>if (areset)</code>: This takes the highest priority because it's the first condition checked. If <code>areset</code> is high, the output <code>q</code> is reset to <code>4'b0000</code>, regardless of the states of <code>load</code> or <code>ena</code>.</p> </li> <li> <p><code>else if (load)</code>: This is checked next. If <code>areset</code> is not active and <code>load</code> is high, <code>q</code> will be loaded with the value of <code>data</code>. This happens even if <code>ena</code> is also high. The <code>load</code> operation takes priority over the enable (<code>ena</code>) because it comes before it in the <code>else if</code> chain.</p> </li> <li> <p><code>else if (ena)</code>: This block is only executed if both <code>areset</code> is low and <code>load</code> is low. In this case, if <code>ena</code> is high, the value of <code>q</code> will be right-shifted. However, this will not happen if <code>load</code> is also high, as the <code>load</code> condition would already have been executed, skipping the <code>ena</code> block.</p> </li> </ol>"}, {"location": "yuyan/Verilog/circuit/6/#summary-of-load-and-ena-behavior", "title": "Summary of <code>load</code> and <code>ena</code> behavior:", "text": "<ul> <li>If both <code>load</code> and <code>ena</code> are high at the same time, <code>load</code> takes priority. <code>q</code> will be loaded with <code>data</code>, and the <code>ena</code> block (right shift) will not execute.</li> <li>If only <code>ena</code> is high, the right shift operation will take place.</li> </ul> <p>This ensures that when <code>load</code> is asserted, it overrides the enable behavior, preventing simultaneous conflicting operations.</p>"}, {"location": "yuyan/qianduan/1/1/", "title": "HTML \u6392\u7248\u6807\u7b7e", "text": ""}, {"location": "yuyan/qianduan/1/1/#h1-h6", "title": "\u6807\u9898\u6807\u7b7e <code>&lt;h1&gt;</code> \u81f3 <code>&lt;h6&gt;</code>", "text": "<ul> <li><code>&lt;h1&gt;</code> \u5b9a\u4e49\u6700\u5927\u7684\u6807\u9898\uff0c<code>&lt;h6&gt;</code> \u5b9a\u4e49\u6700\u5c0f\u7684\u6807\u9898\u3002</li> <li>\u5177\u6709 <code>align</code> \u5c5e\u6027\uff0c\u503c\u53ef\u4ee5\u662f\uff1a<code>left</code>\u3001<code>center</code>\u3001<code>right</code>\u3002</li> </ul> <p>\u793a\u4f8b\u4ee3\u7801\uff1a HTML<pre><code>&lt;h1&gt;\u4e00\u7ea7\u6807\u9898&lt;/h1&gt;\n&lt;h2&gt;\u4e8c\u7ea7\u6807\u9898&lt;/h2&gt;\n&lt;h3&gt;\u4e09\u7ea7\u6807\u9898&lt;/h3&gt;\n&lt;h4&gt;\u56db\u7ea7\u6807\u9898&lt;/h4&gt;\n&lt;h5&gt;\u4e94\u7ea7\u6807\u9898&lt;/h5&gt;\n&lt;h6&gt;\u516d\u7ea7\u6807\u9898&lt;/h6&gt;\n</code></pre></p>"}, {"location": "yuyan/qianduan/1/1/#p", "title": "\u6bb5\u843d\u6807\u7b7e <code>&lt;p&gt;</code>", "text": "<ul> <li>\u6bb5\u843d\u6807\u7b7e\u7528\u4e8e\u5c06HTML\u6587\u6863\u5206\u5272\u4e3a\u82e5\u5e72\u6bb5\u843d\u3002</li> <li>\u5177\u6709 align \u5c5e\u6027\uff0c\u503c\u53ef\u4ee5\u662f\uff1aleft\u3001center\u3001right\u3002</li> </ul> <p>\u793a\u4f8b\u4ee3\u7801\uff1a HTML<pre><code>&lt;p&gt;\u8fd9\u662f\u4e00\u4e2a\u6bb5\u843d\u3002&lt;/p&gt;\n&lt;p&gt;\u8fd9\u662f\u53e6\u4e00\u4e2a\u6bb5\u843d\u3002&lt;/p&gt;\n</code></pre></p>"}, {"location": "yuyan/qianduan/1/1/#hr", "title": "\u6c34\u5e73\u7ebf\u6807\u7b7e <code>&lt;hr /&gt;</code>", "text": "<ul> <li>\u6c34\u5e73\u5206\u9694\u7ebf\u7528\u4e8e\u5c06\u6587\u6863\u5206\u5272\u6210\u4e0d\u540c\u90e8\u5206\u3002</li> <li>\u5c5e\u6027\uff1a</li> <li>align\uff1a\u7ebf\u6761\u4f4d\u7f6e\uff0c\u53ef\u9009\u503c\u4e3a left\u3001right\u3001center\u3002</li> <li>size\uff1a\u7ebf\u6761\u7c97\u7ec6\uff08\u50cf\u7d20\uff09\u3002</li> <li>width\uff1a\u7ebf\u6761\u957f\u5ea6\uff08\u53ef\u4ee5\u662f\u50cf\u7d20\u6216\u767e\u5206\u6bd4\uff09\u3002</li> <li>color\uff1a\u7ebf\u6761\u989c\u8272\u3002</li> <li>noshade\uff1a\u65e0\u9634\u5f71\u7684\u5e73\u9762\u663e\u793a\u3002</li> </ul> <p>\u793a\u4f8b\u4ee3\u7801\uff1a HTML<pre><code>&lt;p&gt;\u6bb5\u843d1&lt;/p&gt;\n&lt;hr /&gt;\n&lt;p&gt;\u6bb5\u843d2&lt;/p&gt;\n</code></pre></p>"}, {"location": "yuyan/qianduan/1/1/#br", "title": "\u6362\u884c\u6807\u7b7e <code>&lt;br /&gt;</code>", "text": "<ul> <li>\u7528\u4e8e\u5728\u6587\u672c\u4e2d\u5f3a\u5236\u6362\u884c\u3002</li> </ul> <p>\u793a\u4f8b\u4ee3\u7801\uff1a HTML<pre><code>&lt;p&gt;\u8fd9\u662f\u4e00\u4e2a\u6bb5\u843d&lt;br /&gt;\u5e26\u6709\u6362\u884c\u6807\u7b7e&lt;/p&gt;\n</code></pre></p>"}, {"location": "yuyan/qianduan/1/1/#div-span", "title": "<code>&lt;div&gt;</code> \u548c <code>&lt;span&gt;</code> \u6807\u7b7e", "text": "<ul> <li><code>&lt;div&gt;</code> \u6807\u7b7e\uff1a\u7528\u4e8e\u5c06\u5185\u5bb9\u5206\u5272\u4e3a\u72ec\u7acb\u7684\u533a\u5757\uff0c\u72ec\u5360\u4e00\u884c\u3002</li> <li><code>&lt;span&gt;</code> \u6807\u7b7e\uff1a\u4e0e <code>&lt;div&gt;</code> \u7c7b\u4f3c\uff0c\u4f46\u4e0d\u6362\u884c\u3002</li> <li><code>&lt;div&gt;</code> \u662f\u5bb9\u5668\u7ea7\u6807\u7b7e\uff0c\u80fd\u5305\u542b\u4efb\u4f55\u5185\u5bb9\uff1b<code>&lt;span&gt;</code> \u662f\u6587\u672c\u7ea7\u6807\u7b7e\uff0c\u53ea\u80fd\u5305\u542b\u6587\u5b57\u3001\u56fe\u7247\u3001\u8868\u5355\u5143\u7d20\u3002</li> </ul> <p>\u793a\u4f8b\u4ee3\u7801\uff1a HTML<pre><code>&lt;div&gt;\n    &lt;p&gt;\u8fd9\u662f\u4e00\u4e2a\u72ec\u7acb\u7684\u533a\u5757&lt;/p&gt;\n&lt;/div&gt;\n&lt;span&gt;\u8fd9\u662f&lt;span&gt;\u4e0d\u6362\u884c\u7684\u6587\u672c&lt;/span&gt;&lt;/span&gt;\n</code></pre></p>"}, {"location": "yuyan/qianduan/1/1/#center", "title": "\u5c45\u4e2d\u6807\u7b7e <code>&lt;center&gt;</code>", "text": "<ul> <li>\u5c06\u6807\u7b7e\u5185\u90e8\u7684\u5185\u5bb9\u5c45\u4e2d\u3002</li> <li>\u6ce8\u610f\uff1aHTML5 \u4e2d\u4e0d\u63a8\u8350\u4f7f\u7528 <code>&lt;center&gt;</code> \u6807\u7b7e\uff0c\u5efa\u8bae\u4f7f\u7528 CSS \u5b9e\u73b0\u5c45\u4e2d\u5e03\u5c40\u3002</li> </ul> <p>\u793a\u4f8b\u4ee3\u7801\uff1a HTML<pre><code>&lt;center&gt;\u8fd9\u662f\u5c45\u4e2d\u7684\u5185\u5bb9&lt;/center&gt;\n</code></pre></p>"}, {"location": "yuyan/qianduan/1/1/#pre", "title": "\u9884\u683c\u5f0f\u5316\u6587\u672c\u6807\u7b7e <code>&lt;pre&gt;</code>", "text": "<ul> <li>\u4fdd\u7559\u6807\u7b7e\u5185\u90e8\u6240\u6709\u7684\u7a7a\u767d\u5b57\u7b26\uff08\u7a7a\u683c\u3001\u6362\u884c\u7b26\uff09\uff0c\u539f\u6837\u8f93\u51fa\u3002</li> </ul> <p>\u793a\u4f8b\u4ee3\u7801\uff1a HTML<pre><code>&lt;pre&gt;\n  \u8fd9\u662f\u9884\u683c\u5f0f\u5316\u6587\u672c\n  \u4fdd\u7559\u6240\u6709\u7684\u7a7a\u767d\u5b57\u7b26\n&lt;/pre&gt;\n</code></pre></p>"}, {"location": "yuyan/qianduan/1/2/", "title": "HTML \u5b57\u4f53\u6807\u7b7e\u548c\u8d85\u94fe\u63a5", "text": ""}, {"location": "yuyan/qianduan/1/2/#_1", "title": "\u5b57\u4f53\u6807\u7b7e", "text": ""}, {"location": "yuyan/qianduan/1/2/#_2", "title": "\u7279\u6b8a\u5b57\u7b26\uff08\u8f6c\u4e49\u5b57\u7b26\uff09", "text": "<ul> <li><code>&amp;nbsp;</code>\uff1a\u7a7a\u683c\uff08non-breaking space\uff09</li> <li><code>&amp;lt;</code>\uff1a\u5c0f\u4e8e\u53f7 <code>&lt;</code></li> <li><code>&amp;gt;</code>\uff1a\u5927\u4e8e\u53f7 <code>&gt;</code></li> <li><code>&amp;amp;</code>\uff1a\u7b26\u53f7 <code>&amp;</code></li> <li><code>&amp;quot;</code>\uff1a\u53cc\u5f15\u53f7 <code>\"</code></li> <li><code>&amp;apos;</code>\uff1a\u5355\u5f15\u53f7 <code>'</code></li> <li><code>&amp;copy;</code>\uff1a\u7248\u6743\u7b26\u53f7 <code>\u00a9</code></li> <li><code>&amp;trade;</code>\uff1a\u5546\u6807\u7b26\u53f7 <code>\u2122</code></li> <li><code>&amp;#32464;</code>\uff1a\u6587\u5b57\u201c\u7ed0\u201d\uff08\u6c49\u5b57 Unicode \u7f16\u7801\uff09</li> </ul>"}, {"location": "yuyan/qianduan/1/2/#_3", "title": "\u4e0b\u5212\u7ebf\u3001\u4e2d\u5212\u7ebf\u3001\u659c\u4f53", "text": "<ul> <li><code>&lt;u&gt;</code>\uff1a\u4e0b\u5212\u7ebf</li> <li><code>&lt;s&gt;</code> \u6216 <code>&lt;del&gt;</code>\uff1a\u4e2d\u5212\u7ebf\uff08\u5220\u9664\u7ebf\uff09</li> <li><code>&lt;i&gt;</code> \u6216 <code>&lt;em&gt;</code>\uff1a\u659c\u4f53</li> </ul>"}, {"location": "yuyan/qianduan/1/2/#_4", "title": "\u7c97\u4f53\u6807\u7b7e", "text": "<ul> <li><code>&lt;b&gt;</code> \u6216 <code>&lt;strong&gt;</code>\uff1a\u7c97\u4f53\uff08\u5df2\u5e9f\u5f03\uff09</li> </ul>"}, {"location": "yuyan/qianduan/1/2/#font", "title": "\u5b57\u4f53\u6807\u7b7e <code>&lt;font&gt;</code>\uff08\u5df2\u5e9f\u5f03\uff09", "text": "<ul> <li><code>color</code>\uff1a\u8bbe\u7f6e\u5b57\u4f53\u989c\u8272\uff0c\u53ef\u4ee5\u662f\u989c\u8272\u540d\u79f0\u3001\u5341\u516d\u8fdb\u5236\u503c\u6216 RGB \u503c\u3002</li> <li><code>size</code>\uff1a\u8bbe\u7f6e\u5b57\u4f53\u5927\u5c0f\uff0c\u53d6\u503c\u8303\u56f4\u4e3a 1 \u5230 7\u3002</li> <li><code>face</code>\uff1a\u8bbe\u7f6e\u5b57\u4f53\u7c7b\u578b\u3002</li> </ul> <p>\u793a\u4f8b\u4ee3\u7801\uff1a HTML<pre><code>&lt;font face=\"\u5fae\u8f6f\u96c5\u9ed1\" color=\"#FF0000\" size=\"4\"&gt;\u6587\u5b57\u793a\u4f8b&lt;/font&gt;\n</code></pre></p>"}, {"location": "yuyan/qianduan/1/2/#sup-sub", "title": "\u4e0a\u6807 <code>&lt;sup&gt;</code> \u548c\u4e0b\u6807 <code>&lt;sub&gt;</code>", "text": "<ul> <li><code>&lt;sup&gt;</code>\uff1a\u4e0a\u6807</li> <li><code>&lt;sub&gt;</code>\uff1a\u4e0b\u6807</li> </ul> <p>\u793a\u4f8b\u4ee3\u7801\uff1a HTML<pre><code>O&lt;sup&gt;2&lt;/sup&gt;   5&lt;sub&gt;3&lt;/sub&gt;\n</code></pre></p>"}, {"location": "yuyan/qianduan/1/2/#a", "title": "\u8d85\u94fe\u63a5\u6807\u7b7e <code>&lt;a&gt;</code>", "text": ""}, {"location": "yuyan/qianduan/1/2/#_5", "title": "\u5916\u90e8\u94fe\u63a5", "text": "<ul> <li>\u7528\u4e8e\u94fe\u63a5\u5230\u5916\u90e8\u6587\u4ef6\u6216\u7f51\u9875\u3002</li> </ul> <p>\u793a\u4f8b\u4ee3\u7801\uff1a HTML<pre><code>&lt;a href=\"http://www.example.com\" target=\"_blank\"&gt;\u70b9\u51fb\u8fd9\u91cc&lt;/a&gt;\n</code></pre></p>"}, {"location": "yuyan/qianduan/1/2/#_6", "title": "\u951a\u94fe\u63a5", "text": "<ul> <li>\u94fe\u63a5\u5230\u9875\u9762\u5185\u6216\u5176\u4ed6\u9875\u9762\u7684\u7279\u5b9a\u4f4d\u7f6e\u3002</li> </ul> <p>\u793a\u4f8b\u4ee3\u7801\uff1a HTML<pre><code>&lt;a href=\"#section1\"&gt;\u8df3\u8f6c\u5230\u67d0\u4e2a\u4f4d\u7f6e&lt;/a&gt;\n&lt;a href=\"page.html#section1\"&gt;\u8df3\u8f6c\u5230\u53e6\u4e00\u4e2a\u9875\u9762\u7684\u67d0\u4e2a\u4f4d\u7f6e&lt;/a&gt;\n</code></pre></p>"}, {"location": "yuyan/qianduan/1/2/#_7", "title": "\u90ae\u4ef6\u94fe\u63a5", "text": "<ul> <li>\u94fe\u63a5\u5230\u7535\u5b50\u90ae\u4ef6\u3002</li> </ul> <p>\u793a\u4f8b\u4ee3\u7801\uff1a HTML<pre><code>&lt;a href=\"mailto:example@example.com\"&gt;\u53d1\u9001\u90ae\u4ef6&lt;/a&gt;\n</code></pre></p>"}, {"location": "yuyan/qianduan/1/2/#_8", "title": "\u8d85\u94fe\u63a5\u7684\u5c5e\u6027", "text": "<ul> <li><code>href</code>\uff1a\u76ee\u6807 URL\u3002</li> <li><code>title</code>\uff1a\u60ac\u505c\u6587\u672c\u3002</li> <li><code>target</code>\uff1a\u6253\u5f00\u65b9\u5f0f\uff0c\u5982 <code>_self</code>\uff08\u5f53\u524d\u9875\u9762\uff09\u3001<code>_blank</code>\uff08\u65b0\u7a97\u53e3\uff09\u3001<code>_parent</code>\uff08\u7236\u7a97\u53e3\uff09\u3001<code>_top</code>\uff08\u9876\u7ea7\u7a97\u53e3\uff09\u3002</li> </ul> <p>\u793a\u4f8b\u4ee3\u7801\uff1a HTML<pre><code>&lt;a href=\"http://www.example.com\" title=\"\u793a\u4f8b\u7f51\u7ad9\" target=\"_blank\"&gt;\u793a\u4f8b\u94fe\u63a5&lt;/a&gt;\n</code></pre></p>"}, {"location": "yuyan/qianduan/1/2/#_9", "title": "\u6ce8\u610f\u4e8b\u9879", "text": "<ol> <li><code>&lt;a&gt;</code> \u662f\u6587\u672c\u7ea7\u6807\u7b7e\uff0c\u901a\u5e38\u5728\u6bb5\u843d\u5185\u4f7f\u7528\uff0c\u4e0d\u5e94\u5305\u542b\u5757\u7ea7\u6807\u7b7e\u3002</li> <li>\u6bb5\u843d\u5185\u5e94\u5305\u542b <code>&lt;a&gt;</code>\uff0c\u800c\u975e\u53cd\u8fc7\u6765\uff1a</li> </ol> <ul> <li>\u6b63\u786e\uff1a    HTML<pre><code>&lt;p&gt;&lt;a href=\"#\"&gt;\u6bb5\u843d\u6587\u5b57&lt;/a&gt;&lt;/p&gt;\n</code></pre></li> <li>\u9519\u8bef\uff1a    HTML<pre><code>&lt;a href=\"#\"&gt;&lt;p&gt;\u6bb5\u843d\u6587\u5b57&lt;/p&gt;&lt;/a&gt;\n</code></pre></li> </ul>"}]}